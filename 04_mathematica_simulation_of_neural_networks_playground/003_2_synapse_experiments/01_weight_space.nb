(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    469586,       8891]
NotebookOptionsPosition[    466896,       8839]
NotebookOutlinePosition[    467279,       8856]
CellTagsIndexPosition[    467236,       8853]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "r", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "logisticRegression`"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"net", "=", 
        RowBox[{"NetInitialize", "@", 
         RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "Tanh"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Input\>\"", "\[Rule]", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Output\>\"", "\[Rule]", 
            RowBox[{"NetDecoder", "[", "\"\<Scalar\>\"", "]"}]}]}], "]"}]}]}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"NetInformation", "[", 
        RowBox[{"net", ",", "\"\<MXNetNodeGraphPlot\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"NetInformation", "[", 
        RowBox[{"net", ",", "\"\<SummaryGraphic\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"NetInformation", "[", 
        RowBox[{"net", ",", "\"\<Arrays\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"net", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.45"}], "x"}], "+", 
            RowBox[{"0.09", "y"}], "+", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0.1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0.1", ",", "1"}], "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}]}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"net2", "=", 
        RowBox[{"NetInitialize", "@", 
         RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Tanh", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Input\>\"", "\[Rule]", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Output\>\"", "\[Rule]", 
            RowBox[{"NetDecoder", "[", "\"\<Scalar\>\"", "]"}]}]}], "]"}]}]}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"NetInformation", "[", 
        RowBox[{"net2", ",", "\"\<MXNetNodeGraphPlot\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"NetInformation", "[", 
        RowBox[{"net2", ",", "\"\<SummaryGraphic\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"NetInformation", "[", 
        RowBox[{"net2", ",", "\"\<Arrays\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"net2", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.45"}], "x"}], "+", 
            RowBox[{"0.09", "y"}], "+", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0.1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0.1", ",", "1"}], "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}]}],
       "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756204008356121*^9, 3.7562040103459473`*^9}, {
  3.7562058545342913`*^9, 3.756205862184671*^9}, {3.75620591121039*^9, 
  3.75620592826964*^9}, {3.756205976672895*^9, 3.7562060377185717`*^9}, {
  3.7562060814914837`*^9, 3.756206174061301*^9}, {3.756206210499448*^9, 
  3.756206239179604*^9}, {3.756206434111858*^9, 3.756206442460671*^9}, {
  3.7562065133001328`*^9, 3.756206546684496*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c86ecefd-ae28-48c0-a4a4-1d8eabae6aaa"],

Cell[BoxData[
 TemplateBox[{
  "r","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"r\\\\\\\"\\\"}]\\) appears in \
multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"logisticRegression`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"cephalon`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"logisticRegression`\\\\\\\"\\\"}]\\) may shadow \
or be shadowed by other definitions.\"",2,2,3,16680953862512246909,"Local",
   "logisticRegression`r"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.7562735695064993`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"51ca7454-3a8b-43a6-848d-2dd85cbe60cb"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"], 
                    ImageSizeCache -> {24., {0., 24.}}], Appearance -> None, 
                    ButtonFunction :> (Typeset`open = True), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, 
                   ImageSize -> {Automatic, 24}], 
                  GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                   ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    StyleBox[
                    
                    TemplateBox[{"\"Number of layers\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["2", "SummaryItem"]}}, 
                   BaselinePosition -> {2, 1}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                BaselinePosition -> {1, 3}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {
                    Offset[0.], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                    Offset[0.], {
                    Offset[0.4]}, 
                    Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"], 
                    ImageSizeCache -> {24., {0., 24.}}], Appearance -> None, 
                    ButtonFunction :> (Typeset`open = False), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, 
                   ImageSize -> {Automatic, 24}], 
                  GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                   ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                  GridBox[{{
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 2}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NetDecoder["Scalar", 
                    Association[], 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", Annotation[#, {"Inputs", "Input"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    ImageSizeCache -> {167., {567., 578.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}]}}, BaselinePosition -> 
                   Automatic, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                BaselinePosition -> {1, 1}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {
                    Offset[0.], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                    Offset[0.], {
                    Offset[0.4]}, 
                    Offset[0.]}, "RowsIndexed" -> {}}]}, 
             Dynamic[Typeset`open], ImageSize -> Automatic], 
            BaseStyle -> {
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
            BaselinePosition -> Baseline]], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("NetChain[<>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     TemplateBox[{GraphicsBox[{{
          GrayLevel[0.8], {
           
           LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
            1.0000000000000002`}}], 
           LineBox[{{-4., 1.0000000000000002`}, {-3., 1.0000000000000002`}}], 
           
           LineBox[{{-4., 2.0000000000000004`}, {-3., 1.0000000000000002`}}], 
           
           LineBox[{{-3., 1.0000000000000002`}, {-2., 1.0000000000000002`}}], 
           
           LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999, 1.}}], 
           
           LineBox[{{-0.9999999999999999, 1.}, {6.123233995736766*^-17, 
            1.}}]}}, {
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
             0.6000000000000002}, {-0.25, 0}, 
             Offset[8], {1., 1.}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "2"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{"b", 2}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
             1.0000000000000002`}, {-0.25, 0}, 
             Offset[8], {1., 0.}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "1", "2"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{1, 2}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
             1.4000000000000004`}, {-0.25, 0}, 
             Offset[8], {1., -1.0000000000000002`}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "1"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{1}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-2.4000000000000004`,
              1.0000000000000002`}, {-0.25, 0}, 
             Offset[8], {1., 0.}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{"b", 1}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
             1.}, {-0.25, 0}, 
             Offset[8], {1., -2.220446049250313*^-16}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{"b", 1}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-0.3999999999999999, 
             1.}, {-0.25, 0}, 
             Offset[8], {1., 0.}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{"b", 1}, "\[Times]"], "Tooltip"]& ]}, {
          GrayLevel[0], {
           TagBox[
            TooltipBox[{
              AbsolutePointSize[4], 
              GrayLevel[0.5], 
              PointBox[{-4., 2.4492935982947064`*^-16}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "0"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Inputs.Input\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"null\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 0}, {
                Style["name", Bold], ".Inputs.Input"}, {
                Style["op", Bold], "null"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[4], 
              GrayLevel[0.5], 
              PointBox[{-4., 1.0000000000000002`}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "1"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Nodes.1.Arrays.Weights\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"null\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 1}, {
                Style["name", Bold], ".Nodes.1.Arrays.Weights"}, {
                Style["op", Bold], "null"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[4], 
              GrayLevel[0.5], 
              PointBox[{-4., 2.0000000000000004`}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "2"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Nodes.1.Arrays.Biases\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"null\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 2}, {
                Style["name", Bold], ".Nodes.1.Arrays.Biases"}, {
                Style["op", Bold], "null"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[6], 
              GrayLevel[0], 
              PointBox[{-3., 1.0000000000000002`}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "3"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Nodes.1\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"FullyConnected\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 TagBox[
                  GridBox[{{
                    StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                    StyleBox[
                    "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, {
                    StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                    StyleBox[
                    "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {False, {True}, False}, 
                    "Rows" -> {False, {True}, False}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.85]], "Grid"]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 3}, {
                Style["name", Bold], ".Nodes.1"}, {
                Style["op", Bold], "FullyConnected"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Grid[{{
                   Style["no_bias", Bold], 
                   Style["False", ShowStringCharacters -> True]}, {
                   Style["num_hidden", Bold], 
                   Style["1", ShowStringCharacters -> True]}}, Alignment -> 
                 Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
                 GrayLevel[0.85]]}, {
                Style["inputs", Bold], {{0, 0, 0}, {1, 0, 0}, {2, 0, 0}}}}, 
              Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[6], 
              Hue[0.08, 0.9, 0.8], 
              PointBox[{-2., 1.0000000000000002`}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "4"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Nodes.2$0\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"tanh\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 4}, {
                Style["name", Bold], ".Nodes.2$0"}, {
                Style["op", Bold], "tanh"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {{3, 0, 0}}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[6], 
              Hue[0.11, 1, 0.75], 
              PointBox[{-0.9999999999999999, 1.}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "5"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Outputs.Output\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"_copy\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 5}, {
                Style["name", Bold], ".Outputs.Output"}, {
                Style["op", Bold], "_copy"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {{4, 0, 0}}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[4], 
              GrayLevel[0.5], 
              PointBox[{6.123233995736766*^-17, 1.}]}, "Null"], 
            Annotation[#, Null, "Tooltip"]& ]}}, 
         StyleBox[{{{
             InsetBox[
              FormBox["0", TraditionalForm], 
              Offset[{0, 5}, {-4., 2.4492935982947064`*^-16}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{0, 5}, {-4., 1.0000000000000002`}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{0, 5}, {-4., 2.0000000000000004`}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{0, 6}, {-3., 1.0000000000000002`}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{0, 6}, {-2., 1.0000000000000002`}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{0, 6}, {-0.9999999999999999, 1.}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, 5}, {6.123233995736766*^-17, 1.}], {0., -0.17}, 
              Automatic, {1, 0}]}, {
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, -5}, {-4., 2.4492935982947064`*^-16}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, -5}, {-4., 1.0000000000000002`}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, -5}, {-4., 2.0000000000000004`}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"FC\"", TraditionalForm], 
              Offset[{0, -6}, {-3., 1.0000000000000002`}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"t\"", TraditionalForm], 
              Offset[{0, -6}, {-2., 1.0000000000000002`}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"c\"", TraditionalForm], 
              Offset[{0, -6}, {-0.9999999999999999, 1.}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, -5}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
              Automatic, {1, 0}]}}}, FontSize -> 7, StripOnInput -> False]}, 
        ImageSize -> {230.00000000000003`, 125.85000000000001`}, AspectRatio -> 
        Full, PlotRangePadding -> 0, 
        ImagePadding -> {{24.00000000000002, 6}, {15., 10.850000000000005`}}, 
        ImageMargins -> 0, 
        BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"Tensor\"", "\"FullyConnected\"", "\"tanh\"", "\"_copy\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                   TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                   TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 0.9, 0.8], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 0.9, 0.8], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"], 
                   TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"], "\"\""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontSize -> 8, FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"AbsolutePointSize", "[", "4", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 0.9, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.08, 0.9, 0.5333333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "0.9`", ",", "0.8`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 0.9, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 0.9, 0.8], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "8"}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
               RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
               
               RowBox[{
                "LegendLayout", "\[Rule]", 
                 "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{
       {GrayLevel[0.7], 
        LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
         1.2246467991473532`*^-16}}], 
        LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
         6.123233995736766*^-17}}], 
        LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}, {InsetBox[
         GraphicsBox[
          {GrayLevel[0.7], 
           PolygonBox[{{-1., 0.3333333333333333}, {0., 
            0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
            0.3333333333333333}}]}], \
{-2.4000000000000004, 1.4695761589768238*^-16}, {-0.25, 0}, Offset[8], {
         1., -6.123233995736765*^-17}], InsetBox[
         GraphicsBox[
          {GrayLevel[0.7], 
           PolygonBox[{{-1., 0.3333333333333333}, {0., 
            0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
            0.3333333333333333}}]}], {-1.4, 8.572527594031473*^-17}, {-0.25, 0},
          Offset[8], {1., -6.123233995736766*^-17}], InsetBox[
         GraphicsBox[
          {GrayLevel[0.7], 
           PolygonBox[{{-1., 0.3333333333333333}, {0., 
            0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
            0.3333333333333333}}]}], {-0.4, 2.4492935982947065*^-17}, {-0.25, 0},
          Offset[8], {1., -6.123233995736766*^-17}]}, 
       {EdgeForm[AbsoluteThickness[1]], 
        StyleBox[{
          {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
           DiskBox[{-3., 1.8369701987210297*^-16}, 
            Offset[{2., 2.}, {0., 0.}]]}, {
           {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
            0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
            RectangleBox[Offset[{-10, -10}, {-2., 1.2246467991473532*^-16}], 
             Offset[{10, 10}, {-2., 1.2246467991473532*^-16}]]}, InsetBox[
            
            GraphicsBox[
             GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
               0.9, 0}}, {
               {Opacity[0.2], 
                LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
               {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
                PointBox[{1, 5, 2, 3, 4}]}}],
             ImageSize->18], {-2., 1.2246467991473532*^-16}]}, {
           {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
            RectangleBox[Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
             Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJzFl0toE1EUhsdOlYpUu1RwYRdKqeCjCrFLrTYUmS4iWUkwj/tIC400tfja
RDcuFArdFRFfce6dASmKIIgL3bnQjVtBBAWpCELrQlGM/40z6Vhaa8nN3B9O
IJmZcz/OI+dMd/50irVZljXRgY9U7uzhcjl3/kQXvqRLEyO8RMlQ6QzltHwo
b+PHbbAeWLvVEjnNPJzJ3NlEqbubUjnEmHdKF1REa+CrrSsWxH7G5DnYQ0a9
94zKWtRM8I2O+lsZExWc/24pD+wn7A2j4hnuuRsnH2P+FkbkNZz/rcFDxGew
3FC5RE53pdO+3QKmVfkQi+Ng+7gYJ+8RJ+6xGHj+yafOB9eVkItT+ZJzcTBm
pqgafNnszQ7U/f1GzJi8WKlU2gyyKdX5xsf9jZR6TwK2BULcI4a5QjnI6QZG
vMdh/XMu95qGCmXb9jC4RBC3L5z7vaaZoupPZGYDtnlC/AOmeaJC/Y8kk5OK
7Qdq76gmt44O6+0ZuJQcnPzV15eq7dvjTGnyq0Uqj4jZV5XXROKkq8uvDnF+
bye4PgW9egsdMmyaKRQh1e3g+vCHTT5V/yuWxrw0o2JR7ADX26BXX+TzDzqD
S8b56jsb9ebCeZrNznZFLhvlU3sQuL4HOX2+hE3JCB96tFvtROGsx652W83/
ZW6NlU/NJ8TpemS/XeBEFNRuvsIjLeUbG6tuxn42gPl+GSyvo7s3pcJVPbuK
C618nHpXUePV+r7/137bsHnMrRn1TvWfLrXyLcOjav8V6muaFzxnhRqLj4+I
C5zIHGI0qN5PGJtZr9N/s/oNYYBWKw==
                "], {{0, 25}, {40, 0}}, {0, 
                255},
                ColorFunction->RGBColor],
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                Interleaving -> True, Magnification -> Automatic],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSize->20,
              ImageSizeRaw->{40, 25},
              PlotRange->{{0, 40}, {0, 25}}],
             TraditionalForm], {-1., 6.123233995736766*^-17}]}, 
          {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
           DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
         FontSize->10]}, {
        StyleBox[{
          InsetBox["\<\"Input\"\>", 
           Offset[{0, -7}, {-3., 1.8369701987210297*^-16}], {0, 1.}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"1\"\>", 
           Offset[{0, -13}, {-2., 1.2246467991473532*^-16}], {0, 1.}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"2\"\>", 
           Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Output\"\>", Offset[{0, -7}, {0., 0.}], {0, 1.}, 
           Automatic, {1, 0}]},
         StripOnInput->False,
         FontColor->GrayLevel[0.5]], 
        StyleBox[{InsetBox[
           TemplateBox[{"\[Cross]","\"\[Cross]\"","\"2\""},
            "RowWithSeparators"], 
           Offset[{3.3677786976552205*^-16, 5.5}, \
{-2.4000000000000004, 1.4695761589768238*^-16}], {0., -0.17}, Automatic, {
           1., -6.123233995736765*^-17}], InsetBox[
           TemplateBox[{"\[Cross]","\"\[Cross]\"","\"1\""},
            "RowWithSeparators"], 
           Offset[{3.3677786976552215*^-16, 5.5}, \
{-1.4, 8.572527594031473*^-17}], {0., -0.17}, Automatic, {
           1., -6.123233995736766*^-17}], InsetBox[
           TemplateBox[{"\[Cross]","\"\[Cross]\"","\"1\""},
            "RowWithSeparators"], 
           Offset[{3.3677786976552215*^-16, 5.5}, \
{-0.4, 2.4492935982947065*^-17}], {0., -0.17}, Automatic, {
           1., -6.123233995736766*^-17}]},
         StripOnInput->False,
         FontSize->8,
         FontWeight->"Thin",
         FontColor->GrayLevel[0.7]]}},
      AspectRatio->Full,
      BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
      ImageMargins->{{0, 0}, {0, 0}},
      ImagePadding->{{24., 26.5}, {26.999999999999996`, 14.}},
      ImageSize->{215.5, 41.00000000000001},
      PlotRangePadding->0], 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", 
        RowBox[{"{", "0.`", "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.0686531066894531`"}], ",", "1.4120012521743774`"}],
           "}"}], "}"}]}]}], "\[RightAssociation]"}], 
     TemplateBox[{Graphics3DBox[
        GraphicsComplex3DBox[CompressedData["
1:eJxknQVYVE0Xx+1uxe5+jdfuGOzubrATC7uwFcXGwEJFRUVFFBURFwmRUFm6
2SCXVF87+PYu8z9zd7/v+Z5nn/2917uzv73MmTt3zpkm81dPXFSsSJEif8oW
KVJc/3pox5P7Dhc8GF71yObkqWtsxK9ZWeNL+8u5xcqz1xTvnyXuihjwTs4d
j458oWjzokO5dq/C5LzIJX9/xcrzayJWxUfJuapYl/eKBxsfXXn4Pc7oc2Pb
hyvyJ39a+tEs2ej4RrWjFRcM/1PLufcvZZziRZkXO3s7a40+13ZqkiJ+U9yC
+Kepcm7eUalS/E77OXy7f7oRV8zQKBpMrfdvg4hMo/Of89Mq+vv3qf5Kk2X0
ffOrpirmdZ39fe7HHKP2bx2YpthzY3tiQUGekbdh09IVeA+v0nk2JCjovYyb
n451YfAs40XatztMnmXcwtz1CXmW85clfMmznNvuCybPMu5tp1GSZxlvXC8+
kjzLuKrRzVjyLP9erE8ieZYfHzxaRZ7l7YlPUpNnGbcxn6Qlz/Lzl7ybQp7l
fp5pU8kz/Enfq2j3YDpOxi16P/Gh9zJu86TCEwbPMt74eul9DJ7lx99p8oA8
y8/fi3mTZxkvcuDDW/Is444tToeSZ3n7h1yIIM/y41PXxZBnGTfvWDeBPMs/
N8g2mTzLv1eahZo8y4+PTdKQZ/n567AU8gxPkoe5ZcLJs4ybm6cKvzLueGeD
OE7GVbdve5BnGfd2GOPI4Fl+/OT46+RZ/rnrs16QZ/nn2tV4Q57l5/fb9Z48
y4+PnBhOnuXfd2OfaPIsP8/mz3HkWX6e0huTyLO8/ZpkFXmWHz9viYY8w4d0
XaW0iyHPMm6jHBdBnuXcY2gonVfGVamd3tJ7+fmH9FWQZxlvzOzvMXiWce8O
A46RZ/l5Qie4k2c57zfZlzzLedWwYPIs4+YlyoSRZ/n3KvgbSZ7l7ekVEEue
Zdxx4axE8iz/3MhZKvKM7y3xWT8TyLOMFxlvEUueZdzm6alI8izjqlLnlPR5
RufJCKL38s+9uNCHPMvPU3zFYwbPMm6ek7KDwbP8+JBFD8mzvJ09jnuTZ/nn
+jQIJM/y81f2CCXP8va7eUWQZ/l5ztvHkGcZb/yzdwJ5xveT2mPzWEWeZdz7
S80k8izni46Jv38Zt4gKFdexjKuGaMXvIeONx58X55Ufb9/SnzzLz3+2lAd5
lvP2Va8weJbxIv82diLPMu445KgneZa3x2rBG/IsP351yHvyLG+n76Zw8iz3
83JuNHnG95A8v3iqIc8yXuRoNxGH5Mc/by/6UxlXFXkWT55lvHFB2RjyLOMW
PdtGUPvk57/bOJTey8+/WhtAnuXH/774ijzL2x85/i6DZzmveu8keZaff9xn
d/Isb+fDG77kWcYd9zYKIc/y77uqfRh5RnsNcfxACnmW8SLt2om4LuM2tk9E
fJJxi6GNVORZfp6/sQnkWca9i/aPJc8ybn7DKpLaLf/cpWuV9F7ODzsEkWcZ
V+XU8CHPcj4w0I3Bs7ydG1+sZ/AsP3/2ZFfyLD/+n2Rv8iz/XroVgeQZ7ZKO
d2+aRp5l3KZGXgp5lnHvo1dEvJdxx80dNeRZxi1cnVTkWcbN2bdE8iznj1eK
617eznH3xe8nP38jWTvk7R8x6h15lrd/bbQfeZYfv3bRc/Isb0/FgxcZPMvb
823hTfIsb0+R9i/JMz5f+lynY2IcL+Oqk7vSyLP8+FJTxPhJxh2TK6aQZxm3
mXxHQ55l3Lx6K9H/yvm9SqIfkZ8/xz6ePMt4kbLp0fQ95cefKBVB7+XHN/zy
gTzLv2/amQDyLOcXfnmRZ/n3mljhDoNn+fm3dztDnvE5Un9S710GeZZxVROV
GN/LuMX52DTyLOclnotxlYw7tt6aQp5l3LxhIxHPZNx72S3RL8u4jVkVFXmW
H2/nkUCe5fxavVj6/vJ22oyMpPfy878cpSTPcj/3RweRZ/n5O/q/Js/y86xt
5Ub34Tif5D9ULe4/ZdzGrIa4X5Jx81//ZpBn+XkiOopxqoyrzGqnkWcZt7DS
ppBn+fmjT4o4Jz/etamGPMu4Y5S9ijzLj98YnUie5TxvpPi95Z/7/LBot9xD
1vkw8iw/T/u/IeRZfnz/Q37kGf9O4r6hOvIs4+Z9G+nIs4yrbk4X91Ey3rj/
tgzyLOfj94vxq/z8QzakkWcZL/J0hBg3yLj37qIp5FnGHVMuasizvJ0naot+
R37+I3lJ5FnGLd5ax5Mv+ecW84um93Jvcepw8iz/XqHOH8gz/rvUnhJXxLyJ
jDe+WlLc58v59pk68izn8Q7i/krGvb/7ZZBnGS9SN1qMa+X88oc08iw/f5n7
Yjwh4xZNrVLIs/x7laom+nH5edh50R/JPze+iIo8y7hN+QsJ5FHGHTv9iKH3
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
/6ulKXFfvon5t/0vd5/Z2zuEXWo/YsjWWT7kE6+bnXrt9nByo+tTdSdFqWkb
xDa3bhl65tp0uj5PND675lTzQNb3ZRuFreoR+WTnhlUe2OAte5OwesK9n6/J
Z17FH/c/mgWwwx4zJ42IDiKfV/fdHX2t0hvWYrHileNzJfkcw+cPpetTPu+6
59/jDffp259bZc4ym9di/q3zTXMvqf3Xz/5qY62IIZ+aep9mafXtb7gw9bf9
gQTyeerUjZ9S+x+2ObGidlkV+RxQdsoFqf0FfaLnX32oJp8fd5Xq+Unf/g2j
hjm07C7mPx2/PouS2u8xK6mi8yXh+YDBcxjL7HZu+PTj78hvgmFcp2RJpyfd
H+PvR57xWnZ9L8ujds/Is23ukWJHHoay15Y7bPeMs6d+QGP4XUKZVa+8ciPT
75Bn66CtAzeM/8DcBll+c6ujIM/NB7RTNx/xnoXHePxoufkteQ7j84d6z1fl
85z7NhyKldq/qPRaW/uI9+Q5oaPaWWp/uPLW9bVO4eS5a3avzVL7ezlOb27u
Gk2ej94+NUxq/5KX0zZGHIgnz9r5WTW1+vYnfLtTpWizZPK8se+hEKn9X5yc
R9w0F/OcLR73WtFC336X+i3fZX7QkOe3Dj5z/adFsTqlelXUthTzb40M441I
9rbRyX8Xaz+Q3w1Vrf9Yj49k/rsmtB3XNoA849U9vcPar2tfkucWh1pcaj4i
gvU4UKbB5kNO1N/uGLRzxXb/cHZQPSf8VBlH8hz5N6p3xIBw5mr3Kq9/zxfk
uR2fP5Q8y+c530wKvCG1f/+n3vOHufiS54aVm66X2j//q2+7nTtCyPNGw+8b
yda6JHlW2xcm5pP3h1d9p29/2OhrX3pfjiLPLQ2/ewTLcH1cXb0njjzv/L3P
VWr/4Iv1wuZ2SCLPUYbrIZyV2rCqteUHFXkut6X4P6U3xLGxFeZt1fQS82+W
hjgYy3zLN+n4Z0AkeX6W9yTg6apYtuRyr/eZtZXkt/K9iucq6WJYanj/2Lp2
geQZr7vq2KqOO3uTZ0UTRbdXmmh2o8G72msXPaC4ViuxVsma86JZmb3BEz0d
DpFnKz5/+Ec/TpPPc5bpXM5Kan+aRffrvotdybOFIV7EspHN52dvNn9Nnp87
e1Z4pm9/8NzfufOaBJHnKoY4or8u2pdyP2yhJM9LG626J7V/WWrU/D0HIsmz
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
Gz+/yKbxP3wu4e3F+B8+C+NLNo3/4RPtdOTjUspL4u1EfT9aj83bifE/fF7n
7cT4Hx7383Zi/G+6Dq0dH//D5yjeToz/4dPwsa/yWHvD833h05/XdUOdW/gs
vD/No/G/8fPfXBr/Gz+/yKXxP3wWxpdcGv9T3iJvL8b/xusT8lgSH5fCJ+rP
oc4tfN7h7cT4n9Zd83Zi/A+fq3k7Mf6Hx4m8ncv5+B/eDvD5mZLSwpHKYn3Y
Kc7bGRayiPU2P/l6s1n60XbrBHG/j+9b+Bww///Wm+H+Au/V3MMeaUJ5sOCF
58tnZaNvrOk3UrQT63926KP1i7K5RvtwS/997KJR10+Uv228/5CeF7Tc9vT5
75dG+0xLvEq7yuOutj6vkO1/bODNz+674XjkmUK2X6+BT1nYNGL/cj+FfD9a
iU/d26z6muQQhXwfVolPzNg83vxwGO1TTN/jhGr7ty1RCvk+lBKfFJOydEyf
OIV830SJR024/rvZW7G/OfjRcXWXLz8m9jcHn3M9rvTpehqFfN84ib9eevly
zSNif3PwYW1XTqqRmKKAT/zdnB37PurQHQX5BN8/o/LGygvfkk/wKg7MeYSN
C9XtAlf5OwwNnWlLPsHNzpdX/33/hHyCl3FVtj9WxZd8gmtXpGVmHQ0mn+DT
7NcPbJaqJJ/gkwftOtg3IZJ8ghfNbD/7t1Ms+QS3LHl+erneieQTPCJ6uZvP
KBX5BHfz3Bm6PVHsYw7ew/tkf6cJWtqHCzz2tIufubOpZyXbWvHW2US3QBPP
Sma+tlbbWQWhJp6VzC+79sKstq9NPOuPL/nqVLMfrszYs54/WJNb3sfSxLOS
lW6esOtrdTcTz0rWYk9Jz8XPXpt4VrLsnKodu/UJMvGsZJ+q10pYMkBp4lnJ
Nv7wiozvH2niWcn+JlaZ9btSrIlnJStTp/nSHi4JJp6VLOfzfr+eZVUmnpUs
Upljvuuq2sSzkl1YNHHckNpa8ox+fVpYkRs9r4n6m+C1uiYMvuYQSZ7Bg5t9
+mRXVNTvA+953OlQwh4f8gzu8mbWlUOPHlOdL/AUa69l79fvprpU4LsPdnzp
8PgBeQZfOOndMM+53uQZvN/mx6uK6t6SZ/AV+Uun5F0OJc8Ux345HvG6FkGe
wd+8ODGi75YY8gweOHp4tGPDBPIM/vRn9GR7u2TyDB7l3+qkg6WaPCNOev7T
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
         "], {{{
            RGBColor[0.880722, 0.611041, 0.142051], 
            EdgeForm[None], 
            Specularity[
             GrayLevel[1], 3], 
            StyleBox[
             GraphicsGroup3DBox[
              TagBox[{
                Polygon3DBox[CompressedData["
1:eJwtmXngDlUfxef36D7u2LOmSNubeosWUZKlsrWgKO3WNu2pLCFCoexLVJJS
0b4pJEKkFWWJIhJClrJkCb2f8575Y9zP75pnnnlm5n6/55w5scP9Le/LJUny
DP8UYmwYkuRoxh/4+1kmVsFfwY/nk2QT3IfxReZ/gRczPxb+EV4Ij4NXwl/C
E+A18CJ4NLwMng/35vPHw9UZX2B+Nfwd8y/B6+Dv4THwcngBPAkuAZeAdzHu
YPuN7Szm72dsy/w58INwe7g6fB/cBj4bfgBuB98JT4HHwZ3g1+Fncz7eVrb1
bCdyTt8zvlbIv1/XYXdBkkzk77XwEua2Mf6Z+Fr8wbaTbQPb/mx+KVt39p/B
+HrOc79n+z/D/ArGL5jvCk+DJ8Pd4OnwFLgL/LHOAX4Qfg9+CX4AfheeqGsI
z4bfhfdk36vz2p2dj85rL9tfbNt1Huyve/wy44Fs/tfsOu7Ifvv2bH5zNqdr
zU9PzuQz9zDezAH2ZccvydaXazU/ex70uS3ZZ3XtdA0/Z/8p2T2dzPh3dlwd
szN/v6/zYZ8z4Lvhm+Ca8MPwbfD8yHfy9x0c/wu4DdwJ/hy+Cb4dXgDfAt8J
fw3fpnOFv4Q7wnfBLRlH6Hw55sXZc9IB/op9btV3s8838O3wvfBljIN0D9nn
O+bv1nPG/A/ww/BD8By4NdwR/ghuCt8AT4WbwNfD8+Ab4dvgZfCj8CPwIvge
PZfwt/Bdel713MEPwZ3hxfC9Old4KfyIrgv8SfD563d0YHsJHsl53gFPhsfC
VXVt4OvgSvDN8JVwRZ0XfBl8uq4ZfAN8AdwVvhOupXOEb4fP02+Fb4Vrw93g
TvD5cBf4DrgC3BpuApeHr4Ubw8fA18FN4dN0D+Hr4evhcfBA+Ab4WXgQ3B6e
CI+AT4DbwVfB1XRP4FvgE+H28NXwf+Bb4WvhyvAtcDO4CtwWbgGfqmsPt4aP
h9vAzeE+8Gfwe/AweBH8GTwU/g6eDf/LVl81hjEy3wS+AC4FXwU30GKCGzCc
DRfAF8PnwIXhxvD58PPwN/Cn8GPcv1JwI+5hPz1P8EmMJdmnBVyffZ6Dv4Zn
wincFK4NF4ebwXXh/boH8GmqT8xfrech53UwBH4MPqD7Cp/O+Jfqo2ob4062
s+AqjFt0b+CKjEfY6sHVVa9UN+ETGEtwzOZwPXid7g1civFX3Q/4aMbjeD4r
677wu05LWSt85p/C7AtfDe+Gi8A11DPgs+DHVI/43MlwO9UG5tfx908cbyq8
By7H/Jfwengz8x/DR+BTVJvhY/jsJYW8Fi6BxzOW4/8vgIfAReFzUt/vo6Jr
5P6sFqteHchqluqZ6trGrD6pTqkfqPYMZuyV8z67s7qn46jmLs1q3easvun+
qo6qbxRWXYDz0d+1N6u3qmFDGXvnXMOehnvmXCeegnvkvNZfSdyPO2drfBR8
HzwBHpZznXgZHp1zTZoEj4H7ZnV1EjwY/hR+Gx4Jz4U/zLn2jIeHwL3gt+EJ
cE/4LfiFnGvVG/DzcA/4TXh8dhzV9nnwCHgJPBceDi+G58CD4K/gGfAoeB48
VfoBngO/Dz8BL4A/ggfAC+Fp8JPwF/DH8EDdf3h69rt0/h/oOeCaXs7fN3KN
n2acyfxbzPeHP4RfzbkPjIafzLm+Pgc/nXPNfgLumnN/GAn3z7kPjIKfyLkP
jIEHwNfBT8Ld4LbwMLhPzrVXPaUffA3cD34EvhbuD3fJ+Rwfhe+Gr4R7wvfm
3E+ehwfnXONfgIfCT8GfwG/CLeDe8ANwP/gD+BW4GdwLlmC7Cu4DPwi3gvvC
D+fc7x6HH4KvgHvA98DN9YzC98ObuIb7GD9hHX0IN1a95nq+B18KXwMfy3gZ
+9dhv/+qv8FXZHVYNecSrX34cviinDWY6nNL+Fz1J7gVfFD9Bj6OcZs+Axdl
LMs+DeGa8MlwK7gh/I++D67EeBLzLeFL4TLwpfB58LGs64b8vZ3zr5T6/HfC
J6XuK3vhMvBF8O9webg+vBUuC9fVuoUrpv692+AKcAP4D7gcXA/eAv+h7+N7
U8a96j1wecZDbGfAlRkPs50JH88Y+FxN+FS4EFwDPgXOwefCJ6u/RPewpRz/
cHTP+x4eGf0dF3H9x0Rfi3rw6OjrWBc+FN3nlrD/UYznccz/ZD1Idf4kuAhc
Gz4DLgbXgavB29kqwcUZ97CdApdj/JvtVLgC446c63lJ3evUPXsP37Vb94n5
soy7dG/gMoylVX/hGjn3I/XBc+Gi8IXwmTn3IPWL0ozPRF+7+vyW4zh+I/bb
wfErp9ZOf8INU/uHCno2U+vvinDt1H26GNwotQ85RportX84Vtc1tR7az3Eu
TN3jizN/cWo/U1bPeGrvUR4+P3XNKgLXSV3LSsBnptbo/3Kc/6bW4ofhmqlr
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
piqd3yl4f2n4f4Prqjzgj9G5m/LPgrzf76j/5vKuk8q65gXn8Mo0JFr03kcZ
5qfBdVt5xbsxyz7Z3gp+hyKP9g58V2Jf9kZwzi+/1gGukljzj4r2/Mp/Ngdn
8vJlOpae/8783xbmxyb20a8HZ/jyce2Dc2D5AmVI6pVVGTsGe3x5/b3BWZze
lXwUnFlJZ1bOO2OXr78jOLuQ53o/OKeSzlQerGdsOMe5PTg/kba8OThHkv68
JTgjkp68NjiLkH5rE5zJSFtek52P7qmyaWUa0tsfBmdx0rpNg/WSPNGdwbmN
spf+WZ+Vtrki2GdJn9+aPW/6jWOCMy5p9Z7BWZk0+W3BOY+08Q3BuYr08D3B
mYwynC7BWZa07ni4U2Kd/0hwliJP+nCwvtKz3SI4N5MuvSo4w5EubQdXS6yN
mwfnVNKo04KzPvmF64MzK+nkZsE+Udr13uB8RvnS28FZpTT/fcF5kfKZ++GL
EvvlrsF5nbT6dcHZkXTpK8HvpKRDWgdnRNLhR+Wd/cpHtw3Ox6TnRwfrFmmY
x+ArEvuRYnm/+5DXHsL8jYn9y+XBXky+Se+gpQuaolt7BWeP8juXBet5ed6/
4amJ35cVyuqz1tTg4AxTfuSJ4FxRvunJ4OxR/iioFyb29f8Dd+rpsA==
                 "]], 
                Polygon3DBox[CompressedData["
1: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
mk5fWRPVMifUqZUTwq/BZ8GLwj80qf+719EX3zfRI7vV0Q/Hco0JuNZ0vmO1
WBtteyTxuYkfRLwQn4DPViRe2uiBw+roCTXZZex/VEWrTcT2Ovtn89liA5PT
HvPZ1Rmv48OvwGfAC8Njwc/DJ9epz2PCz8En1anfY8DPwifW0QNjwy/Ap9TR
IyPDT8DHwPN1+uIN+Bx4cXgC+FXnHrzIwNTvJ+Fj4fnhleH94R34jVfxW+7k
+U4Bjwl/ZD/SZH78t5t/23D8efBx8MPwtvD51k/4EXg7+ALfB/wovAZ8iPkC
vh5ezZ4B3hm+Fl6xTf+1BnwZvDp8MGwTeh28NXwuPAweAb/fi15Yp6S+bUX8
TMcP/JDxJnN/U37f4/YTxC/395vj4Td70U+rlNTvt3vRT6uV1Pvt2/RvJ8KP
cfwHveiL9Urq0Ru96LuVS+r5lhx/hu8XfpDjd2qjV8+An4I/60UvbAKPy/Gf
9qIHNobHgZ/rRS8vUqLnVuX8A+Gd4Gv60SvrW6/q9J/PcvxK8MIl+vKZXvTX
giX68ele+t3BJXr0+V70+6Il+m0Frr+BYxm+1P6jzfVXUPfDr/WiR2X10b97
0VvrltTrT3rRLxvBY8Mf9aKn7I+t7x/2ot/WL6n/H8M7wBvCY8FnNMklU/N7
Luf7Xie+obWrRA+d3kSPTFVnPNxPfHZ4EPEvrE9t9Mxp8BPwjm30++nwk/BB
nL8QPCrnX+j4a5J/3y/JjwfCC8KjEL+gnzFyUsk7d+wcwbYE+2PX0UOf96If
N+WY8bi/p3rxQxYo0cv39FJrJ+rq5b299H8Td/VafTwYHpnrnd/p/eWN13ne
ezSpX393v2/PJvXJptL6qYdwYYnG1Fs43h6S/UnqvL/fe6lPzg/1yJHEl4TH
qaPvNm/y/L7t5vNbvej5VUv08Je96M3NzXHwhjzP4+AD1GQcvx58lPkevhVe
Bz4C3hu+GV4bPhzeC74JXhc+0nwP3+L3w6fBR8D3m8vh082v8APwZvCp8OH2
OPA7vfQnq5fo3zXb1Mrd7LmIr2XPCu8J3whvDJ8AHwTfBW8Cn2h9ge+GN22T
Dw6B7+lHE3i91epohQ2ID4P3J347vBF8PHwgfCe8Pny09Q2+DX6vF+25dun6
Gz5bsySHObbNeeY+c+K7cL+fenlVSX3Tsxq3xEPTy/p3iTZwjDpWnTPOHeeU
Wtr6Yu+vJzZJPx7FwBKPR+9CD2icEs9Kb8ieamx4yiq9lp5Nr8SD0cvRA2o6
faletN9XO6ghDm7Ts9i7vOgYauPRjFLiMendWGOuLqnx1h5riN6VPaG1RU/j
7wHx+PQ61AD2NvYoagM9lNFKPD29FWuava4131pnzbN3VcNYCw9l+4T9T9mG
ttFAD5bUTLXRVGxfs/+ZY6iNhrm/pGaqbeyx9aasidbGU+v0LiO632fNtTd+
sEot1sP5ZUB6VL2dR4h9VeUe7OGt8db6jx1TbTTaAyU1W+1mv+rze6m7H3t+
z/P8w9posBHd81WbLc13fFhF8/r8rTHWGnOovZAa7aGSmq92s+brRTxURQvo
Gf01IB6sXpKe1G8D4hHqVTnnnHvOsZebzDnnnnPyFXMt9za0RIOqRfeok1vN
sfaOzhnnjnPqhSZz1Ll6CvyvJjXX2msNfK1JzbP2mZM/blJzrb3WxE+aeErF
c/nfvv30rNd048nx4Zxz7pmDnm2i6dX25kS9qrHUXSU52lxtjrTXmLNK7lTT
q+0Xr+I1mRPMDc7p55rkBHODOeP5JjXb2m1OerWJplHbqDnebqJp1DZqnnea
aBBzrTnX3kBNq9dkj6XWtUcwlwzr4v7Gn3kfY1X57eboYd317SX1JP8YEE9b
r9J7MH+uU+fe1Nh6YVdV0d72cMeU9Jj2dta807v39VETzaJ2UYO916RGWavU
BHo9W9Tx2i6u0otZQ33fw+EPm/Swx3a/z95WjXp7iYZVu6oh7yjR7GpLNfad
JRpU7a1nO0tJjdXL1QOeuaQG6g1bc6w9ai69GZ+p72ajOs9az9Pe3J7X3lfP
d9aSmq4XPDr7X1aZg5d2Ho3azZqhd2PNsHZsXsVL0QOfpMRT1RvXI5+0xKPW
O/+wy4fmR71b1zSmLvGQXesYUGc8LdaNLzWj2tEaqhfkGsO0JR6Daw9D68xP
84m9gh7JLd181ZtyTDg2NqgzlibhetuUeCIjiE2uBi3xTJ5oojnUHvaktzfx
QG7t8pfeyGTEtyvxXB5r4lGo5dX0eheTwtuWeCqPNPHg1SYzdL/XHtdeVw1w
ZxMNoBaw37q7q08/d/nQejIx8a1LPKYHm3h2es96pnp5aqwfu/FuPVPzqn3V
ULfCGhWuPeg56uVNNDBrTXqG9zdZ45msZA3AtR81tlpbza6X5prQ5CVrAq4V
qeEWKtFUajs1llpYTaz20mMY2uUrx7uaW+2tJr+5iYZVy6rJb2zSU9hbqHmv
7ObL4V3+dH60XP829q8o6Q/VtGpbNfF1TTSwWnj7Kt6X9WZEl7/N1/ZkevNP
dfVIjfqPEk2ndrVnvKukR7OXdI1s/JI1LdfO1OBqcXsSvTTX3MYrWWNyLU5P
0LUt16j+6vKlazmrdflQTavXt3qXP9X4an17AHsN16imKVlTce3KNZS5unzq
2oqerGt19gh6ta6RTdXlX9fO1PBqeXskvc7vS/KznpBekms0c3f527UbPbl5
SjSrXt2cdXrBLar0+2rkFbrvUzureVfs7lctrOfrWo0evF6wnvTd3fNTj+iZ
3tM971HbaGK9T3sMtbIaTi1nT6l3bc601m1SJ5e6puFan/rGtQ49Ir0iNbtr
I3oGegOflngJ4/STC32Hvstp2+R2a7K1eeo2c8k5ZW2Ypk2tVnOoPeZpk6uc
o85VPRi9vqaON7NkG2/GZ+azswYPhdesU5sXbZMrzcHm4qXbjC3niHNlujZa
wZpj7VkGXrHKGHQsLt7m3fjOffdLtHk3vjPf3VJt5ppzzLmmplD/r1VHa0zf
RvupSdQmM7R5PmpCtaEeCv9Ub5R4KzO10bJqVLXqhP1oKTWeWm/uNt6Mc8C5
YI1Tu2xVp/bN0UZLq4HVwrO30cJqYLXwAvCsVXKGuWOCfrShmk3tNn4//pGa
Ue2oJrK/WbuOVpq4n7nrHFa7TdSP9lSTqc1mbFM7rCFq63H7GXuOQee6Gkht
sXUdbaQGUittU0cbzdcm11mTrE3ztqlN1ixr1/xtcp050dz4A/3HkCo53lz/
XS+53RpgLfi2l1pizjf3f99LbbCmWFt+6UXrmRPNjb/CZ1XRFGoLNbG15bQ6
vcBvvWgNNYHa4OtecrU1wFrwTS+1wBpmLRvYjx9oj2CvMHI/2k6NZ6/wVS/r
QeZ8c79rO2r3z81ndertVF39Nd84Z81lx9WZy2P1o0XUIGoRPVa9Vj0q1x6/
aaJ9dq6znm0NtBauUKe/W7BNbrPGW+sXbqNN1BxqDzWuftWqdbTvIm20jBpG
LTO4zb15j+a+xdTkVTSKWmWhNlrAHGoufabJ+sSKdfppPXvH839KvPyx+9FS
aii11E88n2PgISXrBz/3sv6gplRb/qNNPlBzqD3UyPpFK9XRzmpa/bNV6mjd
MfvxM9Vwajk1sP7bynW08Zxtaoc9qb3prG16TXs0e7VZ2vRq9oD2gnpOek96
Vq516lnpXekxuTapx6TX5Jqya4euSS7W1R/XKtXUavsN62hta6i1VI9Y7/Xb
Tv8N7uq3noVe5KAqXoaekPVBfadXNFeb2mgNtBbqkVl/t+vq2ZR16t0a/3/8
wKwF31RFn6nXXBt3zVB95vHqx82qrJXqyQzq6tceXX3avNNL6ks9b9eSr67i
hTvGfFe+M8eeHtzgTo+4Vuya/bnd8ep/PWjXsi+u4k27Rndpd3/2X655+7cf
roG5Fu6almtbelCuVbtmfVl3/65lf9bpO2uI+tm/ifFvY+y/v2ryNyX+bYlr
9l836dn0d9at08s5Z/xbENcYnUuOWb0gNatj2TXjxTv94POxX/R56rHrtf/a
6a/lu3qt526/MbyLuyYxvDvetQo9M70z9ahrT3pMek1Hwo82+XsP/17GNRPX
TvSozX3mwBuaeEB6Qf49jX8Posei12IOcm1BD1kv2TF/W5M1Bf9WwDUA1xpc
k3Ntzn7DvxXSk9abdk7d0sRz0nsyJ9zVxJPVm3VO39RkjdC1QtfM/Fsp+2nv
x5psbdYzd+1KD04v3Tk9pBsfrhXqieuNO2fvaDIm7A13qDNW9Nj02qyxDzVZ
43St05x2PTxzG29GT0hvSM/J3nbjOl6UmlXtumWdXk+Pbq/u/h5o4tHp1Vnz
Hm4yRux1d6wzdvS89L4cI483WcPSr9JfUs85hvS6dqozttR71l5rsHrwf503
wdA=
                 "]], 
                Polygon3DBox[CompressedData["
1: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
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$6229#1"]& ]], 
             Lighting -> {{"Ambient", 
                RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
               "Directional", 
                RGBColor[
                0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                ImageScaled[{0, 2, 2}]}, {"Directional", 
                RGBColor[
                0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                ImageScaled[{2, 2, 2}]}, {"Directional", 
                RGBColor[
                0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                ImageScaled[{2, 0, 2}]}}]}, {
            RGBColor[0.368417, 0.506779, 0.709798], 
            EdgeForm[None], 
            Specularity[
             GrayLevel[1], 3], 
            StyleBox[
             GraphicsGroup3DBox[
              TagBox[{
                Polygon3DBox[CompressedData["
1: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
2uDGzHtd3sHafM/r/zrrpUu25nt8V86r8/VXrpFfobHt+Xjf1NqpaX5N5ZHS
+fNty5+xcmbNOVG1SGp91RZ+LrUea5O5zlWdNUp1VViTaXxWWN/crByYWf+P
VmyEfaXh8LGZNfxz9FPCelH3szlc6w5VHg1rxE7wcZlriufpy2XWtGPoK2bW
/+NVq4VrmAcy14Cq+ybIkwjXP6rrZ4f16C3w8Znrixfoy9OmwmP1ubAebQ1/
E/a8hqjeD2vTzvItwrpTnsOcsC7Uu3s1rOcUD2Xz+k5aYFpYwzVX3RTWiHqn
r4W1pnLL1LBmbabaNKzttOZvhHWq8sY7Yf0nH+PdcJ0mL+L1sH7V/p0b1s3y
QOaF/SD5GAvDtZ804cywJm4Fzw/rcvkhC8K1nDyN98I1pHyJfql1pu5tTVhH
9lYtHj47n4Z/Dtd+ehdbw37fs/D2sNbRu9sR1lha8x/CWkrx8124ph0B/xSu
8cbBO8N1l+JnVVi39YS3hXWP4uf7sI82Eh6RuqbQ+x2UWqtrzQfm3oU02m/h
uuhFxn8N16iK88/DGrcH/FlY13aHfwnXooqlL8Naqg/8Y7hWVMysD+uSZzL7
GPIlFP+rw2d/L3hk6rpGcbUm35/SV1+F9U0/xteGa7m+8L8y1zJah425L6ca
ele4/lT8fx3WT/3hIanrl5bwurA2GgBvCGuagfCmsG87WNcM68VB8ODU9Y5y
6dDUNZFiY0vYnx0GLwr7BV3gKorLgtdwRrhu0fd2D9el8ivuCHu48rdvC3u4
8ueX5964av3qmWtznYMPhOtw+ZC3hz1W+fwPhjWcfLOnwjWzfL+u4RpbPslD
Yc0nr7JLuM6X59k57OfKg7oz7H3Ln78r7JXLh++euua6nnvoGPaO5a8+H9as
8le/T10vqLbuGdaa8pfuDfu/+m1ie2qNp3P/7rD/rt8OuoXrdvlC94Q9d/0W
cF/Yu9dvE/eHvWP97vBCWJvKO+0R9gLkLz0Z9jjkMT4a9hTkK3ZNXRs2UDyn
1sM6m35LrZOltX5JrbF17uxJXSNoH/2eWusqzqXzFY/Slj1T16cNGf8DfrTg
fbErtc+gc01esbxlnXc/pdbqque6pa5br2P84bCmr5d7cfKBpZEeD/sm8nKf
CHsi8kt3pNbh0jxTUntQyv+PhOtY+aI/p64FpA16hWsJ+XVH6HwqOA88FvaA
5NnuTF376Jx9LlyfyIt+Oqyz5aeNDGt9+dt/p/6NQzlt38y1lfaIfOxPC9Z7
l2TW6qpBh4XrUnnXfcM1lbzB/TLXd9prw8N1qTzzFfnvRNJX/cL1g3zC/uHf
/OQNjg7XV/J1D83sO+nc7BOuYeRzTk3t7+k8ujSzLyddKv0vP36o1jizT6g8
UDrzbw3KUUHrW3BOSDP/LqMcUsz8u49y0TPh2lve6YBwPSMPU78pyLtWjkoy
e2iq1QqZf8dRbnw2XCPJ2++R2nu5gfHDMvtmOhf2z1xr62z9K/VvScqTJZm9
bp0vE8L+lD47MexbKSZ7h+tY+aUHZK7HpRnGhz0s7eUlXPPagvOV/HZ58spj
Y8J1rHzdQzLX6fL5fkjtjUj7HZ7ZA9R5NDbsc2l/jQrXtPqNY1zYC1OcL07t
KUl7jAjXivpt5T85S9d/
                 "]], 
                Polygon3DBox[CompressedData["
1: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
2U4=
                 "]], 
                Polygon3DBox[CompressedData["
1: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
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$6229#2"]& ]], 
             Lighting -> {{"Ambient", 
                RGBColor[
                0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
               "Directional", 
                RGBColor[
                0.15473514000000002`, 0.21284718000000002`, 
                 0.29811516000000005`], 
                ImageScaled[{0, 2, 2}]}, {"Directional", 
                RGBColor[
                0.15473514000000002`, 0.21284718000000002`, 
                 0.29811516000000005`], 
                ImageScaled[{2, 2, 2}]}, {"Directional", 
                RGBColor[
                0.15473514000000002`, 0.21284718000000002`, 
                 0.29811516000000005`], 
                ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line3DBox[CompressedData["
1:eJwt0jlPFFEAwPG3sBfLChbUEujhE0BppRV00JDtoIDYYQOEhEBD6KAhdhoI
CTbyCbhW5fREbmLMBoWGG2MMv0co/vm9mWRm3jF1hZ6W7kQIYUhXiuMz/dTT
VAiP2cpaFtjIF2zmAJ9zjO18xS7O8q1eGn/kCLc5wWO+4Q3nmEmHsMBBluJ9
fdaFTrRQFsIXLvIrl/iNy/zOIrf4nj/4gdvxu1zRjvEqd7nGPa5znxs84CYP
OVVufrzVkS51qnpz+8QazjPFd3G/rOE1SxznFofjXFhUr/EMOznJNo7yGfvY
xB42sINP2O/dv3itap3rj6rMsYp5PmKOeWZZyTRzTLIiniODsvjvUDP8R68P
f5mKe81kXAfL454n7h8J0y5+P/wPd526TsM=
             "]]}, {
            GrayLevel[0], 
            Line3DBox[CompressedData["
1:eJwl0bkuBEAcwOFZi7XxAESnIR7ARu14ATwBtcW6Owo1iR7RCoKIiDtK931E
NuJq3Er3t1H88s0Uk8z8p7ihuTYZCSH06cXigw+8VH9uCHEOsZBjLOU0E1xj
DXdZzzQb+cQUv9jH/FgIgyziCMs4yQouc4ZXfNNW5rzu1JQdwjaT3GEzd9nC
PbZynykesI2HbOcRO3jMTp6wi6fs5hl7eM7KnBCu+a4LPetede61yRouMcEJ
lnKYhRxgnL2Z2XlvKx/YkJkh67jNaq6wnFMs4SgLMnvn03xVnh51q41oCDGu
M5erzOEys7nIKBeYxXlGOMfAWf5aTvOHU/zmBL84zk9Wef9N5P///wADhk8y

             "]]}, {
            GrayLevel[0.2], 
            
            Line3DBox[{1349, 1662, 722, 1348, 2167, 1571, 1350, 2168, 1572, 
             1351, 2169, 1573, 1352, 2170, 1574, 1353, 2171, 1575, 1354, 2172,
              1576, 1355, 2173, 1972, 2272, 1356, 2174, 1577, 1357, 2175, 
             1578, 1358, 2176, 1579, 1359, 2177, 1580, 1360, 2178, 1581, 1361,
              2075, 2179, 1582, 1663}], 
            
            Line3DBox[{1363, 1973, 2273, 1362, 737, 1364, 2180, 1583, 1365, 
             2181, 1584, 1366, 2182, 1585, 1367, 2183, 1586, 1368, 2184, 1587,
              1369, 2185, 1974, 2274, 1370, 1975, 2275, 1371, 2186, 1588, 
             1372, 2187, 1589, 1373, 2188, 1590, 1374, 2189, 1591, 1375, 2190,
              1592, 1376}], 
            
            Line3DBox[{1378, 1976, 2276, 1377, 1977, 2277, 1379, 753, 1380, 
             2191, 1593, 1381, 2192, 1594, 1382, 2193, 1595, 1383, 2194, 1596,
              1384, 2195, 1978, 2278, 1385, 1979, 2279, 1386, 1980, 2280, 
             1387, 2196, 1597, 1388, 2197, 1598, 1389, 2198, 1599, 1390, 2199,
              1600, 1391}], 
            
            Line3DBox[{1393, 1981, 2281, 1392, 1982, 2282, 1394, 1983, 2283, 
             1395, 769, 1396, 2200, 1601, 1397, 2201, 1602, 1398, 2202, 1603, 
             1399, 2203, 1984, 2284, 1400, 1985, 2285, 1401, 1986, 2286, 1402,
              1987, 2287, 1403, 2204, 1604, 1404, 2205, 1605, 1405, 2206, 
             1606, 1406}], 
            
            Line3DBox[{1408, 1988, 2288, 1407, 1989, 2289, 1409, 1990, 2290, 
             1410, 1991, 2291, 1411, 785, 1412, 2207, 1607, 1413, 2208, 1608, 
             1414, 2209, 1992, 2292, 1415, 1993, 2293, 1416, 1994, 2294, 1417,
              1995, 2295, 1418, 1996, 2296, 1419, 2210, 1609, 1420, 2211, 
             1610, 1421}], 
            
            Line3DBox[{1423, 1997, 2297, 1422, 1998, 2298, 1424, 1999, 2299, 
             1425, 2000, 2300, 1426, 2001, 2301, 1427, 801, 1428, 2212, 1611, 
             1429, 2213, 2002, 2302, 1430, 2003, 2303, 1431, 2004, 2304, 1432,
              2005, 2305, 1433, 2006, 2306, 1434, 2007, 2307, 1435, 2214, 
             1612, 1436}], 
            
            Line3DBox[{1438, 2008, 2308, 1437, 2009, 2309, 1439, 2010, 2310, 
             1440, 2011, 2311, 1441, 2012, 2312, 1442, 2013, 2313, 1443, 817, 
             1444, 2215, 2014, 2314, 1445, 2015, 2315, 1446, 2016, 2316, 1447,
              2017, 2317, 1448, 2018, 2318, 1449, 2019, 2319, 1450, 2020, 
             2320, 1451}], 
            
            Line3DBox[{1455, 2216, 1613, 1453, 2217, 1614, 1457, 2218, 1615, 
             1459, 2219, 1616, 1461, 2220, 1617, 1463, 2221, 1618, 1465, 2222,
              1619, 1467, 2223, 834, 1469, 2224, 1620, 1471, 2225, 1621, 1473,
              2226, 1622, 1475, 2227, 1623, 1477, 2228, 1624, 1479, 2229, 
             1625, 1481}], 
            
            Line3DBox[{1480, 2334, 2033, 1478, 2333, 2032, 1476, 2332, 2031, 
             1474, 2331, 2030, 1472, 2330, 2029, 1470, 2329, 2028, 1468, 2328,
              833, 1466, 2327, 2027, 1464, 2326, 2026, 1462, 2325, 2025, 1460,
              2324, 2024, 1458, 2323, 2023, 1456, 2322, 2022, 1452, 2321, 
             2021, 1454}], 
            
            Line3DBox[{1483, 2034, 2335, 1482, 2230, 1626, 1484, 2231, 1627, 
             1485, 2232, 1628, 1486, 2233, 1629, 1487, 2234, 1630, 1488, 2235,
              1631, 1489, 2236, 2035, 2336, 1490, 850, 1491, 2237, 1632, 1492,
              2238, 1633, 1493, 2239, 1634, 1494, 2240, 1635, 1495, 2241, 
             1636, 1496}], 
            
            Line3DBox[{1498, 2036, 2337, 1497, 2037, 2338, 1499, 2242, 1637, 
             1500, 2243, 1638, 1501, 2244, 1639, 1502, 2245, 1640, 1503, 2246,
              1641, 1504, 2247, 2038, 2339, 1505, 2039, 2340, 1506, 866, 1507,
              2248, 1642, 1508, 2249, 1643, 1509, 2250, 1644, 1510, 2251, 
             1645, 1511}], 
            
            Line3DBox[{1513, 2040, 2341, 1512, 2041, 2342, 1514, 2042, 2343, 
             1515, 2252, 1646, 1516, 2253, 1647, 1517, 2254, 1648, 1518, 2255,
              1649, 1519, 2256, 2043, 2344, 1520, 2044, 2345, 1521, 2045, 
             2346, 1522, 882, 1523, 2257, 1650, 1524, 2258, 1651, 1525, 2259, 
             1652, 1526}], 
            
            Line3DBox[{1528, 2046, 2347, 1527, 2047, 2348, 1529, 2048, 2349, 
             1530, 2049, 2350, 1531, 2260, 1653, 1532, 2261, 1654, 1533, 2262,
              1655, 1534, 2263, 2050, 2351, 1535, 2051, 2352, 1536, 2052, 
             2353, 1537, 2053, 2354, 1538, 898, 1539, 2264, 1656, 1540, 2265, 
             1657, 1541}], 
            
            Line3DBox[{1543, 2054, 2355, 1542, 2055, 2356, 1544, 2056, 2357, 
             1545, 2057, 2358, 1546, 2058, 2359, 1547, 2266, 1658, 1548, 2267,
              1659, 1549, 2268, 2059, 2360, 1550, 2060, 2361, 1551, 2061, 
             2362, 1552, 2062, 2363, 1553, 2063, 2364, 1554, 914, 1555, 2269, 
             1660, 1556}], 
            
            Line3DBox[{1570, 1667, 934, 1569, 2375, 2074, 1568, 2374, 2073, 
             1567, 2373, 2072, 1566, 2372, 2071, 1565, 2371, 2070, 1564, 2370,
              2069, 2271, 1563, 1661, 2270, 1562, 2369, 2068, 1561, 2368, 
             2067, 1560, 2367, 2066, 1559, 2366, 2065, 1558, 2365, 2064, 1557,
              2376, 1665, 1664, 1666}], 
            Line3DBox[{1669, 1966, 1146, 1668, 2468, 1876, 1670, 2469, 1877, 
             1671, 2470, 1878, 1672, 2471, 1879, 1673, 2472, 1880, 1674, 2473,
              1881, 1675, 2076, 2377, 1676, 2474, 1882, 1677, 2475, 1883, 
             1678, 2476, 1884, 1679, 2477, 1885, 1680, 2478, 1886, 1681, 2166,
              2557, 1887, 1967}], 
            
            Line3DBox[{1683, 2077, 2378, 1682, 1160, 1684, 2479, 1888, 1685, 
             2480, 1889, 1686, 2481, 1890, 1687, 2482, 1891, 1688, 2483, 1892,
              1689, 2078, 2379, 1690, 2079, 2380, 1691, 2484, 1893, 1692, 
             2485, 1894, 1693, 2486, 1895, 1694, 2487, 1896, 1695, 2488, 1897,
              1696}], 
            
            Line3DBox[{1698, 2080, 2381, 1697, 2081, 2382, 1699, 1175, 1700, 
             2489, 1898, 1701, 2490, 1899, 1702, 2491, 1900, 1703, 2492, 1901,
              1704, 2082, 2383, 1705, 2083, 2384, 1706, 2084, 2385, 1707, 
             2493, 1902, 1708, 2494, 1903, 1709, 2495, 1904, 1710, 2496, 1905,
              1711}], 
            
            Line3DBox[{1713, 2085, 2386, 1712, 2086, 2387, 1714, 2087, 2388, 
             1715, 1190, 1716, 2497, 1906, 1717, 2498, 1907, 1718, 2499, 1908,
              1719, 2088, 2389, 1720, 2089, 2390, 1721, 2090, 2391, 1722, 
             2091, 2392, 1723, 2500, 1909, 1724, 2501, 1910, 1725, 2502, 1911,
              1726}], 
            
            Line3DBox[{1728, 2092, 2393, 1727, 2093, 2394, 1729, 2094, 2395, 
             1730, 2095, 2396, 1731, 1205, 1732, 2503, 1912, 1733, 2504, 1913,
              1734, 2096, 2397, 1735, 2097, 2398, 1736, 2098, 2399, 1737, 
             2099, 2400, 1738, 2100, 2401, 1739, 2505, 1914, 1740, 2506, 1915,
              1741}], 
            
            Line3DBox[{1743, 2101, 2402, 1742, 2102, 2403, 1744, 2103, 2404, 
             1745, 2104, 2405, 1746, 2105, 2406, 1747, 1220, 1748, 2507, 1916,
              1749, 2106, 2407, 1750, 2107, 2408, 1751, 2108, 2409, 1752, 
             2109, 2410, 1753, 2110, 2411, 1754, 2111, 2412, 1755, 2508, 1917,
              1756}], 
            
            Line3DBox[{355, 1035, 356, 1036, 357, 1037, 358, 1038, 359, 1039, 
             360, 1040, 361, 1041, 362, 1042, 363, 1043, 364, 1044, 365, 1045,
              366, 1046, 367, 1047, 368, 1048, 369}], 
            Line3DBox[{1758, 2112, 2413, 1757, 2113, 2414, 1759, 2114, 2415, 
             1760, 2115, 2416, 1761, 2116, 2417, 1762, 2117, 2418, 1763, 1235,
              1764, 2118, 2419, 1765, 2119, 2420, 1766, 2120, 2421, 1767, 
             2121, 2422, 1768, 2122, 2423, 1769, 2123, 2424, 1770, 2124, 2425,
              1771}], 
            
            Line3DBox[{1773, 1243, 1772, 2509, 1918, 1774, 2510, 1919, 1775, 
             2511, 1920, 1776, 2512, 1921, 1777, 2513, 1922, 1778, 2514, 1923,
              1779, 1250, 1780, 2515, 1924, 1781, 2516, 1925, 1782, 2517, 
             1926, 1783, 2518, 1927, 1784, 2519, 1928, 1785, 2520, 1929, 
             1786}], 
            
            Line3DBox[{1788, 2125, 2426, 1787, 2521, 1930, 1789, 2522, 1931, 
             1790, 2523, 1932, 1791, 2524, 1933, 1792, 2525, 1934, 1793, 2526,
              1935, 1794, 2126, 2427, 1795, 1265, 1796, 2527, 1936, 1797, 
             2528, 1937, 1798, 2529, 1938, 1799, 2530, 1939, 1800, 2531, 1940,
              1801}], 
            
            Line3DBox[{1803, 2127, 2428, 1802, 2128, 2429, 1804, 2532, 1941, 
             1805, 2533, 1942, 1806, 2534, 1943, 1807, 2535, 1944, 1808, 2536,
              1945, 1809, 2129, 2430, 1810, 2130, 2431, 1811, 1280, 1812, 
             2537, 1946, 1813, 2538, 1947, 1814, 2539, 1948, 1815, 2540, 1949,
              1816}], 
            
            Line3DBox[{1818, 2131, 2432, 1817, 2132, 2433, 1819, 2133, 2434, 
             1820, 2541, 1950, 1821, 2542, 1951, 1822, 2543, 1952, 1823, 2544,
              1953, 1824, 2134, 2435, 1825, 2135, 2436, 1826, 2136, 2437, 
             1827, 1295, 1828, 2545, 1954, 1829, 2546, 1955, 1830, 2547, 1956,
              1831}], 
            
            Line3DBox[{1833, 2137, 2438, 1832, 2138, 2439, 1834, 2139, 2440, 
             1835, 2140, 2441, 1836, 2548, 1957, 1837, 2549, 1958, 1838, 2550,
              1959, 1839, 2141, 2442, 1840, 2142, 2443, 1841, 2143, 2444, 
             1842, 2144, 2445, 1843, 1310, 1844, 2551, 1960, 1845, 2552, 1961,
              1846}], 
            
            Line3DBox[{1848, 2145, 2446, 1847, 2146, 2447, 1849, 2147, 2448, 
             1850, 2148, 2449, 1851, 2149, 2450, 1852, 2553, 1962, 1853, 2554,
              1963, 1854, 2150, 2451, 1855, 2151, 2452, 1856, 2152, 2453, 
             1857, 2153, 2454, 1858, 2154, 2455, 1859, 1325, 1860, 2555, 1964,
              1861}], 
            
            Line3DBox[{1875, 1971, 1344, 1874, 2467, 2165, 1873, 2466, 2164, 
             1872, 2465, 2163, 1871, 2464, 2162, 1870, 2463, 2161, 1869, 2462,
              2160, 1868, 1965, 2556, 1867, 2461, 2159, 1866, 2460, 2158, 
             1865, 2459, 2157, 1864, 2458, 2156, 1863, 2457, 2155, 1862, 2456,
              1969, 1968, 1970}]}, {
            GrayLevel[0.2], 
            
            Line3DBox[{500, 723, 2167, 501, 737, 529, 2277, 752, 544, 2282, 
             767, 559, 2289, 782, 574, 2298, 797, 589, 2309, 812, 604, 2322, 
             827, 2217, 619, 842, 2230, 634, 2338, 857, 649, 2342, 872, 664, 
             2348, 887, 679, 2356, 902, 694, 2365, 917, 709}], 
            
            Line3DBox[{502, 724, 2168, 503, 738, 2180, 530, 753, 545, 2283, 
             768, 560, 2290, 783, 575, 2299, 798, 590, 2310, 813, 605, 2323, 
             828, 2218, 620, 843, 2231, 635, 858, 2242, 650, 2343, 873, 665, 
             2349, 888, 680, 2357, 903, 695, 2366, 918, 710}], 
            
            Line3DBox[{504, 725, 2169, 505, 739, 2181, 531, 754, 2191, 546, 
             769, 561, 2291, 784, 576, 2300, 799, 591, 2311, 814, 606, 2324, 
             829, 2219, 621, 844, 2232, 636, 859, 2243, 651, 874, 2252, 666, 
             2350, 889, 681, 2358, 904, 696, 2367, 919, 711}], 
            
            Line3DBox[{506, 726, 2170, 507, 740, 2182, 532, 755, 2192, 547, 
             770, 2200, 562, 785, 577, 2301, 800, 592, 2312, 815, 607, 2325, 
             830, 2220, 622, 845, 2233, 637, 860, 2244, 652, 875, 2253, 667, 
             890, 2260, 682, 2359, 905, 697, 2368, 920, 712}], 
            
            Line3DBox[{508, 727, 2171, 509, 741, 2183, 533, 756, 2193, 548, 
             771, 2201, 563, 786, 2207, 578, 801, 593, 2313, 816, 608, 2326, 
             831, 2221, 623, 846, 2234, 638, 861, 2245, 653, 876, 2254, 668, 
             891, 2261, 683, 906, 2266, 698, 2369, 921, 713}], 
            
            Line3DBox[{510, 728, 2172, 511, 742, 2184, 534, 757, 2194, 549, 
             772, 2202, 564, 787, 2208, 579, 802, 2212, 594, 817, 609, 2327, 
             832, 2222, 624, 847, 2235, 639, 862, 2246, 654, 877, 2255, 669, 
             892, 2262, 684, 907, 2267, 699, 922, 2270, 714}], 
            
            Line3DBox[{512, 729, 2173, 514, 743, 2185, 535, 758, 2195, 550, 
             773, 2203, 565, 788, 2209, 580, 803, 2213, 595, 818, 2215, 610, 
             833, 2223, 625, 848, 2236, 640, 863, 2247, 655, 878, 2256, 670, 
             893, 2263, 685, 908, 2268, 700, 923, 2271, 715}], 
            
            Line3DBox[{516, 731, 2174, 517, 2275, 745, 537, 2279, 760, 552, 
             2285, 775, 567, 2293, 790, 582, 2303, 805, 597, 2315, 820, 612, 
             2329, 835, 2224, 627, 850, 642, 2340, 865, 657, 2345, 880, 672, 
             2352, 895, 687, 2361, 910, 702, 2371, 925, 717}], 
            
            Line3DBox[{518, 732, 2175, 519, 746, 2186, 538, 2280, 761, 553, 
             2286, 776, 568, 2294, 791, 583, 2304, 806, 598, 2316, 821, 613, 
             2330, 836, 2225, 628, 851, 2237, 643, 866, 658, 2346, 881, 673, 
             2353, 896, 688, 2362, 911, 703, 2372, 926, 718}], 
            
            Line3DBox[{520, 733, 2176, 521, 747, 2187, 539, 762, 2196, 554, 
             2287, 777, 569, 2295, 792, 584, 2305, 807, 599, 2317, 822, 614, 
             2331, 837, 2226, 629, 852, 2238, 644, 867, 2248, 659, 882, 674, 
             2354, 897, 689, 2363, 912, 704, 2373, 927, 719}], 
            
            Line3DBox[{522, 734, 2177, 523, 748, 2188, 540, 763, 2197, 555, 
             778, 2204, 570, 2296, 793, 585, 2306, 808, 600, 2318, 823, 615, 
             2332, 838, 2227, 630, 853, 2239, 645, 868, 2249, 660, 883, 2257, 
             675, 898, 690, 2364, 913, 705, 2374, 928, 720}], 
            
            Line3DBox[{524, 735, 2178, 525, 749, 2189, 541, 764, 2198, 556, 
             779, 2205, 571, 794, 2210, 586, 2307, 809, 601, 2319, 824, 616, 
             2333, 839, 2228, 631, 854, 2240, 646, 869, 2250, 661, 884, 2258, 
             676, 899, 2264, 691, 914, 706, 2375, 929, 721}], 
            
            Line3DBox[{526, 931, 932, 2179, 527, 750, 2190, 542, 765, 2199, 
             557, 780, 2206, 572, 795, 2211, 587, 810, 2214, 602, 2320, 825, 
             617, 2334, 840, 2229, 632, 855, 2241, 647, 870, 2251, 662, 885, 
             2259, 677, 900, 2265, 692, 915, 2269, 707, 934, 935, 936}], 
            Line3DBox[{708, 916, 2376, 933, 693, 901, 2355, 678, 886, 2347, 
             663, 871, 2341, 648, 856, 2337, 633, 841, 2335, 618, 2216, 826, 
             2321, 603, 811, 2308, 588, 796, 2297, 573, 781, 2288, 558, 766, 
             2281, 543, 751, 2276, 528, 736, 2273, 499, 722, 930, 937}], 
            
            Line3DBox[{716, 924, 2370, 701, 909, 2360, 686, 894, 2351, 671, 
             879, 2344, 656, 864, 2339, 641, 849, 2336, 626, 834, 2328, 611, 
             819, 2314, 596, 804, 2302, 581, 789, 2292, 566, 774, 2284, 551, 
             759, 2278, 536, 744, 2274, 515, 730, 2272, 513}], 
            
            Line3DBox[{939, 1147, 2468, 940, 1160, 966, 2382, 1174, 980, 2387,
              1188, 994, 2394, 1202, 1008, 2403, 1216, 1022, 2414, 1230, 1036,
              1244, 2509, 1050, 1258, 2521, 1064, 2429, 1272, 1078, 2433, 
             1286, 1092, 2439, 1300, 1106, 2447, 1314, 1120, 2457, 1328, 
             1134}], 
            
            Line3DBox[{941, 1148, 2469, 942, 1161, 2479, 967, 1175, 981, 2388,
              1189, 995, 2395, 1203, 1009, 2404, 1217, 1023, 2415, 1231, 1037,
              1245, 2510, 1051, 1259, 2522, 1065, 1273, 2532, 1079, 2434, 
             1287, 1093, 2440, 1301, 1107, 2448, 1315, 1121, 2458, 1329, 
             1135}], 
            
            Line3DBox[{943, 1149, 2470, 944, 1162, 2480, 968, 1176, 2489, 982,
              1190, 996, 2396, 1204, 1010, 2405, 1218, 1024, 2416, 1232, 1038,
              1246, 2511, 1052, 1260, 2523, 1066, 1274, 2533, 1080, 1288, 
             2541, 1094, 2441, 1302, 1108, 2449, 1316, 1122, 2459, 1330, 
             1136}], 
            
            Line3DBox[{945, 1150, 2471, 946, 1163, 2481, 969, 1177, 2490, 983,
              1191, 2497, 997, 1205, 1011, 2406, 1219, 1025, 2417, 1233, 1039,
              1247, 2512, 1053, 1261, 2524, 1067, 1275, 2534, 1081, 1289, 
             2542, 1095, 1303, 2548, 1109, 2450, 1317, 1123, 2460, 1331, 
             1137}], 
            
            Line3DBox[{947, 1151, 2472, 948, 1164, 2482, 970, 1178, 2491, 984,
              1192, 2498, 998, 1206, 2503, 1012, 1220, 1026, 2418, 1234, 1040,
              1248, 2513, 1054, 1262, 2525, 1068, 1276, 2535, 1082, 1290, 
             2543, 1096, 1304, 2549, 1110, 1318, 2553, 1124, 2461, 1332, 
             1138}], 
            
            Line3DBox[{949, 1152, 2473, 950, 1165, 2483, 971, 1179, 2492, 985,
              1193, 2499, 999, 1207, 2504, 1013, 1221, 2507, 1027, 1235, 1041,
              1249, 2514, 1055, 1263, 2526, 1069, 1277, 2536, 1083, 1291, 
             2544, 1097, 1305, 2550, 1111, 1319, 2554, 1125, 1333, 2556, 
             1139}], 
            
            Line3DBox[{257, 1675, 272, 1689, 287, 1704, 302, 1719, 317, 1734, 
             332, 1749, 347, 1764, 362, 1779, 377, 1794, 392, 1809, 407, 1824,
              422, 1839, 437, 1854, 452, 1868, 467}], 
            
            Line3DBox[{951, 2377, 1153, 952, 2379, 1166, 972, 2383, 1180, 986,
              2389, 1194, 1000, 2397, 1208, 1014, 2407, 1222, 1028, 2419, 
             1236, 1042, 1250, 1056, 2427, 1264, 1070, 2430, 1278, 1084, 2435,
              1292, 1098, 2442, 1306, 1112, 2451, 1320, 1126, 2462, 1334, 
             1140}], 
            
            Line3DBox[{953, 1154, 2474, 954, 2380, 1167, 973, 2384, 1181, 987,
              2390, 1195, 1001, 2398, 1209, 1015, 2408, 1223, 1029, 2420, 
             1237, 1043, 1251, 2515, 1057, 1265, 1071, 2431, 1279, 1085, 2436,
              1293, 1099, 2443, 1307, 1113, 2452, 1321, 1127, 2463, 1335, 
             1141}], 
            
            Line3DBox[{955, 1155, 2475, 956, 1168, 2484, 974, 2385, 1182, 988,
              2391, 1196, 1002, 2399, 1210, 1016, 2409, 1224, 1030, 2421, 
             1238, 1044, 1252, 2516, 1058, 1266, 2527, 1072, 1280, 1086, 2437,
              1294, 1100, 2444, 1308, 1114, 2453, 1322, 1128, 2464, 1336, 
             1142}], 
            
            Line3DBox[{957, 1156, 2476, 958, 1169, 2485, 975, 1183, 2493, 989,
              2392, 1197, 1003, 2400, 1211, 1017, 2410, 1225, 1031, 2422, 
             1239, 1045, 1253, 2517, 1059, 1267, 2528, 1073, 1281, 2537, 1087,
              1295, 1101, 2445, 1309, 1115, 2454, 1323, 1129, 2465, 1337, 
             1143}], 
            
            Line3DBox[{959, 1157, 2477, 960, 1170, 2486, 976, 1184, 2494, 990,
              1198, 2500, 1004, 2401, 1212, 1018, 2411, 1226, 1032, 2423, 
             1240, 1046, 1254, 2518, 1060, 1268, 2529, 1074, 1282, 2538, 1088,
              1296, 2545, 1102, 1310, 1116, 2455, 1324, 1130, 2466, 1338, 
             1144}], 
            Line3DBox[{961, 1158, 2478, 962, 1171, 2487, 977, 1185, 2495, 991,
              1199, 2501, 1005, 1213, 2505, 1019, 2412, 1227, 1033, 2424, 
             1241, 1047, 1255, 2519, 1061, 1269, 2530, 1075, 1283, 2539, 1089,
              1297, 2546, 1103, 1311, 2551, 1117, 1325, 1131, 2467, 1339, 
             1145}], 
            
            Line3DBox[{963, 1341, 1342, 2557, 964, 1172, 2488, 978, 1186, 
             2496, 992, 1200, 2502, 1006, 1214, 2506, 1020, 1228, 2508, 1034, 
             2425, 1242, 1048, 1256, 2520, 1062, 1270, 2531, 1076, 1284, 2540,
              1090, 1298, 2547, 1104, 1312, 2552, 1118, 1326, 2555, 1132, 
             1344, 1345, 1346}], 
            
            Line3DBox[{1133, 1327, 2456, 1343, 1119, 1313, 2446, 1105, 1299, 
             2438, 1091, 1285, 2432, 1077, 1271, 2428, 1063, 1257, 2426, 1049,
              1243, 1035, 1229, 2413, 1021, 1215, 2402, 1007, 1201, 2393, 993,
              1187, 2386, 979, 1173, 2381, 965, 1159, 2378, 938, 1146, 1340, 
             1347}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
qRWB+pedKbKviHBdZePV1XfQ+bnrhS6m/nn+/aRC+V+Z5zP3rNt6r2/+2Z0q
eSf0F+afqxkPhczv+y67ac1nFuVA62tJh0Y6n2iG0mEfjJIZUbwh/1xhf/0e
A8cUEY7Rn9/u7gnp5O3Trx4xizgsY6rglb131KYdrBj1+2LlIaF1/5rW/X16
7V/T6m9Gr/Oa6bWPP8bnyPgc43mM5/8FnmmN8x3jeWQ8j3Y8yxjPI/MrphfP
2ts+k/FFVovIcStzVZX/kXiBP41nevlj695LJeM6y/Ln9ePRRjx0Hf/ud1+S
5b8t/57Mv72O6X+CZ34qv9kExG+WXs+FXvpkvcFbMj45Z7lQP+457vS/imd6
+SGPNs9YeJNoOhm323NToB+n5AvC8kP+XTxT/KVtqPyl/y0809rfLiS+Rpcq
voZWXGraF7IeWKTGRr6v4bf6n/RDDpV+GG19/qfxTK/5Elb7l/JCtPvxV3IN
ZHkqnkzbNsYz/Xke45O+fGLhtM5vR3ve27xrHbn9TYtCyO27rLCma5wOFg9P
7VvJeDghaUo/zhkkOyIesOL4sPqb43GWHEfTujmd3E6TaTC5HVMa8+ti4fSK
Kxc/xkn+Hrl8kiTPKyjxtjHFseT50u1jeHL9DU/y/7Y+rfLTKiflu7kP43tK
jdNLHnrFyVqzHiWPB4aVjOQ8hEnz7vxtO150ykOCtS6jVT/8ae/7aH9HKHrj
GaI3uIbRG8PpAdIo6QF6rWso+kQa0Se9w+gTQ+IN8n1ln37mH9qvX9UP5r85
PwxW/V/VM5oIjiUPveJtsXBa42FpxbHiebG+g6M9f6PsR363WFjQH7+pUzIh
oz9+86OnD7NNVTl4JjGzZ9/OZjg5tlbcmadosH5XSIZdoA4RdpdKT6qyQP3u
pK47Ps6ZmgM31Xzf2R+3snROhyVDciFo0udUOfytBQZW2OaZCxeB3c4PvzFr
VYHzGt1znvHgIOWa0s6vniP5RO3xqhlD4rPkLEpZ+/1L5TJ3yB6UrgO31ztf
vR9dAwnMxw2YLGtBanakTZ5ZPdBo8+PkM6+D7ZsuO1SJVAKzHa/m7tzWAvYH
fWff/iEfnpU9p6L/HvVXV2DvnqTIWQt7X/A/ij6C+k+sri3gl1tWDXn4zibf
uNsCFoYstI2paACbzBbNugBqYVny2vLdyyrAk6M2P51j8iAy8G7/OSZYfg7r
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

          "]], Axes -> True, AxesLabel -> {None, None, None}, 
        AxesOrigin -> {Automatic, Automatic, Automatic}, 
        BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGrids -> 
        None, FaceGridsStyle -> Automatic, 
        ImageSize -> {179.71741091622565`, 62.26803377942537}, ImageSizeRaw -> 
        Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
            GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
        PlotRange -> {{0.1, 1}, {0.1, 1}, {-0.7294041514396667, 1.045}}, 
        PlotRangePadding -> {
          Scaled[0.02], 
          Scaled[0.02], 
          Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
        ViewPoint -> {-2.663085972262671, -2.0870923002709856`, \
-0.04493144207964225}, ViewVertical -> {0., 0., 1.}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"net", "(", 
             RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ")"}], 
           RowBox[{
             RowBox[{
               RowBox[{"-", "0.45`"}], " ", "x"}], "+", 
             RowBox[{"0.09`", " ", "y"}], "+", "1"}]}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 Graphics3DBox[
                  SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                  PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                  0]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open = True}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"], 
                    ImageSizeCache -> {24., {0., 24.}}], Appearance -> None, 
                    ButtonFunction :> (Typeset`open = True), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, 
                   ImageSize -> {Automatic, 24}], 
                  GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                   ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}, {
                    StyleBox[
                    
                    TemplateBox[{"\"Number of layers\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["2", "SummaryItem"]}}, 
                   BaselinePosition -> {2, 1}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                BaselinePosition -> {1, 3}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {
                    Offset[0.], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                    Offset[0.], {
                    Offset[0.4]}, 
                    Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"], 
                    ImageSizeCache -> {24., {0., 24.}}], Appearance -> None, 
                    ButtonFunction :> (Typeset`open = False), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, 
                   ImageSize -> {Automatic, 24}], 
                  GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                   ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                  GridBox[{{
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 2}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NetDecoder["Scalar", 
                    Association[], 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", Annotation[#, {"Inputs", "Input"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    ImageSizeCache -> {307., {45., 56.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}]}}, BaselinePosition -> 
                   Automatic, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                BaselinePosition -> {1, 1}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {
                    Offset[0.], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                    Offset[0.], {
                    Offset[0.4]}, 
                    Offset[0.]}, "RowsIndexed" -> {}}]}, 
             Dynamic[Typeset`open], ImageSize -> Automatic], 
            BaseStyle -> {
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
            BaselinePosition -> Baseline]], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("NetChain[<>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     TemplateBox[{GraphicsBox[{{
          GrayLevel[0.8], {
           
           LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
            1.8369701987210297`*^-16}}], 
           
           LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
            1.0000000000000002`}}], 
           LineBox[{{-3., 1.0000000000000002`}, {-2., 1.0000000000000002`}}], 
           
           LineBox[{{-3., 2.}, {-2., 1.0000000000000002`}}], 
           LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999, 1.}}], 
           
           LineBox[{{-0.9999999999999999, 1.}, {6.123233995736766*^-17, 
            1.}}]}}, {
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
             2.0818995585505003`*^-16}, {-0.25, 0}, 
             Offset[8], {1., -6.123233995736767*^-17}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "2"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{"b", 2}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-2.4000000000000004`,
              0.6000000000000002}, {-0.25, 0}, 
             Offset[8], {1., 1.}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "2"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{"b", 2}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-2.4000000000000004`,
              1.0000000000000002`}, {-0.25, 0}, 
             Offset[8], {1., 0.}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "1", "2"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{1, 2}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-2.4000000000000004`,
              1.4000000000000001`}, {-0.25, 0}, 
             Offset[8], {1., -0.9999999999999998}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "1"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{1}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
             1.}, {-0.25, 0}, 
             Offset[8], {1., -2.220446049250313*^-16}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{"b", 1}, "\[Times]"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            InsetBox[
             GraphicsBox[
              StyleBox[
               LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
               GrayLevel[0.7], StripOnInput -> False]], {-0.3999999999999999, 
             1.}, {-0.25, 0}, 
             Offset[8], {1., 0.}], 
            
            TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1"}, 
             "RowWithSeparators"]], Annotation[#, 
            Row[{"b", 1}, "\[Times]"], "Tooltip"]& ]}, {
          GrayLevel[0], {
           TagBox[
            TooltipBox[{
              AbsolutePointSize[4], 
              GrayLevel[0.5], 
              PointBox[{-4., 2.4492935982947064`*^-16}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "0"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Inputs.Input\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"null\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 0}, {
                Style["name", Bold], ".Inputs.Input"}, {
                Style["op", Bold], "null"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[6], 
              Hue[0.08, 0.9, 0.8], 
              PointBox[{-3., 1.8369701987210297`*^-16}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "1"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Nodes.1$0\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"tanh\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 1}, {
                Style["name", Bold], ".Nodes.1$0"}, {
                Style["op", Bold], "tanh"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {{0, 0, 0}}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[4], 
              GrayLevel[0.5], 
              PointBox[{-3., 1.0000000000000002`}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "2"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Nodes.2.Arrays.Weights\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"null\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 2}, {
                Style["name", Bold], ".Nodes.2.Arrays.Weights"}, {
                Style["op", Bold], "null"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[4], 
              GrayLevel[0.5], 
              PointBox[{-3., 2.}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "3"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Nodes.2.Arrays.Biases\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"null\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 3}, {
                Style["name", Bold], ".Nodes.2.Arrays.Biases"}, {
                Style["op", Bold], "null"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[6], 
              GrayLevel[0], 
              PointBox[{-2., 1.0000000000000002`}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "4"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Nodes.2\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"FullyConnected\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 TagBox[
                  GridBox[{{
                    StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                    StyleBox[
                    "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, {
                    StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                    StyleBox[
                    "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {False, {True}, False}, 
                    "Rows" -> {False, {True}, False}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.85]], "Grid"]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 4}, {
                Style["name", Bold], ".Nodes.2"}, {
                Style["op", Bold], "FullyConnected"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Grid[{{
                   Style["no_bias", Bold], 
                   Style["False", ShowStringCharacters -> True]}, {
                   Style["num_hidden", Bold], 
                   Style["1", ShowStringCharacters -> True]}}, Alignment -> 
                 Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
                 GrayLevel[0.85]]}, {
                Style["inputs", Bold], {{1, 0, 0}, {2, 0, 0}, {3, 0, 0}}}}, 
              Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[6], 
              Hue[0.11, 1, 0.75], 
              PointBox[{-0.9999999999999999, 1.}]}, 
             TagBox[
              GridBox[{{
                 StyleBox["\"id\"", Bold, StripOnInput -> False], "5"}, {
                 StyleBox["\"name\"", Bold, StripOnInput -> False], 
                 "\".Outputs.Output\""}, {
                 StyleBox["\"op\"", Bold, StripOnInput -> False], 
                 "\"_copy\""}, {
                 StyleBox["\"param\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
                 StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, 
               GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
               GrayLevel[0.85]], "Grid"]], Annotation[#, 
             Grid[{{
                Style["id", Bold], 5}, {
                Style["name", Bold], ".Outputs.Output"}, {
                Style["op", Bold], "_copy"}, {
                Style["param", Bold], 
                Association[]}, {
                Style["attrs", Bold], 
                Association[]}, {
                Style["inputs", Bold], {{4, 0, 0}}}}, Alignment -> Left, 
              BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All,
               FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
              Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              AbsolutePointSize[4], 
              GrayLevel[0.5], 
              PointBox[{6.123233995736766*^-17, 1.}]}, "Null"], 
            Annotation[#, Null, "Tooltip"]& ]}}, 
         StyleBox[{{{
             InsetBox[
              FormBox["0", TraditionalForm], 
              Offset[{0, 5}, {-4., 2.4492935982947064`*^-16}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{0, 6}, {-3., 1.8369701987210297`*^-16}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{0, 5}, {-3., 1.0000000000000002`}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{0, 5}, {-3., 2.}], {0., -0.17}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{0, 6}, {-2., 1.0000000000000002`}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{0, 6}, {-0.9999999999999999, 1.}], {0., -0.17}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, 5}, {6.123233995736766*^-17, 1.}], {0., -0.17}, 
              Automatic, {1, 0}]}, {
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, -5}, {-4., 2.4492935982947064`*^-16}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"t\"", TraditionalForm], 
              Offset[{0, -6}, {-3., 1.8369701987210297`*^-16}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, -5}, {-3., 1.0000000000000002`}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, -5}, {-3., 2.}], {0, 1.}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"FC\"", TraditionalForm], 
              Offset[{0, -6}, {-2., 1.0000000000000002`}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"c\"", TraditionalForm], 
              Offset[{0, -6}, {-0.9999999999999999, 1.}], {0, 1.}, 
              Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"\"", TraditionalForm], 
              Offset[{0, -5}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
              Automatic, {1, 0}]}}}, FontSize -> 7, StripOnInput -> False]}, 
        ImageSize -> {230.00000000000003`, 126.85}, AspectRatio -> Full, 
        PlotRangePadding -> 0, 
        ImagePadding -> {{24.00000000000002, 6}, {16., 10.850000000000005`}}, 
        ImageMargins -> 0, 
        BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"Tensor\"", "\"tanh\"", "\"FullyConnected\"", "\"_copy\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                   TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 0.9, 0.8], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 0.9, 0.8], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                   TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"], 
                   TemplateBox[{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #4}, "RowDefault"], "\"\""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontSize -> 8, FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"AbsolutePointSize", "[", "4", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 0.9, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.08, 0.9, 0.5333333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "0.9`", ",", "0.8`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 0.9, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 0.9, 0.8], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "8"}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
               RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
               
               RowBox[{
                "LegendLayout", "\[Rule]", 
                 "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{
       {GrayLevel[0.7], 
        LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
         1.2246467991473532`*^-16}}], 
        LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
         6.123233995736766*^-17}}], 
        LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}, {InsetBox[
         GraphicsBox[
          {GrayLevel[0.7], 
           PolygonBox[{{-1., 0.3333333333333333}, {0., 
            0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
            0.3333333333333333}}]}], \
{-2.4000000000000004, 1.4695761589768238*^-16}, {-0.25, 0}, Offset[8], {
         1., -6.123233995736765*^-17}], InsetBox[
         GraphicsBox[
          {GrayLevel[0.7], 
           PolygonBox[{{-1., 0.3333333333333333}, {0., 
            0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
            0.3333333333333333}}]}], {-1.4, 8.572527594031473*^-17}, {-0.25, 0},
          Offset[8], {1., -6.123233995736766*^-17}], InsetBox[
         GraphicsBox[
          {GrayLevel[0.7], 
           PolygonBox[{{-1., 0.3333333333333333}, {0., 
            0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
            0.3333333333333333}}]}], {-0.4, 2.4492935982947065*^-17}, {-0.25, 0},
          Offset[8], {1., -6.123233995736766*^-17}]}, 
       {EdgeForm[AbsoluteThickness[1]], 
        StyleBox[{
          {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
           DiskBox[{-3., 1.8369701987210297*^-16}, 
            Offset[{2., 2.}, {0., 0.}]]}, {
           {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
            RectangleBox[Offset[{-10, -10}, {-2., 1.2246467991473532*^-16}], 
             Offset[{10, 10}, {-2., 1.2246467991473532*^-16}]]}, InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJzFl0toE1EUhsdOlYpUu1RwYRdKqeCjCrFLrTYUmS4iWUkwj/tIC400tfja
RDcuFArdFRFfce6dASmKIIgL3bnQjVtBBAWpCELrQlGM/40z6Vhaa8nN3B9O
IJmZcz/OI+dMd/50irVZljXRgY9U7uzhcjl3/kQXvqRLEyO8RMlQ6QzltHwo
b+PHbbAeWLvVEjnNPJzJ3NlEqbubUjnEmHdKF1REa+CrrSsWxH7G5DnYQ0a9
94zKWtRM8I2O+lsZExWc/24pD+wn7A2j4hnuuRsnH2P+FkbkNZz/rcFDxGew
3FC5RE53pdO+3QKmVfkQi+Ng+7gYJ+8RJ+6xGHj+yafOB9eVkItT+ZJzcTBm
pqgafNnszQ7U/f1GzJi8WKlU2gyyKdX5xsf9jZR6TwK2BULcI4a5QjnI6QZG
vMdh/XMu95qGCmXb9jC4RBC3L5z7vaaZoupPZGYDtnlC/AOmeaJC/Y8kk5OK
7Qdq76gmt44O6+0ZuJQcnPzV15eq7dvjTGnyq0Uqj4jZV5XXROKkq8uvDnF+
bye4PgW9egsdMmyaKRQh1e3g+vCHTT5V/yuWxrw0o2JR7ADX26BXX+TzDzqD
S8b56jsb9ebCeZrNznZFLhvlU3sQuL4HOX2+hE3JCB96tFvtROGsx652W83/
ZW6NlU/NJ8TpemS/XeBEFNRuvsIjLeUbG6tuxn42gPl+GSyvo7s3pcJVPbuK
C618nHpXUePV+r7/137bsHnMrRn1TvWfLrXyLcOjav8V6muaFzxnhRqLj4+I
C5zIHGI0qN5PGJtZr9N/s/oNYYBWKw==
                "], {{0, 25}, {40, 0}}, {0, 
                255},
                ColorFunction->RGBColor],
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                Interleaving -> True, Magnification -> Automatic],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSize->20,
              ImageSizeRaw->{40, 25},
              PlotRange->{{0, 40}, {0, 25}}],
             TraditionalForm], {-2., 1.2246467991473532*^-16}]}, {
           {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
            0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
            RectangleBox[Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
             Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, InsetBox[
            
            GraphicsBox[
             GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
               0.9, 0}}, {
               {Opacity[0.2], 
                LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
               {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
                PointBox[{1, 5, 2, 3, 4}]}}],
             ImageSize->18], {-1., 6.123233995736766*^-17}]}, 
          {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
           DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
         FontSize->10]}, {
        StyleBox[{
          InsetBox["\<\"Input\"\>", 
           Offset[{0, -7}, {-3., 1.8369701987210297*^-16}], {0, 1.}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"1\"\>", 
           Offset[{0, -13}, {-2., 1.2246467991473532*^-16}], {0, 1.}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"2\"\>", 
           Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Output\"\>", Offset[{0, -7}, {0., 0.}], {0, 1.}, 
           Automatic, {1, 0}]},
         StripOnInput->False,
         FontColor->GrayLevel[0.5]], 
        StyleBox[{InsetBox[
           TemplateBox[{"\[Cross]","\"\[Cross]\"","\"2\""},
            "RowWithSeparators"], 
           Offset[{3.3677786976552205*^-16, 5.5}, \
{-2.4000000000000004, 1.4695761589768238*^-16}], {0., -0.17}, Automatic, {
           1., -6.123233995736765*^-17}], InsetBox[
           TemplateBox[{"\[Cross]","\"\[Cross]\"","\"2\""},
            "RowWithSeparators"], 
           Offset[{3.3677786976552215*^-16, 5.5}, \
{-1.4, 8.572527594031473*^-17}], {0., -0.17}, Automatic, {
           1., -6.123233995736766*^-17}], InsetBox[
           TemplateBox[{"\[Cross]","\"\[Cross]\"","\"1\""},
            "RowWithSeparators"], 
           Offset[{3.3677786976552215*^-16, 5.5}, \
{-0.4, 2.4492935982947065*^-17}], {0., -0.17}, Automatic, {
           1., -6.123233995736766*^-17}]},
         StripOnInput->False,
         FontSize->8,
         FontWeight->"Thin",
         FontColor->GrayLevel[0.7]]}},
      AspectRatio->Full,
      BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
      ImageMargins->{{0, 0}, {0, 0}},
      ImagePadding->{{24., 26.5}, {26.999999999999996`, 14.}},
      ImageSize->{215.5, 41.00000000000001},
      PlotRangePadding->0], 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", 
        RowBox[{"{", "0.`", "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.18707525730133057`"}], ",", 
           "1.2225501537322998`"}], "}"}], "}"}]}]}], "\[RightAssociation]"}], 
     TemplateBox[{Graphics3DBox[
        GraphicsComplex3DBox[CompressedData["
1:eJx1nQV0E80Wx4tTpLi7u7tOcXcv7l7crbi7e/HiWijaAm2RAnUX2jRN2lSB
D7eX3cz/zmQ57513Tk5/37KZ/LKZe3d25k6FcbP6T8xsY2Pz29bGJov5ddOK
O1ePHL7P8GpGsTunP2Ddfg5P7pvDS+Y2HSfeY+/uRa8KavfWiv92vMNqPqiX
q/aTAJmP6bzjJptxaHbQzMgQmXtk33WVXVt488T1bxFW57lo78IyBn6c8qHI
eyuet8kZdlj9X5wVb6g/xh7kfLCypUu8FS/yZS+LXBQxPvJughVv03kj+2X4
0XW5l9GKe46axcoMLlW3TFCSFR+xfap7W69WhZ7okq24x9y17qMbj/g26kOq
NR+7033NmeXRf/+mW/Fc5fa74294VQ4PKPaC/pb5lX1e5Fni9ptLeJJnidvU
vfiMPEvcKU/np+RZPn6a3p08y/zYqMfkWeYVfz8gz3I7jzx1I88SLx995S55
lrhzbvc75Fnml77eYvAst//xoJsMnuX2PLx+ncGzzM9/u0Le4U85z7NxfnSc
xMuPbu9Lf0vcudWLt+RZ4vaxg9+QZ4l7PPn0mjxLfIzx5CvyLHObkS/Js8w7
1H5BnuXzr7LzJs8St6mQ1Ys8y+1snteTPMvn2VjjOXmWPewe+ow8y/zU4afk
WeKxkcke5BmelPaMLRpMnmX+bmAQ/XuJj2l9MJD+lriz3fsA8izx2BV1Asiz
xO33rPUnzxL3KKvzI8/y8R7d/MizfPyjBb7kWW7/qOnvyLN8ngXz35Jn+Tye
u96QZ4mXf+fuQ55lHmPjQ57lz1t8wGvyDB/K8S9PhJNnmTeJDiPPEnc6Uy6M
zitxjwWTQ+lvidskuIaQZ4nbf88dQp7l86yfFkye5eOrBQSRZ7k9nToEkWe5
/UWfBJJn+fyn2geSZ/k8r/wCyLP8vr2nBJBnmYfkDCDP8nk+3fQnz/jcioeW
n6PJs8wvNIomzxIfU2RhFHmWuLPxcSS9n8RjB+eJpL8lbj99XAR5lrjHV49w
8iwff7h6OHmW23PvcBh5ltu/qXAYeZbbWehwKHmWz9OqWih5ls/j8SSEPMu8
6+gQ8ixxp4k5RR6Az6d87zVyiXgjcefRF2PJs8Q9DnSPJc8y/xslrkuJ28yq
JTxK3H7t6hj6Wz5Pvtho8iwff7NLNHmWuJOvWxR5lj+Xc6Mo8iyfv5ZbJHmW
zzOgcyR5lt83LDqCPMt8zMoI8iyfZ0U1kVfhcyjH5/ylI88S92h7VEeeJR67
oLWOPEvcZnSs+J1L3PnARnFdyud3big8yucxxsXS3/Lx9/bHkme5PZ17x5Jn
iZe/njuWPMvnNx19T57l8xeo+Z48S9zpwNMY8izzsuNiyLN8nla5Y8gz2qsc
b3ynJ88StynrqCfPEi8/KJ+ePEvcvu1t0W9KPHaBg/idy+d3yiauS/k83nd0
1G75+INTdPS33J6qFXTkWeJjdsTEkWf5/EHOceRZPk/i5DjyLPu51CiOPMs8
LUsceZbPsyIsljyjXcrxxdYYyLPEbXpXMJBniZdf/0zEdYnbO04ScUjisefy
in5TPv8NNz15ls/zZbKePMvHvyilp88jt2dwkPhb4mOe7I4nz/L5sw6MJ8/y
eYqXiifPsp8Ig448y7zsPR15ls9zdauOPOP9lfYvL5JIniXudOuOyDsl7pw0
SORJEvcI+G4gzxIfk+uUgTzL5y/c00Ce5fM4/BS/f/n4WtfF9Sq358Fk4Vfi
sRWriL/l808x6smzfJ7l1/TkWfbDlurJs8zXdteTZ/k8BcrpyTPeR3nfJZvF
fZHE7W9UF3m8xMcYXyWSZ4k7+c1MJM8SL5/T/D3Cs3z+gh4iPsnnGTpL9Kfy
8TUqid+/3B63SAN5lrhz+cMG+vzy+ScNN9Df8nmWVjSQZ9lP67QE8ixzpycJ
5Fk+T7694v4f51Pe932MiTxL3KboShN5lnj5XuVM5Fni9k2fi3xU4rEzp4n8
ST7/4iIi3svneeKZSJ7l43cuTiTPcnvKNkgkzxIfsyFNXMfy+d/cEN7l88Qu
EsfJfk53MJJnmRsKGcmzfJ4FiQbyjH+n8ICiKeRZ4s4574r7T4l7sCHifkni
sdV/msizxJ3GnDaRZ/n803qZyLN8nhu/RB4gH7/6hohbcnvyTxX9rMRtllQV
/YJ8/ieJieRZPk/A9UTyJfvZvyyR/pZ5eI9E8iyfZ3L5RPKM/65wt4ZifETi
9un+KeRZ4mOqzkshzxJ3ylcshTxLvHyXJyLvl8/fb6rIU+XzHCwu8ir5+Clv
TORZbs/XdSbyLHHn0e1N5Fk+/7msJvIsn+e+j7i+ZT/LDorvQ+buk8W/l8/T
u3USy16mVIV8Jg96VTx4TH1K/iU+pnLtZyxjesq069/SZG7TquV+Oq/Mw/fu
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
yTPmXyjXc3iPaPIMrlzPS85FkWdw5Xr+ljmKPIMr13O5iZHkGVy5nk+8iSDP
4Ipnu5YR5Blc8Zx8NZw8a+elwzO4s0PQkb2Xw8gzuNlzcGCTMPIMbvZsP/pF
KHkGN3teXm1MKHkGnzzTrVhem1DyDG72/DPufAh5Bj+1Ievl6QNDyDPmswwO
3Ra82DWWPIMHX3L51XVcLHkGX+fstShngVjyDK5cz83WvSfP4Mr1fDc5hjyD
K56rDoshz+CK5yxvo8mzdl46PIMr1/Pl11HkGVy5npMHRpFncOV6XmSIJM/g
yvXMVkWSZ3Dleq5SLpI8gyvX8w+vCPIMrlzPa+dFkOfD/HOYPX8eckFHnsHN
nktXH6gjz+BmzweNmXXkGXzB88SAH7fjyDP45A1FHR9MjiPP4PMO9O83t2wc
eQbv5nWy+NiwWPIMbsPnpcMz+Jw60342HhJLnsG33ki0G1Q6ljyDt+jxdV+T
1+/JM7jZc9Tvce/JM7jZ89r4zO/JM7jZ8zK3izHkGdzsuVL7ITHkGfOtzJ6b
NDPff8EzuNnziBzV9OQZ3Ow51Ds4njyDmz0XjNgQT57BzZ6vHW4ZT57BzZ53
9/ugI8+0jtDr5FD7yzryrJ2XDs/gZs+tCpvvd+AZ3Oy5d+P0OPIMfuzcslw/
7sWRZ/BKThXrjloXR57BhzeLytRvYBx5BvcZcWHFw2px5Bl8Wbs1/Zz+xJJn
zF9TPE+uYyDP4IrnZhEJ5Blc8fxlUwJ5Blc852qZQJ7BFc+vUvXkGVzxvPqs
njzTukyz59mj9ORZOy8dnsEVzx2j48kzuOJ5wul48gyueK45PZ48gyuedzSL
J8/giufVOeLJM7jiOTlCR57BFc83burIM+YDmj27+ngYyTO42XPU0ZlG8gxu
9jxkeGkjeQY3e97j+NZAnsHNnuvWXW0gz+BmzwUMzQzkmda5ep0MC/ognp9p
56XDM7jZ80OX2QnkGdzs+d3LJgnkGdzsecuOP3ryDG72fO3jaz15Bjd7Xp1w
RE+ewc2ef/dx1JNncLNn/8KdxP015leaPS941TiJPIObPR87HJdInsHNnosN
25VInsHNnvvPaJdInsHNntNqfTaSZ3CzZ//4y0byTOuGvU4eCpgonkdq56XD
M7jZ87LzegN5Bjd73uF90UCewc2eu2+bayDP4GbPjhltDeQZ3Oy5XbydgTyD
mz0/7qVLIM/gZs+7C95PIM+Yr6r0G/W2mMgzuNJv/G1qIs/gSr/xJCGJPIMr
/UbAgSTyDK70G7u7J5FncKXf6JYpiTzTOmxzv9H8YSJ51s5Lh2dwpd/I0zKR
PIMr/Ubtv0byDK70Gx9fGMkzuNJvDN5nJM/gSr/RbYKRPIMr/cbtZkbyDK70
G4vtjOQZ83+VvK7Cs2TyDK7kdR8ck8kzuJLX3SyTTJ7BzZ5veb4zkWdws+fe
69aYyDO42XOD1i1M5JnWtXud/Fbzk3iOrp2XDs/gZs+Rf+YkkWdws+e0ss2S
yDO42fMl/d9E8gxu9vyuq/lveAY3ez7V6lgieQY3ey5zflYieQY3e/4wrXMi
ecY82CPBG0b+jE4hz+BKvxG2JYU8gyv9xqEWKeQZXOk3LpuSyTO40m9MO5FM
nsGVfqPioGTyTHUCzP1GgXxi/Fw7Lx2ewZV+I2G7iTyDK/1GtgEm8gyu9Bs+
pUzkGVzpN+olJpFncKXfqOiWRJ7BlX5j29Yk8onX7F9Ol/mw2VNz3/eMzR3V
Jbvv36fkc0TquDajPzxlM2qYrhX7/YR85ppQOEoZh55pu6hCvbwPyOcC162f
l3u5s50JQ2dfbOhKPoNOpzVU5j/nrnW1mGHWDfLZeFe/2a1cHrJ8bwofvL39
AvncxcfBKtpY6nLA5+85ebco7R9Vz6v05l13yefVxCfVb5jbv9uuztwc7W6R
zxGjZ79Q2j8hdXb5iWWukM88IRUmKfPT3Sp7p576eIZ8Ljl83naluf3zW+/J
uS/TIfIZtsG2S7S5/W6ZttW7VWI1eVz/aPW+tS3fMLdjZUvnbfOOfOK1afYI
p4MPfMhn7EW9v67Wa1b96+Fu79kr8rmr/IHZeyq/Ym+c55Zc+M6bfLKDXfK1
L/OS2b1YMPrJZE/ymZ73+9UPRV4w74q37hjzPCOfJ9dd6nnKzpt1/TSxcfgK
d/LZi48f5rSx1N+g67PuzrLrzO238//v++pfnuSz4Tn7x0r7u/9o2bpn5DPy
qSv1cXi8uf1RxoCgKy89yOeePWd+KO2fEDO/kt3mx+Szne2gw0r7Q99ENGl+
/D75/LAqe/OP5vZfr/9mV7m3rtQPOH+5F6K0f+e+Vn7hxW6R5w2q5wDWfUnh
wdtCAslvlJrX+bMbPar/cDscQJ7xOn582+qeY/zJ85a0rZm3XvdjZUPGxCys
7Ueeder34sfC7Rq4Zv35ljzPf720/YK+vmyVS7jXLxcf8ly5Xe24yt3eMadH
3v39xr8izwF8/DArr78Bz+sWbApX2p+Wd+y57TPekeeo+nEuSvtzzy+0t+rA
N+S5cUqLxUr7S5woFj2o+2vyvO3Cni5K++uOm/7iT++X5Dl+XHLReHP7qx7I
tVI31ps8L2y96Y3S/qPr09+cXeNJnqvcbjG9irn9M+YXOuR34xl5fnnk2Siv
ISFslH7HBIcJYvytnJpvBLOJhbtmpNYOJb8LCsz/Pb9vMPtva5bCY74Hk2e8
zhvhc33J6yDyXGVTlWOVuwWxzzNccqc4B5LnFR1WTl/uZf5ei5/O12dFAHkO
/hPSMqhdIGtp8+RFOfP3SM/f+fhhZs04p/eAV2eU9tsnDIot7BlInsvmqzhP
aX/kwiD7ro8DyPNC9fsNZr1My/y9H/uL8eT1gQXemtv/rGaPhmu8/MhzVfV7
D2Jnujj9cXXxJc8rf627obS//n/Xy3cOekueQ9TrIZA5Hit7j+V9Q55zLclS
I8eCCDa5y4z0XE+jyPNYNQ6Gsxm3HlWM3hlJnu+l33lxd2Y4+zEhX9r2cRHk
N9/lvAftTGFs8WzHBoYW4eQZr/Uf6uwPFg0jz+4V3Js80YWyGqfm+TX/HkKe
i0UXy1Z0dChz9axavatOjHM68vHDzJpxzpwNczkq7V9TPnW8V3kx/jZGjRfh
LDwl8+xm5UPJs5vLwzz3zO3vdrSdy39VQ8hzfjWOhLHHRV1upDUOJs9Tys28
rLR/WbfGJbJ3DyLPHhFeS5X23xkWH5dnUiB5Ln6gbHel/SVSbo57uSmAPPcc
0vFT1z0xrNnUno02zhPjb2cKHn/mbBfDatVa4Orz6D15/v728+5vW6LZ4VcD
3CYfiCHP/Tb3Hts3RzT74tG20eX50eT3YscL9V3WRrGh39o6dhkaRZ7xuuD1
8H5B7SLJ87CHQ32HLI9kw8OPJL5rIM2/5OOHmTXjnN3z92jezdz+cnmWuL/s
LMbfTvucyXHK3P7DniX/VukVSZ5/bPgVorTfNCrB8Z1DBHnu337QeaX9bb1D
r92eFU6eL/2+ukBpf21DusPdrWHkOfP97J2U9pfS12Qu10LJs8P80YWHmtvf
cvR6Y+8wMc75Qu034ti1vDafS00V429zvzl2/lAkjv38Xa/1jdA48lxW7U9i
2ZL8Y0MbdY0jz69vvyjSbU8sa9H3UMPcD2PJ80K1n4llP+pFpO6oH0t+K84q
n+BsF8uu3B+oK9L/PXnG65e+xW4u6xZDnj/y8cPMmnHOzl87rVba3777ylLf
i4vxN8vxcWxQUIUTD9h78nzi1om+Svt7fZ019t3AGPJs+b5i2XNDQlTZOdHk
+cvMr+UWmNsfsGO157Z9UeTZ8j3Gsr6F7H8lPYkkz8f6O8co7e9VtKz+Z7oY
50y0je+gtDe8/IuGkUyMv+2dvLPWnsrxbKrd3QV9bsWTZ6bev+hYzbLn89yu
KsbfTBUTfyQ561id4cfGTzuuI88HnPbpiozWsQbNj5d8V1RHntvH2L9uV0bH
+o67UqLmXjHOmdYq9ebMyDjW/PKbX48KivnBeM2kGefE6/oubYa4pceR50Ke
BXsr7b+h37Fh+VIx/mbpr3Qs6NN/Iw05xfjb9FXTyyjrAWYmOh5POxJLni39
mI653f+5bb35OoHn5y09U5T2z/vYqFv1ve/J8yy1f4tjX9J3Vv/hI8Y5bdX+
OYFtbn+odKavCeT5Tsj1/Ep79zzu2GX6TDH+Nkbtt/XsjcNHL88EPXnOsydn
7Jbreta1yvmsc8foybOb2p/rmffOCWd8osU454ReY6/raunZqC4NtpQZFU+e
86v9fDxzL5Nv0Pk4Mc75kI8fKv9eHufcFLyhh9L+P0E/2sacF+NveD3z13bw
oSZi/C121/uSynwUdqxOkW8vdCLfUPMlPetfdmLrLyN15Ll5z+Ympf1FVlwv
tParGOfUq3mUnuXvnnvvxn1inHNXjt33lfb3CFk4zdA4jjzXTKxk57LWyNIz
T7cbvUOMvwV38vsc2M7IGvoFuTzLKcbfVqv3NQbm4s4OFllvIM+1M9XwqvXE
wEZF3ej0KIsYfwsbFXxlyHIDK3q49sB86xPI8zo1nzSwxNN3LznYJpDn+iXr
Lr/+LYGt8+mXELVLjHNG8fFD5d/L45yW/t/Imldzq9u6rfA76PSA4so8p+Jn
17mm++nJM17T90zUd50sxt+ujrxiVNrferLDMvtMYvzNEi8MrGXxcc+8T4hx
zmwlst1T2j+72bKbniyePN9U40gCSyhy9ltpvRjn7KHGwSTW91czl27Zxfjb
lzsZEfP7JrHi6aNLHlknxt9Oq/ExiRXMujk2PKsYf+s9u9slpb09O7tNmrnR
SJ5/qHEzkW2u/rHn1Txi/O18rdNLKndLZLFDWi5L2CfGOfur8dR8n39+7/aB
5Q3k+TcfP8ykGee0xIUk9qjnQu+qd8X4myUuJLHy6TZVXvQU42+WuJDElmdx
rpXXmCDyOv7a63f/Ix/WJZDnpTWX3FHa7xdY/P6Eqgnkuaqar5o/V/GMVX18
xDhnQIL/WqX9a0uHntg3T4xzzvCeEJbknMwOlvw+dc1oMf5WrHIBjyKjk9lS
fWzkubgk8vx89eML7coksx1+r065TRTjb47vp+6cGWnO65PcqpVLEeOcJdsU
XaS0t8WZW3kbLkgkz95q/DWxyxcftGqTKZE8W+KviSW8C+y1apcY5yzLxw8z
acY5k9W4kMxCKzXdMDqfGH87qMaFZDbouJM+4KK4jjuocSGZ+Wx6b0ruIsbf
0tW4YGL3hvUfdiZJjHPidWCOsEVJO8Q4Zxc1/ppY9Uqz2l5oZiDPn9T4a2Kt
/xQZ6R4vxjm3N1n/eMv1VDZ35sVZlY6K8bfmexucuzszlZ2ZP6DT5/Ji/E2f
Eb1NVyuVZTvxx/Gui0ncd/feMt/OlMIu/nd9qE9DMf7W+krTES1dUljv5Omn
t7mLcU5L/E1hdvWaNu7cR4xz7lPjbwo7uLvApaY6Mc7J/s84pyUupLIqY79t
tukhxt8scSGVfSyWrWfFpETybIkLqeyufdW7SVvEdWyJCykso/fwTX3qi/G3
R2pcSGFRLc7k6hguxjnx+nfPr8Y31otxzsJq/E1hYy9PvLewiRjnvH723Ola
T9JZ5Y5nXIc+FONvwzP336LMp/s88o4hpoMYf8s+5s+ctS3T2WvXyrsq+Ipx
zluPLw1T5iXGtjz6/d4IMf42stSQdpF309jX0aWf/0gR45yW+JvGagRcDmri
JMY5XdX4m8Yqj+/5+kJRsY5jzP8Z56ynxoV0dnDn44tTponxtwg1LqSzkPk7
k3PnEeNvlnGGdPOt2oLggTeTyHNDNS4oz+tmV2vtIMbfYtS4kMaKVVxR41Z2
Mf62RY2/aezKxaOBJ++K8cyS82esa+3ykFVwOTI6yP4B+W/GeZ5a3fIPDFtC
874+KBPl/j5nxrG9mhSYfonO04D/97qnG8ZMNyTTefB64VHZa87TxPjqFf49
Hhm1c/12lkQc44QFMubWqT9OjBNiHtryh03znPO6Rxzzlx8+T4ov1yKNrgfM
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
7U3wqxj5faXwqb5t5XiqewOflvito/samk/L68yi3h18flR/Fzp6rgGfwWo8
1VEdNnh0U8ex49hwdeBD+MTrtEfz9xbPKvLz7rydqJsEn3V4O3FfQ8/9eTtR
7w4+P/F25uXPNeAzhLfzM69HBJ/3eTtjXikj/eJ+x9IvJbBKg5RfTLomX0qg
+oHWeaae7mus47ue6trBZ5Taj+npuQbNT1bjqZ7qrcGnJV+NZ4eVy+GaSdN/
JjAXnn9q57mhfiB8FuPtxH0NfP7g7URdO/iM5u3swZ9r0Dxk3s5GvN4afJ7h
7SxtvnpeNhI+Lf2bkSnDmZ7RwifyD9QJhE8b3t5G/LzWz9cMlOfDp6W+kYHy
fPi05D8GyvPhc5vaQSdQng+faKeB56XWzyuNVCdQO58NeT586nk7kefD5wve
zs08z4fPS7ydc3ieD5/beTsdeJ4Pn8jz/OqWb7o/u7h/tORFSVQPED4tcSqJ
8n/rfCmR8n/4vKHGhUTK/+HTkkeJ8Qbr5/6JlP9bx6MkHj+Fz5y8nagHCI/J
vJ3I/7Xz1pD/w+dN3k7k//C5j7cT9UXhcxFv5yGe/8Onpd9LZunq82jhU+3m
RydT3T/4VC+HMsmU/1s/rzRR/m/9/MJE+T+t+1Dji4nyf/i0xBcT5f/wiXaO
43kpzdPm7UTdP/gM5u1E/g+Pbryd+P1p56ch/6f1HbydqCMKn2N5O5H/w6el
30tldkpa0UT4tOSZqVTfDz4t95uplP9b558plP9bP79IofwfPifz9iL/h09L
fEmh/B8+0U5nnpfSuiTeTtT3o/nYvJ3I/+HzNG8n8n94XM/bifxfOw+tNs//
4bMHbyfyf/hU3/ZJOqujPt8XPr14XTfUuYVPy/1pOuX/1s9/0yj/t35+kUb5
P3xa4ksa5f+0bpG3F/m/9fyEdBbD81L4RP051LmFz4u8ncj/ad41byfyf/ic
xduJ/B8e+/N2TuP5P7xt4OMz2ZSJI/nE/LA9nNdWJ7KI+TY/+Hyz4eZsu3qU
uN/H57U8B8z4Z74Z7i/wdxz3sEYZUO4ouOV8Gcw29MzsNt1FOzH/Z4U5Wj+w
TbPah1v57z/8TCHThnpa7dOj8K6HNh40RFntw43jB3eJfma177LC8/uZCqfM
eGq1PzHn+17beljtO6vwz6eC6ximP7ba/xW8uOGB1f6g4CfWuVnVH+E8tWi3
u1b1MjjvNazxHat9/jh/u7HzLbkeAfGqq25YrZ9XuKnD5eHzHly12lcM/PaT
S+QTv5t4h2Z2H0PeiPqAnC8c0exLMYd35FM6fse74aLemXR803nJr8inxO/2
2/SSfErn6b208QvyKfO9H8Q+sjIP8RB1ZyR+reCZ5+QTvKRDM9PtQ8/Ip8Rr
+px6Sj4lfqnkEw/yCe7t6li6a4Q7+ZT5lBFPaN6kxI9F2zzWePZnlyrdnjB3
d4DGsz/LXOn2qGwDAjWe/ZlDxdtusYH+Gs/q8X9ulfLXeFZ524rT/DSe/dmd
jpMazHTy1Xi28A1t3mk8W/irPG81nv1Z1s6TVmRL99F4Vvnj8/rXGs8q//04
9ZXGs+U8eXO90nhWeXTRFi81ni286tIXGs8qPz72jTd5Rr++Ofj71EyHxX7Q
Mt/nECrqFQr+alZkMHmWuG37SsGiTpzg3W7OEfXOwA+EfD/s9SJQ1OESvET/
qoHkWT7+03axL6/cngJ/RR0fuf26JaLujNxOxz9+5Fk+z/5tfuQZPEvw99Ul
K/uRZ/Dslz5l6bTZlzyDl7vy6cyqyHfkmZ77XXd1O7lC7Act84YskjxLvLid
Rzh5lvjQ2Bzh5Fnih/oMFvXjwMddc9WPvxJKniU+ISNXqKjPJR2/e67Y51hu
z434YFH/SGq/06hgUa9HameeeFF3Rj5P4zmiTgr45+uub9xyiroeMre/GCjq
TYh2Vh7VP5A8U/2JY3f/zGgl9oOW+d9fMeQZPOfxu4MjV0STZ4kfuOol6htK
PKR0YVGPD3zH8bt1G0yLJM8Sv/b4pdiHWz5+dH2xb7TcnhWnwsmzxL/0Kh1O
nuV2hjuLOj7yeTLVE3VnZA/rvUPJs8zzTg4lz1I7HWvlDxV1cnke1zA+edVR
o9gPWuJ/J3QVdUslfjJgk9gvXuLuD2vHkmfwCd6h7oYLor6hxP/++C32i5f4
qo0jYsizfHx1T7FfvMRZlybR5Bn8gndoZLEbos6UfP4zjUVdJPk8Ps/EfvHy
+/ZxiCTPMg/9IfbvlM/z+UwEeZbXgSr7wlv3J/GsUMnAUs8aif2LpePV/eWt
+xn1+KNb94l9z6Xj1f3lrfsf9fhW34NE/VPpeHXfeet+ST1+uG6xqOMpHa/u
R2/dX6nH/yxRXtSjlD+vsk+9dT9m+byVfXT0vcvtUfavt+7fLO2ZtlTst65d
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
ACPVZ6HzdMkxf8QIA9UTAdd1aTy7dV0Dy8Tr8SEfi5g7soNSfwb148BXHDhQ
6frfRLaZ1x8BN+xpGJ19iDkv53XlkIdk754UqtRRQV0SxN/+rVrP6XXFS65r
rPLyY8uO+pzHheqV4DxrPxX/lLleCsvgz4/BG/D6JMjDpfzHvkarFKpLAn6r
RcnLubsnavZJ9KR1iNb7KnrSehDr/RM9aR299f6J5vY33b/hWKsUzf6Jnpb5
Qb2TNfsnerI7yjTSsSbN/omebKUynXC+GM8Cx7oP6/0TPWl9ovX+iZ60jt56
/0RPdq6Cse1DjwTN/omeTFku7x6o1+yf6Mmafw3P5mmI1+yf6MkyKxNDv+vI
J/INZTlpHiZ8gi9OqtogZ23hEzyPMtGkv/AJjnVJ8AmO9bPwCY46D/AJriyf
qnhC+AT/HWRu0U3hE1xZPlvLU/gE331p+o16ocInONYlwSd4Fb5+Fj7BUecB
PsHdBvVr266SWBcEvsbj9alOTbWe/ak+ibVnf1onbu3Znz2/Vezt5mVaz/5s
u7JQbYfWsz8bokzjOqX17M8qKNP572g9+7Nkvs7O2rM/rQe39uxPdUusPfuz
ruaP5SKtFwUvqCzwK2TQePZnUfNG9LxZNUHj2Z8pywRdW2g9+7NZ3foUetBT
69mfKcvEn4wWnpHvYR4aPINjPjA8g2MeNTyDY74fPINjXjo8g2P+JDzTvC0+
nwqewTHvF57BMT8NnsExjxqewTHfD57BUbcHnsGxTgqeaf641Tz/DOLpF5QJ
ZMIz8t6J9Y4UWvRQeAZXyvbMdRGewZXDl70TnsG/Z90esSpOeAZXpzP/JzyD
Y10zPIOj/gY8g5fndZngGdxUMsVnv73wDH5nvfmTDRCewZVtS09MEp7BuyoT
3ZYk/LMOrABf1wzP4JFW9TcyiKPeETzjfgHr8eEZHOsi4Rkc9WTgGVydx5pL
7OcOvnR81kK/y4i6IeAdlYnyDYRncLsW5gDT0WT1vErhoXz9IzyDn+Lr9OEZ
fDqvJwPP4E2U5VC7hGfwv8r0wzPCMzj2b4VncMuyN+EZfASfzwbPeF6plHOY
Yif2qQXPeaW0w4SfwjP4MWXD6Qqi7g841u3CM9UT5fUl4BkcdZDgGdxTKWA0
U3gGV2b9rnUSnsGV02/cKzyDK7tibz0vPIMn83W78Ex19Xh9Ce28ZtRBgmdw
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
rIcBr1lv2i2vdPG9go8zVNrg5i68gPvnTs9Uaa8YtwKvz+tUaPM6PDfE3/Cn
lEm4MiLtn7zOUVkAGWf8J6/Dc0Pr8/hr9oUXeR32hdfmdVX4/uzavA77s2vz
Ojw3xPvSeItdnVvHr6f9k9e9UKb1xab+k9cpy60S8qf+k9dFfl857VHjxH/y
uh7q+izjP3mduvz9gOGfvA7PDdFOXF/W+0yJvA77RKCd4Op2Ty1T/8nrlGV8
maen/JPXYX8obV5nWY9j/CevU5YtLnc3/JPXqY8HMxL+yevw3NA6LkRR3RJ8
Lutxu7R/8jrsY6vN64rwfWy1eZ12H1tw1CfR5nW4zrV5XQ2+L602r1PjZAnD
P3kd9vXQ5nV4bmgdL96zJbzeCDyAm/jvCx7AMS9Xm9f5nOp099PjlH/yutbK
Dy8t+Z+8Tlne3apc8j953R9eb0Sb1+F3rc3r8LvW5nV9FdzB8E9ep5QJuTsv
4Z+8rp6y4Pys/p+8TrvPHbWL11vQ5iGoe2B9vRk1+ymLPATXoTYPwbp+bR6C
6wfnx+e25evlcX5w6+9X5CHa/hMc69y1eQjqwGjzEHwv1teViX8vGf/kIai7
Yn1dmagf1uYh2n4YXOluf15M+icPQR0VbR5Smffb2jwE/Tbaj+sC6+LRfnDr
/Q1FHoL+XJuHoD/X5iHa/hwc69+1eQjqlmjzEPT/2jykJ+//tXkI+n9t/MU8
bXxe8GP8OsfnBUdc0OYniAva/CSNxwVtfqKNC+A3+Pp0bX6C35c2P0Ec0eYn
iCPa/ARxRJufII7AAzyh/4cHcOxjrn1uaN3/i+eG2EdV+9xQPayq6KfAtf0A
OPYr1z4fPMzjgvb5YC4eF7TPB5fyuKB9Pmji68HxeeED/bz2OWAr3s9rnwOi
n9c+B8R6be1zwB28/9E+70N/rn3eh/5c+7yvPu/Ptc/70J9rn/cV4HUztM/7
Pgb0Gpe/eIrmc/mz8UrH1FX7ufxpfbT2eV9H3l9pn+stenKyZL3j2vb7M/PB
HwLeatvvzwbzdc3a53ovFionEnkVPkeJrOaeaa5oJ+1Tw9cXa5/rof/RPr9T
ssMeX0V7qC4TX/+rfX63gtfH0D6/wzpc7fM7/N61z+me8/Ww2ud0jXhdCO1z
OtRb0D6Ps76exfM16zxcPF/z5v229vmadb8tximxHkf7fK049699vgb/2udo
Ebw/1z5HQz6vfY6G/lz7HA37+mmfox3j36P2OVoe/j3Cj3adHfyAo5/XPkdD
P699joZ+XvscDeuPtM/RcJ1on5ehP9c+L0N/rn1epuP9ufZ5WX/NfnnguN7w
ea37oTRN/m+kuKB9Xob7Au3zMsQF7fMyxAXtczHk/9rnYujntc/FcvJ+Xvtc
DPm/9rmYdt9VcPTz2udi6Oe1z8XQz2uff6Hf1j7/Qr+tff6Fflv7/Eu7byk4
+mft869xvH/WPudayPtb7XMuA+9vtc+5tPt4gqNf1T7PQj+pfZ6F61w73wb7
PP4PS3XlTQ==
         "], {{{
            RGBColor[0.880722, 0.611041, 0.142051], 
            EdgeForm[None], 
            Specularity[
             GrayLevel[1], 3], 
            StyleBox[
             GraphicsGroup3DBox[
              TagBox[{
                Polygon3DBox[CompressedData["
1:eJwtmXngDlUfxef36D7u2LOmSNubeosWUZKlsrWgKO3WNu2pLCFCoexLVJJS
0b4pJEKkFWWJIhJClrJkCb2f8575Y9zP75pnnnlm5n6/55w5scP9Le/LJUny
DP8UYmwYkuRoxh/4+1kmVsFfwY/nk2QT3IfxReZ/gRczPxb+EV4Ij4NXwl/C
E+A18CJ4NLwMng/35vPHw9UZX2B+Nfwd8y/B6+Dv4THwcngBPAkuAZeAdzHu
YPuN7Szm72dsy/w58INwe7g6fB/cBj4bfgBuB98JT4HHwZ3g1+Fncz7eVrb1
bCdyTt8zvlbIv1/XYXdBkkzk77XwEua2Mf6Z+Fr8wbaTbQPb/mx+KVt39p/B
+HrOc79n+z/D/ArGL5jvCk+DJ8Pd4OnwFLgL/LHOAX4Qfg9+CX4AfheeqGsI
z4bfhfdk36vz2p2dj85rL9tfbNt1Huyve/wy44Fs/tfsOu7Ifvv2bH5zNqdr
zU9PzuQz9zDezAH2ZccvydaXazU/ex70uS3ZZ3XtdA0/Z/8p2T2dzPh3dlwd
szN/v6/zYZ8z4Lvhm+Ca8MPwbfD8yHfy9x0c/wu4DdwJ/hy+Cb4dXgDfAt8J
fw3fpnOFv4Q7wnfBLRlH6Hw55sXZc9IB/op9btV3s8838O3wvfBljIN0D9nn
O+bv1nPG/A/ww/BD8By4NdwR/ghuCt8AT4WbwNfD8+Ab4dvgZfCj8CPwIvge
PZfwt/Bdel713MEPwZ3hxfC9Old4KfyIrgv8SfD563d0YHsJHsl53gFPhsfC
VXVt4OvgSvDN8JVwRZ0XfBl8uq4ZfAN8AdwVvhOupXOEb4fP02+Fb4Vrw93g
TvD5cBf4DrgC3BpuApeHr4Ubw8fA18FN4dN0D+Hr4evhcfBA+Ab4WXgQ3B6e
CI+AT4DbwVfB1XRP4FvgE+H28NXwf+Bb4WvhyvAtcDO4CtwWbgGfqmsPt4aP
h9vAzeE+8Gfwe/AweBH8GTwU/g6eDf/LVl81hjEy3wS+AC4FXwU30GKCGzCc
DRfAF8PnwIXhxvD58PPwN/Cn8GPcv1JwI+5hPz1P8EmMJdmnBVyffZ6Dv4Zn
wincFK4NF4ebwXXh/boH8GmqT8xfrech53UwBH4MPqD7Cp/O+Jfqo2ob4062
s+AqjFt0b+CKjEfY6sHVVa9UN+ETGEtwzOZwPXid7g1civFX3Q/4aMbjeD4r
677wu05LWSt85p/C7AtfDe+Gi8A11DPgs+DHVI/43MlwO9UG5tfx908cbyq8
By7H/Jfwengz8x/DR+BTVJvhY/jsJYW8Fi6BxzOW4/8vgIfAReFzUt/vo6Jr
5P6sFqteHchqluqZ6trGrD6pTqkfqPYMZuyV8z67s7qn46jmLs1q3easvun+
qo6qbxRWXYDz0d+1N6u3qmFDGXvnXMOehnvmXCeegnvkvNZfSdyPO2drfBR8
HzwBHpZznXgZHp1zTZoEj4H7ZnV1EjwY/hR+Gx4Jz4U/zLn2jIeHwL3gt+EJ
cE/4LfiFnGvVG/DzcA/4TXh8dhzV9nnwCHgJPBceDi+G58CD4K/gGfAoeB48
VfoBngO/Dz8BL4A/ggfAC+Fp8JPwF/DH8EDdf3h69rt0/h/oOeCaXs7fN3KN
n2acyfxbzPeHP4RfzbkPjIafzLm+Pgc/nXPNfgLumnN/GAn3z7kPjIKfyLkP
jIEHwNfBT8Ld4LbwMLhPzrVXPaUffA3cD34EvhbuD3fJ+Rwfhe+Gr4R7wvfm
3E+ehwfnXONfgIfCT8GfwG/CLeDe8ANwP/gD+BW4GdwLlmC7Cu4DPwi3gvvC
D+fc7x6HH4KvgHvA98DN9YzC98ObuIb7GD9hHX0IN1a95nq+B18KXwMfy3gZ
+9dhv/+qv8FXZHVYNecSrX34cviinDWY6nNL+Fz1J7gVfFD9Bj6OcZs+Axdl
LMs+DeGa8MlwK7gh/I++D67EeBLzLeFL4TLwpfB58LGs64b8vZ3zr5T6/HfC
J6XuK3vhMvBF8O9webg+vBUuC9fVuoUrpv692+AKcAP4D7gcXA/eAv+h7+N7
U8a96j1wecZDbGfAlRkPs50JH88Y+FxN+FS4EFwDPgXOwefCJ6u/RPewpRz/
cHTP+x4eGf0dF3H9x0Rfi3rw6OjrWBc+FN3nlrD/UYznccz/ZD1Idf4kuAhc
Gz4DLgbXgavB29kqwcUZ97CdApdj/JvtVLgC446c63lJ3evUPXsP37Vb94n5
soy7dG/gMoylVX/hGjn3I/XBc+Gi8IXwmTn3IPWL0ozPRF+7+vyW4zh+I/bb
wfErp9ZOf8INU/uHCno2U+vvinDt1H26GNwotQ85RportX84Vtc1tR7az3Eu
TN3jizN/cWo/U1bPeGrvUR4+P3XNKgLXSV3LSsBnptbo/3Kc/6bW4ofhmqlr
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
piqd3yl4f2n4f4Prqjzgj9G5m/LPgrzf76j/5vKuk8q65gXn8Mo0JFr03kcZ
5qfBdVt5xbsxyz7Z3gp+hyKP9g58V2Jf9kZwzi+/1gGukljzj4r2/Mp/Ngdn
8vJlOpae/8783xbmxyb20a8HZ/jyce2Dc2D5AmVI6pVVGTsGe3x5/b3BWZze
lXwUnFlJZ1bOO2OXr78jOLuQ53o/OKeSzlQerGdsOMe5PTg/kba8OThHkv68
JTgjkp68NjiLkH5rE5zJSFtek52P7qmyaWUa0tsfBmdx0rpNg/WSPNGdwbmN
spf+WZ+Vtrki2GdJn9+aPW/6jWOCMy5p9Z7BWZk0+W3BOY+08Q3BuYr08D3B
mYwynC7BWZa07ni4U2Kd/0hwliJP+nCwvtKz3SI4N5MuvSo4w5EubQdXS6yN
mwfnVNKo04KzPvmF64MzK+nkZsE+Udr13uB8RvnS28FZpTT/fcF5kfKZ++GL
EvvlrsF5nbT6dcHZkXTpK8HvpKRDWgdnRNLhR+Wd/cpHtw3Ox6TnRwfrFmmY
x+ArEvuRYnm/+5DXHsL8jYn9y+XBXky+Se+gpQuaolt7BWeP8juXBet5ed6/
4amJ35cVyuqz1tTg4AxTfuSJ4FxRvunJ4OxR/iioFyb29f8Dd+rpsA==
                 "]], 
                Polygon3DBox[CompressedData["
1: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
mk5fWRPVMifUqZUTwq/BZ8GLwj80qf+719EX3zfRI7vV0Q/Hco0JuNZ0vmO1
WBtteyTxuYkfRLwQn4DPViRe2uiBw+roCTXZZex/VEWrTcT2Ovtn89liA5PT
HvPZ1Rmv48OvwGfAC8Njwc/DJ9epz2PCz8En1anfY8DPwifW0QNjwy/Ap9TR
IyPDT8DHwPN1+uIN+Bx4cXgC+FXnHrzIwNTvJ+Fj4fnhleH94R34jVfxW+7k
+U4Bjwl/ZD/SZH78t5t/23D8efBx8MPwtvD51k/4EXg7+ALfB/wovAZ8iPkC
vh5ezZ4B3hm+Fl6xTf+1BnwZvDp8MGwTeh28NXwuPAweAb/fi15Yp6S+bUX8
TMcP/JDxJnN/U37f4/YTxC/395vj4Td70U+rlNTvt3vRT6uV1Pvt2/RvJ8KP
cfwHveiL9Urq0Ru96LuVS+r5lhx/hu8XfpDjd2qjV8+An4I/60UvbAKPy/Gf
9qIHNobHgZ/rRS8vUqLnVuX8A+Gd4Gv60SvrW6/q9J/PcvxK8MIl+vKZXvTX
giX68ele+t3BJXr0+V70+6Il+m0Frr+BYxm+1P6jzfVXUPfDr/WiR2X10b97
0VvrltTrT3rRLxvBY8Mf9aKn7I+t7x/2ot/WL6n/H8M7wBvCY8FnNMklU/N7
Luf7Xie+obWrRA+d3kSPTFVnPNxPfHZ4EPEvrE9t9Mxp8BPwjm30++nwk/BB
nL8QPCrnX+j4a5J/3y/JjwfCC8KjEL+gnzFyUsk7d+wcwbYE+2PX0UOf96If
N+WY8bi/p3rxQxYo0cv39FJrJ+rq5b299H8Td/VafTwYHpnrnd/p/eWN13ne
ezSpX393v2/PJvXJptL6qYdwYYnG1Fs43h6S/UnqvL/fe6lPzg/1yJHEl4TH
qaPvNm/y/L7t5vNbvej5VUv08Je96M3NzXHwhjzP4+AD1GQcvx58lPkevhVe
Bz4C3hu+GV4bPhzeC74JXhc+0nwP3+L3w6fBR8D3m8vh082v8APwZvCp8OH2
OPA7vfQnq5fo3zXb1Mrd7LmIr2XPCu8J3whvDJ8AHwTfBW8Cn2h9ge+GN22T
Dw6B7+lHE3i91epohQ2ID4P3J347vBF8PHwgfCe8Pny09Q2+DX6vF+25dun6
Gz5bsySHObbNeeY+c+K7cL+fenlVSX3Tsxq3xEPTy/p3iTZwjDpWnTPOHeeU
Wtr6Yu+vJzZJPx7FwBKPR+9CD2icEs9Kb8ieamx4yiq9lp5Nr8SD0cvRA2o6
faletN9XO6ghDm7Ts9i7vOgYauPRjFLiMendWGOuLqnx1h5riN6VPaG1RU/j
7wHx+PQ61AD2NvYoagM9lNFKPD29FWuava4131pnzbN3VcNYCw9l+4T9T9mG
ttFAD5bUTLXRVGxfs/+ZY6iNhrm/pGaqbeyx9aasidbGU+v0LiO632fNtTd+
sEot1sP5ZUB6VL2dR4h9VeUe7OGt8db6jx1TbTTaAyU1W+1mv+rze6m7H3t+
z/P8w9posBHd81WbLc13fFhF8/r8rTHWGnOovZAa7aGSmq92s+brRTxURQvo
Gf01IB6sXpKe1G8D4hHqVTnnnHvOsZebzDnnnnPyFXMt9za0RIOqRfeok1vN
sfaOzhnnjnPqhSZz1Ll6CvyvJjXX2msNfK1JzbP2mZM/blJzrb3WxE+aeErF
c/nfvv30rNd048nx4Zxz7pmDnm2i6dX25kS9qrHUXSU52lxtjrTXmLNK7lTT
q+0Xr+I1mRPMDc7p55rkBHODOeP5JjXb2m1OerWJplHbqDnebqJp1DZqnnea
aBBzrTnX3kBNq9dkj6XWtUcwlwzr4v7Gn3kfY1X57eboYd317SX1JP8YEE9b
r9J7MH+uU+fe1Nh6YVdV0d72cMeU9Jj2dta807v39VETzaJ2UYO916RGWavU
BHo9W9Tx2i6u0otZQ33fw+EPm/Swx3a/z95WjXp7iYZVu6oh7yjR7GpLNfad
JRpU7a1nO0tJjdXL1QOeuaQG6g1bc6w9ai69GZ+p72ajOs9az9Pe3J7X3lfP
d9aSmq4XPDr7X1aZg5d2Ho3azZqhd2PNsHZsXsVL0QOfpMRT1RvXI5+0xKPW
O/+wy4fmR71b1zSmLvGQXesYUGc8LdaNLzWj2tEaqhfkGsO0JR6Daw9D68xP
84m9gh7JLd181ZtyTDg2NqgzlibhetuUeCIjiE2uBi3xTJ5oojnUHvaktzfx
QG7t8pfeyGTEtyvxXB5r4lGo5dX0eheTwtuWeCqPNPHg1SYzdL/XHtdeVw1w
ZxMNoBaw37q7q08/d/nQejIx8a1LPKYHm3h2es96pnp5aqwfu/FuPVPzqn3V
ULfCGhWuPeg56uVNNDBrTXqG9zdZ45msZA3AtR81tlpbza6X5prQ5CVrAq4V
qeEWKtFUajs1llpYTaz20mMY2uUrx7uaW+2tJr+5iYZVy6rJb2zSU9hbqHmv
7ObL4V3+dH60XP829q8o6Q/VtGpbNfF1TTSwWnj7Kt6X9WZEl7/N1/ZkevNP
dfVIjfqPEk2ndrVnvKukR7OXdI1s/JI1LdfO1OBqcXsSvTTX3MYrWWNyLU5P
0LUt16j+6vKlazmrdflQTavXt3qXP9X4an17AHsN16imKVlTce3KNZS5unzq
2oqerGt19gh6ta6RTdXlX9fO1PBqeXskvc7vS/KznpBekms0c3f527UbPbl5
SjSrXt2cdXrBLar0+2rkFbrvUzureVfs7lctrOfrWo0evF6wnvTd3fNTj+iZ
3tM971HbaGK9T3sMtbIaTi1nT6l3bc601m1SJ5e6puFan/rGtQ49Ir0iNbtr
I3oGegOflngJ4/STC32Hvstp2+R2a7K1eeo2c8k5ZW2Ypk2tVnOoPeZpk6uc
o85VPRi9vqaON7NkG2/GZ+azswYPhdesU5sXbZMrzcHm4qXbjC3niHNlujZa
wZpj7VkGXrHKGHQsLt7m3fjOffdLtHk3vjPf3VJt5ppzzLmmplD/r1VHa0zf
RvupSdQmM7R5PmpCtaEeCv9Ub5R4KzO10bJqVLXqhP1oKTWeWm/uNt6Mc8C5
YI1Tu2xVp/bN0UZLq4HVwrO30cJqYLXwAvCsVXKGuWOCfrShmk3tNn4//pGa
Ue2oJrK/WbuOVpq4n7nrHFa7TdSP9lSTqc1mbFM7rCFq63H7GXuOQee6Gkht
sXUdbaQGUittU0cbzdcm11mTrE3ztqlN1ixr1/xtcp050dz4A/3HkCo53lz/
XS+53RpgLfi2l1pizjf3f99LbbCmWFt+6UXrmRPNjb/CZ1XRFGoLNbG15bQ6
vcBvvWgNNYHa4OtecrU1wFrwTS+1wBpmLRvYjx9oj2CvMHI/2k6NZ6/wVS/r
QeZ8c79rO2r3z81ndertVF39Nd84Z81lx9WZy2P1o0XUIGoRPVa9Vj0q1x6/
aaJ9dq6znm0NtBauUKe/W7BNbrPGW+sXbqNN1BxqDzWuftWqdbTvIm20jBpG
LTO4zb15j+a+xdTkVTSKWmWhNlrAHGoufabJ+sSKdfppPXvH839KvPyx+9FS
aii11E88n2PgISXrBz/3sv6gplRb/qNNPlBzqD3UyPpFK9XRzmpa/bNV6mjd
MfvxM9Vwajk1sP7bynW08Zxtaoc9qb3prG16TXs0e7VZ2vRq9oD2gnpOek96
Vq516lnpXekxuTapx6TX5Jqya4euSS7W1R/XKtXUavsN62hta6i1VI9Y7/Xb
Tv8N7uq3noVe5KAqXoaekPVBfadXNFeb2mgNtBbqkVl/t+vq2ZR16t0a/3/8
wKwF31RFn6nXXBt3zVB95vHqx82qrJXqyQzq6tceXX3avNNL6ks9b9eSr67i
hTvGfFe+M8eeHtzgTo+4Vuya/bnd8ep/PWjXsi+u4k27Rndpd3/2X655+7cf
roG5Fu6almtbelCuVbtmfVl3/65lf9bpO2uI+tm/ifFvY+y/v2ryNyX+bYlr
9l836dn0d9at08s5Z/xbENcYnUuOWb0gNatj2TXjxTv94POxX/R56rHrtf/a
6a/lu3qt526/MbyLuyYxvDvetQo9M70z9ahrT3pMek1Hwo82+XsP/17GNRPX
TvSozX3mwBuaeEB6Qf49jX8Posei12IOcm1BD1kv2TF/W5M1Bf9WwDUA1xpc
k3Ntzn7DvxXSk9abdk7d0sRz0nsyJ9zVxJPVm3VO39RkjdC1QtfM/Fsp+2nv
x5psbdYzd+1KD04v3Tk9pBsfrhXqieuNO2fvaDIm7A13qDNW9Nj02qyxDzVZ
43St05x2PTxzG29GT0hvSM/J3nbjOl6UmlXtumWdXk+Pbq/u/h5o4tHp1Vnz
Hm4yRux1d6wzdvS89L4cI483WcPSr9JfUs85hvS6dqozttR71l5rsHrwf503
wdA=
                 "]], 
                Polygon3DBox[CompressedData["
1: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
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$6309#1"]& ]], 
             Lighting -> {{"Ambient", 
                RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
               "Directional", 
                RGBColor[
                0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                ImageScaled[{0, 2, 2}]}, {"Directional", 
                RGBColor[
                0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                ImageScaled[{2, 2, 2}]}, {"Directional", 
                RGBColor[
                0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                ImageScaled[{2, 0, 2}]}}]}, {
            RGBColor[0.368417, 0.506779, 0.709798], 
            EdgeForm[None], 
            Specularity[
             GrayLevel[1], 3], 
            StyleBox[
             GraphicsGroup3DBox[
              TagBox[{
                Polygon3DBox[CompressedData["
1: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
2uDGzHtd3sHafM/r/zrrpUu25nt8V86r8/VXrpFfobHt+Xjf1NqpaX5N5ZHS
+fNty5+xcmbNOVG1SGp91RZ+LrUea5O5zlWdNUp1VViTaXxWWN/crByYWf+P
VmyEfaXh8LGZNfxz9FPCelH3szlc6w5VHg1rxE7wcZlriufpy2XWtGPoK2bW
/+NVq4VrmAcy14Cq+ybIkwjXP6rrZ4f16C3w8Znrixfoy9OmwmP1ubAebQ1/
E/a8hqjeD2vTzvItwrpTnsOcsC7Uu3s1rOcUD2Xz+k5aYFpYwzVX3RTWiHqn
r4W1pnLL1LBmbabaNKzttOZvhHWq8sY7Yf0nH+PdcJ0mL+L1sH7V/p0b1s3y
QOaF/SD5GAvDtZ804cywJm4Fzw/rcvkhC8K1nDyN98I1pHyJfql1pu5tTVhH
9lYtHj47n4Z/Dtd+ehdbw37fs/D2sNbRu9sR1lha8x/CWkrx8124ph0B/xSu
8cbBO8N1l+JnVVi39YS3hXWP4uf7sI82Eh6RuqbQ+x2UWqtrzQfm3oU02m/h
uuhFxn8N16iK88/DGrcH/FlY13aHfwnXooqlL8Naqg/8Y7hWVMysD+uSZzL7
GPIlFP+rw2d/L3hk6rpGcbUm35/SV1+F9U0/xteGa7m+8L8y1zJah425L6ca
ele4/lT8fx3WT/3hIanrl5bwurA2GgBvCGuagfCmsG87WNcM68VB8ODU9Y5y
6dDUNZFiY0vYnx0GLwr7BV3gKorLgtdwRrhu0fd2D9el8ivuCHu48rdvC3u4
8ueX5964av3qmWtznYMPhOtw+ZC3hz1W+fwPhjWcfLOnwjWzfL+u4RpbPslD
Yc0nr7JLuM6X59k57OfKg7oz7H3Ln78r7JXLh++euua6nnvoGPaO5a8+H9as
8le/T10vqLbuGdaa8pfuDfu/+m1ie2qNp3P/7rD/rt8OuoXrdvlC94Q9d/0W
cF/Yu9dvE/eHvWP97vBCWJvKO+0R9gLkLz0Z9jjkMT4a9hTkK3ZNXRs2UDyn
1sM6m35LrZOltX5JrbF17uxJXSNoH/2eWusqzqXzFY/Slj1T16cNGf8DfrTg
fbErtc+gc01esbxlnXc/pdbqque6pa5br2P84bCmr5d7cfKBpZEeD/sm8nKf
CHsi8kt3pNbh0jxTUntQyv+PhOtY+aI/p64FpA16hWsJ+XVH6HwqOA88FvaA
5NnuTF376Jx9LlyfyIt+Oqyz5aeNDGt9+dt/p/6NQzlt38y1lfaIfOxPC9Z7
l2TW6qpBh4XrUnnXfcM1lbzB/TLXd9prw8N1qTzzFfnvRNJX/cL1g3zC/uHf
/OQNjg7XV/J1D83sO+nc7BOuYeRzTk3t7+k8ujSzLyddKv0vP36o1jizT6g8
UDrzbw3KUUHrW3BOSDP/LqMcUsz8u49y0TPh2lve6YBwPSMPU78pyLtWjkoy
e2iq1QqZf8dRbnw2XCPJ2++R2nu5gfHDMvtmOhf2z1xr62z9K/VvScqTJZm9
bp0vE8L+lD47MexbKSZ7h+tY+aUHZK7HpRnGhz0s7eUlXPPagvOV/HZ58spj
Y8J1rHzdQzLX6fL5fkjtjUj7HZ7ZA9R5NDbsc2l/jQrXtPqNY1zYC1OcL07t
KUl7jAjXivpt5T85S9d/
                 "]], 
                Polygon3DBox[CompressedData["
1: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
2U4=
                 "]], 
                Polygon3DBox[CompressedData["
1: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
                 "]]}, 
               Annotation[#, "Charting`Private`Tag$6309#2"]& ]], 
             Lighting -> {{"Ambient", 
                RGBColor[
                0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
               "Directional", 
                RGBColor[
                0.15473514000000002`, 0.21284718000000002`, 
                 0.29811516000000005`], 
                ImageScaled[{0, 2, 2}]}, {"Directional", 
                RGBColor[
                0.15473514000000002`, 0.21284718000000002`, 
                 0.29811516000000005`], 
                ImageScaled[{2, 2, 2}]}, {"Directional", 
                RGBColor[
                0.15473514000000002`, 0.21284718000000002`, 
                 0.29811516000000005`], 
                ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
            GrayLevel[0], 
            Line3DBox[CompressedData["
1:eJwt0jlPFFEAwPG3sBfLChbUEujhE0BppRV00JDtoIDYYQOEhEBD6KAhdhoI
CTbyCbhW5fREbmLMBoWGG2MMv0co/vm9mWRm3jF1hZ6W7kQIYUhXiuMz/dTT
VAiP2cpaFtjIF2zmAJ9zjO18xS7O8q1eGn/kCLc5wWO+4Q3nmEmHsMBBluJ9
fdaFTrRQFsIXLvIrl/iNy/zOIrf4nj/4gdvxu1zRjvEqd7nGPa5znxs84CYP
OVVufrzVkS51qnpz+8QazjPFd3G/rOE1SxznFofjXFhUr/EMOznJNo7yGfvY
xB42sINP2O/dv3itap3rj6rMsYp5PmKOeWZZyTRzTLIiniODsvjvUDP8R68P
f5mKe81kXAfL454n7h8J0y5+P/wPd526TsM=
             "]]}, {
            GrayLevel[0], 
            Line3DBox[CompressedData["
1:eJwl0bkuBEAcwOFZi7XxAESnIR7ARu14ATwBtcW6Owo1iR7RCoKIiDtK931E
NuJq3Er3t1H88s0Uk8z8p7ihuTYZCSH06cXigw+8VH9uCHEOsZBjLOU0E1xj
DXdZzzQb+cQUv9jH/FgIgyziCMs4yQouc4ZXfNNW5rzu1JQdwjaT3GEzd9nC
PbZynykesI2HbOcRO3jMTp6wi6fs5hl7eM7KnBCu+a4LPetede61yRouMcEJ
lnKYhRxgnL2Z2XlvKx/YkJkh67jNaq6wnFMs4SgLMnvn03xVnh51q41oCDGu
M5erzOEys7nIKBeYxXlGOMfAWf5aTvOHU/zmBL84zk9Wef9N5P///wADhk8y

             "]]}, {
            GrayLevel[0.2], 
            
            Line3DBox[{1349, 1662, 722, 1348, 2167, 1571, 1350, 2168, 1572, 
             1351, 2169, 1573, 1352, 2170, 1574, 1353, 2171, 1575, 1354, 2172,
              1576, 1355, 2173, 1972, 2272, 1356, 2174, 1577, 1357, 2175, 
             1578, 1358, 2176, 1579, 1359, 2177, 1580, 1360, 2178, 1581, 1361,
              2075, 2179, 1582, 1663}], 
            
            Line3DBox[{1363, 1973, 2273, 1362, 737, 1364, 2180, 1583, 1365, 
             2181, 1584, 1366, 2182, 1585, 1367, 2183, 1586, 1368, 2184, 1587,
              1369, 2185, 1974, 2274, 1370, 1975, 2275, 1371, 2186, 1588, 
             1372, 2187, 1589, 1373, 2188, 1590, 1374, 2189, 1591, 1375, 2190,
              1592, 1376}], 
            
            Line3DBox[{1378, 1976, 2276, 1377, 1977, 2277, 1379, 753, 1380, 
             2191, 1593, 1381, 2192, 1594, 1382, 2193, 1595, 1383, 2194, 1596,
              1384, 2195, 1978, 2278, 1385, 1979, 2279, 1386, 1980, 2280, 
             1387, 2196, 1597, 1388, 2197, 1598, 1389, 2198, 1599, 1390, 2199,
              1600, 1391}], 
            
            Line3DBox[{1393, 1981, 2281, 1392, 1982, 2282, 1394, 1983, 2283, 
             1395, 769, 1396, 2200, 1601, 1397, 2201, 1602, 1398, 2202, 1603, 
             1399, 2203, 1984, 2284, 1400, 1985, 2285, 1401, 1986, 2286, 1402,
              1987, 2287, 1403, 2204, 1604, 1404, 2205, 1605, 1405, 2206, 
             1606, 1406}], 
            
            Line3DBox[{1408, 1988, 2288, 1407, 1989, 2289, 1409, 1990, 2290, 
             1410, 1991, 2291, 1411, 785, 1412, 2207, 1607, 1413, 2208, 1608, 
             1414, 2209, 1992, 2292, 1415, 1993, 2293, 1416, 1994, 2294, 1417,
              1995, 2295, 1418, 1996, 2296, 1419, 2210, 1609, 1420, 2211, 
             1610, 1421}], 
            
            Line3DBox[{1423, 1997, 2297, 1422, 1998, 2298, 1424, 1999, 2299, 
             1425, 2000, 2300, 1426, 2001, 2301, 1427, 801, 1428, 2212, 1611, 
             1429, 2213, 2002, 2302, 1430, 2003, 2303, 1431, 2004, 2304, 1432,
              2005, 2305, 1433, 2006, 2306, 1434, 2007, 2307, 1435, 2214, 
             1612, 1436}], 
            
            Line3DBox[{1438, 2008, 2308, 1437, 2009, 2309, 1439, 2010, 2310, 
             1440, 2011, 2311, 1441, 2012, 2312, 1442, 2013, 2313, 1443, 817, 
             1444, 2215, 2014, 2314, 1445, 2015, 2315, 1446, 2016, 2316, 1447,
              2017, 2317, 1448, 2018, 2318, 1449, 2019, 2319, 1450, 2020, 
             2320, 1451}], 
            
            Line3DBox[{1455, 2216, 1613, 1453, 2217, 1614, 1457, 2218, 1615, 
             1459, 2219, 1616, 1461, 2220, 1617, 1463, 2221, 1618, 1465, 2222,
              1619, 1467, 2223, 834, 1469, 2224, 1620, 1471, 2225, 1621, 1473,
              2226, 1622, 1475, 2227, 1623, 1477, 2228, 1624, 1479, 2229, 
             1625, 1481}], 
            
            Line3DBox[{1480, 2334, 2033, 1478, 2333, 2032, 1476, 2332, 2031, 
             1474, 2331, 2030, 1472, 2330, 2029, 1470, 2329, 2028, 1468, 2328,
              833, 1466, 2327, 2027, 1464, 2326, 2026, 1462, 2325, 2025, 1460,
              2324, 2024, 1458, 2323, 2023, 1456, 2322, 2022, 1452, 2321, 
             2021, 1454}], 
            
            Line3DBox[{1483, 2034, 2335, 1482, 2230, 1626, 1484, 2231, 1627, 
             1485, 2232, 1628, 1486, 2233, 1629, 1487, 2234, 1630, 1488, 2235,
              1631, 1489, 2236, 2035, 2336, 1490, 850, 1491, 2237, 1632, 1492,
              2238, 1633, 1493, 2239, 1634, 1494, 2240, 1635, 1495, 2241, 
             1636, 1496}], 
            
            Line3DBox[{1498, 2036, 2337, 1497, 2037, 2338, 1499, 2242, 1637, 
             1500, 2243, 1638, 1501, 2244, 1639, 1502, 2245, 1640, 1503, 2246,
              1641, 1504, 2247, 2038, 2339, 1505, 2039, 2340, 1506, 866, 1507,
              2248, 1642, 1508, 2249, 1643, 1509, 2250, 1644, 1510, 2251, 
             1645, 1511}], 
            
            Line3DBox[{1513, 2040, 2341, 1512, 2041, 2342, 1514, 2042, 2343, 
             1515, 2252, 1646, 1516, 2253, 1647, 1517, 2254, 1648, 1518, 2255,
              1649, 1519, 2256, 2043, 2344, 1520, 2044, 2345, 1521, 2045, 
             2346, 1522, 882, 1523, 2257, 1650, 1524, 2258, 1651, 1525, 2259, 
             1652, 1526}], 
            
            Line3DBox[{1528, 2046, 2347, 1527, 2047, 2348, 1529, 2048, 2349, 
             1530, 2049, 2350, 1531, 2260, 1653, 1532, 2261, 1654, 1533, 2262,
              1655, 1534, 2263, 2050, 2351, 1535, 2051, 2352, 1536, 2052, 
             2353, 1537, 2053, 2354, 1538, 898, 1539, 2264, 1656, 1540, 2265, 
             1657, 1541}], 
            
            Line3DBox[{1543, 2054, 2355, 1542, 2055, 2356, 1544, 2056, 2357, 
             1545, 2057, 2358, 1546, 2058, 2359, 1547, 2266, 1658, 1548, 2267,
              1659, 1549, 2268, 2059, 2360, 1550, 2060, 2361, 1551, 2061, 
             2362, 1552, 2062, 2363, 1553, 2063, 2364, 1554, 914, 1555, 2269, 
             1660, 1556}], 
            
            Line3DBox[{1570, 1667, 934, 1569, 2375, 2074, 1568, 2374, 2073, 
             1567, 2373, 2072, 1566, 2372, 2071, 1565, 2371, 2070, 1564, 2370,
              2069, 2271, 1563, 1661, 2270, 1562, 2369, 2068, 1561, 2368, 
             2067, 1560, 2367, 2066, 1559, 2366, 2065, 1558, 2365, 2064, 1557,
              2376, 1665, 1664, 1666}], 
            
            Line3DBox[{1669, 1966, 1146, 1668, 2468, 1876, 1670, 2469, 1877, 
             1671, 2470, 1878, 1672, 2471, 1879, 1673, 2472, 1880, 1674, 2473,
              1881, 1675, 2076, 2377, 1676, 2474, 1882, 1677, 2475, 1883, 
             1678, 2476, 1884, 1679, 2477, 1885, 1680, 2478, 1886, 1681, 2166,
              2557, 1887, 1967}], 
            
            Line3DBox[{1683, 2077, 2378, 1682, 1160, 1684, 2479, 1888, 1685, 
             2480, 1889, 1686, 2481, 1890, 1687, 2482, 1891, 1688, 2483, 1892,
              1689, 2078, 2379, 1690, 2079, 2380, 1691, 2484, 1893, 1692, 
             2485, 1894, 1693, 2486, 1895, 1694, 2487, 1896, 1695, 2488, 1897,
              1696}], 
            
            Line3DBox[{1698, 2080, 2381, 1697, 2081, 2382, 1699, 1175, 1700, 
             2489, 1898, 1701, 2490, 1899, 1702, 2491, 1900, 1703, 2492, 1901,
              1704, 2082, 2383, 1705, 2083, 2384, 1706, 2084, 2385, 1707, 
             2493, 1902, 1708, 2494, 1903, 1709, 2495, 1904, 1710, 2496, 1905,
              1711}], 
            
            Line3DBox[{1713, 2085, 2386, 1712, 2086, 2387, 1714, 2087, 2388, 
             1715, 1190, 1716, 2497, 1906, 1717, 2498, 1907, 1718, 2499, 1908,
              1719, 2088, 2389, 1720, 2089, 2390, 1721, 2090, 2391, 1722, 
             2091, 2392, 1723, 2500, 1909, 1724, 2501, 1910, 1725, 2502, 1911,
              1726}], 
            
            Line3DBox[{1728, 2092, 2393, 1727, 2093, 2394, 1729, 2094, 2395, 
             1730, 2095, 2396, 1731, 1205, 1732, 2503, 1912, 1733, 2504, 1913,
              1734, 2096, 2397, 1735, 2097, 2398, 1736, 2098, 2399, 1737, 
             2099, 2400, 1738, 2100, 2401, 1739, 2505, 1914, 1740, 2506, 1915,
              1741}], 
            
            Line3DBox[{1743, 2101, 2402, 1742, 2102, 2403, 1744, 2103, 2404, 
             1745, 2104, 2405, 1746, 2105, 2406, 1747, 1220, 1748, 2507, 1916,
              1749, 2106, 2407, 1750, 2107, 2408, 1751, 2108, 2409, 1752, 
             2109, 2410, 1753, 2110, 2411, 1754, 2111, 2412, 1755, 2508, 1917,
              1756}], 
            
            Line3DBox[{355, 1035, 356, 1036, 357, 1037, 358, 1038, 359, 1039, 
             360, 1040, 361, 1041, 362, 1042, 363, 1043, 364, 1044, 365, 1045,
              366, 1046, 367, 1047, 368, 1048, 369}], 
            
            Line3DBox[{1758, 2112, 2413, 1757, 2113, 2414, 1759, 2114, 2415, 
             1760, 2115, 2416, 1761, 2116, 2417, 1762, 2117, 2418, 1763, 1235,
              1764, 2118, 2419, 1765, 2119, 2420, 1766, 2120, 2421, 1767, 
             2121, 2422, 1768, 2122, 2423, 1769, 2123, 2424, 1770, 2124, 2425,
              1771}], 
            
            Line3DBox[{1773, 1243, 1772, 2509, 1918, 1774, 2510, 1919, 1775, 
             2511, 1920, 1776, 2512, 1921, 1777, 2513, 1922, 1778, 2514, 1923,
              1779, 1250, 1780, 2515, 1924, 1781, 2516, 1925, 1782, 2517, 
             1926, 1783, 2518, 1927, 1784, 2519, 1928, 1785, 2520, 1929, 
             1786}], 
            
            Line3DBox[{1788, 2125, 2426, 1787, 2521, 1930, 1789, 2522, 1931, 
             1790, 2523, 1932, 1791, 2524, 1933, 1792, 2525, 1934, 1793, 2526,
              1935, 1794, 2126, 2427, 1795, 1265, 1796, 2527, 1936, 1797, 
             2528, 1937, 1798, 2529, 1938, 1799, 2530, 1939, 1800, 2531, 1940,
              1801}], 
            
            Line3DBox[{1803, 2127, 2428, 1802, 2128, 2429, 1804, 2532, 1941, 
             1805, 2533, 1942, 1806, 2534, 1943, 1807, 2535, 1944, 1808, 2536,
              1945, 1809, 2129, 2430, 1810, 2130, 2431, 1811, 1280, 1812, 
             2537, 1946, 1813, 2538, 1947, 1814, 2539, 1948, 1815, 2540, 1949,
              1816}], 
            
            Line3DBox[{1818, 2131, 2432, 1817, 2132, 2433, 1819, 2133, 2434, 
             1820, 2541, 1950, 1821, 2542, 1951, 1822, 2543, 1952, 1823, 2544,
              1953, 1824, 2134, 2435, 1825, 2135, 2436, 1826, 2136, 2437, 
             1827, 1295, 1828, 2545, 1954, 1829, 2546, 1955, 1830, 2547, 1956,
              1831}], 
            
            Line3DBox[{1833, 2137, 2438, 1832, 2138, 2439, 1834, 2139, 2440, 
             1835, 2140, 2441, 1836, 2548, 1957, 1837, 2549, 1958, 1838, 2550,
              1959, 1839, 2141, 2442, 1840, 2142, 2443, 1841, 2143, 2444, 
             1842, 2144, 2445, 1843, 1310, 1844, 2551, 1960, 1845, 2552, 1961,
              1846}], 
            
            Line3DBox[{1848, 2145, 2446, 1847, 2146, 2447, 1849, 2147, 2448, 
             1850, 2148, 2449, 1851, 2149, 2450, 1852, 2553, 1962, 1853, 2554,
              1963, 1854, 2150, 2451, 1855, 2151, 2452, 1856, 2152, 2453, 
             1857, 2153, 2454, 1858, 2154, 2455, 1859, 1325, 1860, 2555, 1964,
              1861}], 
            
            Line3DBox[{1875, 1971, 1344, 1874, 2467, 2165, 1873, 2466, 2164, 
             1872, 2465, 2163, 1871, 2464, 2162, 1870, 2463, 2161, 1869, 2462,
              2160, 1868, 1965, 2556, 1867, 2461, 2159, 1866, 2460, 2158, 
             1865, 2459, 2157, 1864, 2458, 2156, 1863, 2457, 2155, 1862, 2456,
              1969, 1968, 1970}]}, {
            GrayLevel[0.2], 
            
            Line3DBox[{500, 723, 2167, 501, 737, 529, 2277, 752, 544, 2282, 
             767, 559, 2289, 782, 574, 2298, 797, 589, 2309, 812, 604, 2322, 
             827, 2217, 619, 842, 2230, 634, 2338, 857, 649, 2342, 872, 664, 
             2348, 887, 679, 2356, 902, 694, 2365, 917, 709}], 
            
            Line3DBox[{502, 724, 2168, 503, 738, 2180, 530, 753, 545, 2283, 
             768, 560, 2290, 783, 575, 2299, 798, 590, 2310, 813, 605, 2323, 
             828, 2218, 620, 843, 2231, 635, 858, 2242, 650, 2343, 873, 665, 
             2349, 888, 680, 2357, 903, 695, 2366, 918, 710}], 
            
            Line3DBox[{504, 725, 2169, 505, 739, 2181, 531, 754, 2191, 546, 
             769, 561, 2291, 784, 576, 2300, 799, 591, 2311, 814, 606, 2324, 
             829, 2219, 621, 844, 2232, 636, 859, 2243, 651, 874, 2252, 666, 
             2350, 889, 681, 2358, 904, 696, 2367, 919, 711}], 
            
            Line3DBox[{506, 726, 2170, 507, 740, 2182, 532, 755, 2192, 547, 
             770, 2200, 562, 785, 577, 2301, 800, 592, 2312, 815, 607, 2325, 
             830, 2220, 622, 845, 2233, 637, 860, 2244, 652, 875, 2253, 667, 
             890, 2260, 682, 2359, 905, 697, 2368, 920, 712}], 
            
            Line3DBox[{508, 727, 2171, 509, 741, 2183, 533, 756, 2193, 548, 
             771, 2201, 563, 786, 2207, 578, 801, 593, 2313, 816, 608, 2326, 
             831, 2221, 623, 846, 2234, 638, 861, 2245, 653, 876, 2254, 668, 
             891, 2261, 683, 906, 2266, 698, 2369, 921, 713}], 
            
            Line3DBox[{510, 728, 2172, 511, 742, 2184, 534, 757, 2194, 549, 
             772, 2202, 564, 787, 2208, 579, 802, 2212, 594, 817, 609, 2327, 
             832, 2222, 624, 847, 2235, 639, 862, 2246, 654, 877, 2255, 669, 
             892, 2262, 684, 907, 2267, 699, 922, 2270, 714}], 
            
            Line3DBox[{512, 729, 2173, 514, 743, 2185, 535, 758, 2195, 550, 
             773, 2203, 565, 788, 2209, 580, 803, 2213, 595, 818, 2215, 610, 
             833, 2223, 625, 848, 2236, 640, 863, 2247, 655, 878, 2256, 670, 
             893, 2263, 685, 908, 2268, 700, 923, 2271, 715}], 
            
            Line3DBox[{516, 731, 2174, 517, 2275, 745, 537, 2279, 760, 552, 
             2285, 775, 567, 2293, 790, 582, 2303, 805, 597, 2315, 820, 612, 
             2329, 835, 2224, 627, 850, 642, 2340, 865, 657, 2345, 880, 672, 
             2352, 895, 687, 2361, 910, 702, 2371, 925, 717}], 
            
            Line3DBox[{518, 732, 2175, 519, 746, 2186, 538, 2280, 761, 553, 
             2286, 776, 568, 2294, 791, 583, 2304, 806, 598, 2316, 821, 613, 
             2330, 836, 2225, 628, 851, 2237, 643, 866, 658, 2346, 881, 673, 
             2353, 896, 688, 2362, 911, 703, 2372, 926, 718}], 
            
            Line3DBox[{520, 733, 2176, 521, 747, 2187, 539, 762, 2196, 554, 
             2287, 777, 569, 2295, 792, 584, 2305, 807, 599, 2317, 822, 614, 
             2331, 837, 2226, 629, 852, 2238, 644, 867, 2248, 659, 882, 674, 
             2354, 897, 689, 2363, 912, 704, 2373, 927, 719}], 
            
            Line3DBox[{522, 734, 2177, 523, 748, 2188, 540, 763, 2197, 555, 
             778, 2204, 570, 2296, 793, 585, 2306, 808, 600, 2318, 823, 615, 
             2332, 838, 2227, 630, 853, 2239, 645, 868, 2249, 660, 883, 2257, 
             675, 898, 690, 2364, 913, 705, 2374, 928, 720}], 
            
            Line3DBox[{524, 735, 2178, 525, 749, 2189, 541, 764, 2198, 556, 
             779, 2205, 571, 794, 2210, 586, 2307, 809, 601, 2319, 824, 616, 
             2333, 839, 2228, 631, 854, 2240, 646, 869, 2250, 661, 884, 2258, 
             676, 899, 2264, 691, 914, 706, 2375, 929, 721}], 
            
            Line3DBox[{526, 931, 932, 2179, 527, 750, 2190, 542, 765, 2199, 
             557, 780, 2206, 572, 795, 2211, 587, 810, 2214, 602, 2320, 825, 
             617, 2334, 840, 2229, 632, 855, 2241, 647, 870, 2251, 662, 885, 
             2259, 677, 900, 2265, 692, 915, 2269, 707, 934, 935, 936}], 
            
            Line3DBox[{708, 916, 2376, 933, 693, 901, 2355, 678, 886, 2347, 
             663, 871, 2341, 648, 856, 2337, 633, 841, 2335, 618, 2216, 826, 
             2321, 603, 811, 2308, 588, 796, 2297, 573, 781, 2288, 558, 766, 
             2281, 543, 751, 2276, 528, 736, 2273, 499, 722, 930, 937}], 
            
            Line3DBox[{716, 924, 2370, 701, 909, 2360, 686, 894, 2351, 671, 
             879, 2344, 656, 864, 2339, 641, 849, 2336, 626, 834, 2328, 611, 
             819, 2314, 596, 804, 2302, 581, 789, 2292, 566, 774, 2284, 551, 
             759, 2278, 536, 744, 2274, 515, 730, 2272, 513}], 
            
            Line3DBox[{939, 1147, 2468, 940, 1160, 966, 2382, 1174, 980, 2387,
              1188, 994, 2394, 1202, 1008, 2403, 1216, 1022, 2414, 1230, 1036,
              1244, 2509, 1050, 1258, 2521, 1064, 2429, 1272, 1078, 2433, 
             1286, 1092, 2439, 1300, 1106, 2447, 1314, 1120, 2457, 1328, 
             1134}], 
            
            Line3DBox[{941, 1148, 2469, 942, 1161, 2479, 967, 1175, 981, 2388,
              1189, 995, 2395, 1203, 1009, 2404, 1217, 1023, 2415, 1231, 1037,
              1245, 2510, 1051, 1259, 2522, 1065, 1273, 2532, 1079, 2434, 
             1287, 1093, 2440, 1301, 1107, 2448, 1315, 1121, 2458, 1329, 
             1135}], 
            
            Line3DBox[{943, 1149, 2470, 944, 1162, 2480, 968, 1176, 2489, 982,
              1190, 996, 2396, 1204, 1010, 2405, 1218, 1024, 2416, 1232, 1038,
              1246, 2511, 1052, 1260, 2523, 1066, 1274, 2533, 1080, 1288, 
             2541, 1094, 2441, 1302, 1108, 2449, 1316, 1122, 2459, 1330, 
             1136}], 
            
            Line3DBox[{945, 1150, 2471, 946, 1163, 2481, 969, 1177, 2490, 983,
              1191, 2497, 997, 1205, 1011, 2406, 1219, 1025, 2417, 1233, 1039,
              1247, 2512, 1053, 1261, 2524, 1067, 1275, 2534, 1081, 1289, 
             2542, 1095, 1303, 2548, 1109, 2450, 1317, 1123, 2460, 1331, 
             1137}], 
            
            Line3DBox[{947, 1151, 2472, 948, 1164, 2482, 970, 1178, 2491, 984,
              1192, 2498, 998, 1206, 2503, 1012, 1220, 1026, 2418, 1234, 1040,
              1248, 2513, 1054, 1262, 2525, 1068, 1276, 2535, 1082, 1290, 
             2543, 1096, 1304, 2549, 1110, 1318, 2553, 1124, 2461, 1332, 
             1138}], 
            
            Line3DBox[{949, 1152, 2473, 950, 1165, 2483, 971, 1179, 2492, 985,
              1193, 2499, 999, 1207, 2504, 1013, 1221, 2507, 1027, 1235, 1041,
              1249, 2514, 1055, 1263, 2526, 1069, 1277, 2536, 1083, 1291, 
             2544, 1097, 1305, 2550, 1111, 1319, 2554, 1125, 1333, 2556, 
             1139}], 
            
            Line3DBox[{257, 1675, 272, 1689, 287, 1704, 302, 1719, 317, 1734, 
             332, 1749, 347, 1764, 362, 1779, 377, 1794, 392, 1809, 407, 1824,
              422, 1839, 437, 1854, 452, 1868, 467}], 
            
            Line3DBox[{951, 2377, 1153, 952, 2379, 1166, 972, 2383, 1180, 986,
              2389, 1194, 1000, 2397, 1208, 1014, 2407, 1222, 1028, 2419, 
             1236, 1042, 1250, 1056, 2427, 1264, 1070, 2430, 1278, 1084, 2435,
              1292, 1098, 2442, 1306, 1112, 2451, 1320, 1126, 2462, 1334, 
             1140}], 
            
            Line3DBox[{953, 1154, 2474, 954, 2380, 1167, 973, 2384, 1181, 987,
              2390, 1195, 1001, 2398, 1209, 1015, 2408, 1223, 1029, 2420, 
             1237, 1043, 1251, 2515, 1057, 1265, 1071, 2431, 1279, 1085, 2436,
              1293, 1099, 2443, 1307, 1113, 2452, 1321, 1127, 2463, 1335, 
             1141}], 
            
            Line3DBox[{955, 1155, 2475, 956, 1168, 2484, 974, 2385, 1182, 988,
              2391, 1196, 1002, 2399, 1210, 1016, 2409, 1224, 1030, 2421, 
             1238, 1044, 1252, 2516, 1058, 1266, 2527, 1072, 1280, 1086, 2437,
              1294, 1100, 2444, 1308, 1114, 2453, 1322, 1128, 2464, 1336, 
             1142}], 
            Line3DBox[{957, 1156, 2476, 958, 1169, 2485, 975, 1183, 2493, 989,
              2392, 1197, 1003, 2400, 1211, 1017, 2410, 1225, 1031, 2422, 
             1239, 1045, 1253, 2517, 1059, 1267, 2528, 1073, 1281, 2537, 1087,
              1295, 1101, 2445, 1309, 1115, 2454, 1323, 1129, 2465, 1337, 
             1143}], 
            
            Line3DBox[{959, 1157, 2477, 960, 1170, 2486, 976, 1184, 2494, 990,
              1198, 2500, 1004, 2401, 1212, 1018, 2411, 1226, 1032, 2423, 
             1240, 1046, 1254, 2518, 1060, 1268, 2529, 1074, 1282, 2538, 1088,
              1296, 2545, 1102, 1310, 1116, 2455, 1324, 1130, 2466, 1338, 
             1144}], 
            
            Line3DBox[{961, 1158, 2478, 962, 1171, 2487, 977, 1185, 2495, 991,
              1199, 2501, 1005, 1213, 2505, 1019, 2412, 1227, 1033, 2424, 
             1241, 1047, 1255, 2519, 1061, 1269, 2530, 1075, 1283, 2539, 1089,
              1297, 2546, 1103, 1311, 2551, 1117, 1325, 1131, 2467, 1339, 
             1145}], 
            
            Line3DBox[{963, 1341, 1342, 2557, 964, 1172, 2488, 978, 1186, 
             2496, 992, 1200, 2502, 1006, 1214, 2506, 1020, 1228, 2508, 1034, 
             2425, 1242, 1048, 1256, 2520, 1062, 1270, 2531, 1076, 1284, 2540,
              1090, 1298, 2547, 1104, 1312, 2552, 1118, 1326, 2555, 1132, 
             1344, 1345, 1346}], 
            
            Line3DBox[{1133, 1327, 2456, 1343, 1119, 1313, 2446, 1105, 1299, 
             2438, 1091, 1285, 2432, 1077, 1271, 2428, 1063, 1257, 2426, 1049,
              1243, 1035, 1229, 2413, 1021, 1215, 2402, 1007, 1201, 2393, 993,
              1187, 2386, 979, 1173, 2381, 965, 1159, 2378, 938, 1146, 1340, 
             1347}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1:eJztXXk8VdvbP2jWoMnFlQZ1o1uaNGiwaJKGS0qpqJBSbomiAUUpcotG3Uyh
QkhlqEQtQgoZM50MB+c4xkMZUsTvDPvYp/O+Ox1tGe45/zz21/o8+9nfvfaz
13qe9aw9Uc9Yw0CQQCB8HUwgCNGlglvz5ku0RMCSlZAl3wMsnMD6WedWw7gp
t6ogS+bx3B4LB9OHHno+gYjICsg+5lUPFu4z9MFQn4wiYB+huCc/lgpZMhs3
/Vj4uLmXVvoeL2ZLyD5mt09afGqPh2cpRCQmjvH/9uNvZS2mHrzswcI1hTzm
O66mAskH6asNhQshInHT3xGOxcOvxjt7v34UR/oZV7/L+2XXy7qvNcj9TcHE
v/UrbP+QyLOevqq/I7yr72NPwbu7P/cUO3u7/o5w4gdP++dRNZAlYZ/Ft5yn
mrmmJSOSBlnyxS+zB6/71dPx7u7PfJyP9yW8p/jPvo7jdb/4OB/n478OR+Zp
7f//r87X+jr+o/HJzsYtfzQOkH777oIZq0vZErLkK9zs70gPlp1dFZfTZP4y
EUmBiOyQzx/V35Gen7W/PD1Yu3g6EYx7YigTVhsKj4TtUTswthqEZETpMfBi
L+OpDNz75dC/OoMLibcxcc/+F4YwcPm6DZ3CsexUEPvAxN9LnBVm4P1LAzqF
83pevHA+z3ye+Tzzeebz3DN5xot/Ps98nn8lz1j8dDXPeN0XPs+/xp/j1c97
Gs897b3Jq529hefe0p+7q7/x+3Pn7MfrPS6VfmczA9+apCvLwFf5Ral3Zz/v
qzzzygOfZ35/7sk84+Wf8Xpe8OIZq736jqX6DFx7n191KB1/KX0DV/14XReW
Hiz78bITSz9W+9mmOsevvA8GSnOAZ9GlUohI4CKcLyk1IhBYtwqVTLpWBVmy
PZ5PeIvE8xEJ4pU07zg6RgPNsiIJytYqyJJ5oFrbOOaaLAkcv77kL0mDDOjv
e7FiUl45EJURyReWiAR/v3shXWBaBVkyD1iWXFcmW+W0n4cQLnbC6FJ1+zER
yS8Qv80vEE40FUCDlekw8wohblQADdh6Cgm8vPQMAANirfPRKsiSeSCjP0xf
MyUGjLr+u/iRnaUQkcBitZHT4rHZYPMfzVVfHlVAliSCP42W/CtmTQJ3tqw/
JqNfAhHZoT1YODdvHeE/qufznuO2TxWygejxtwl3AyogSxLBhqCnib/ZFoKc
wZqfbzwqgYgES0SA/AbvdNBPMGB/iG4lZMn34MnITzmV23OB38xDHpavyBCR
nb6uH22/VuipaCr9fjkVJ7xi3C+W7Fj/t7/aLscT14bbOjfHt/9fXeTs8KqD
NaByiLKGzFGUp0XyRoqeN8twO++XOjGP7a9R/Wpaw2xnaJaBOzq6da/TSe24
4a3H4fYLK3HngTtfGTzwmHngtkwgaL/dvWl5NWTJtyBf7ErLNbM4sEvm8LYq
FxpkyWRMPVi4s68hkXIsEhwNfPhQnEiDLJkM3kS1jDr9OAdsdCyxF7xdBVky
iWf9WPiwZHLhl6I0MOPUpqb3ydWQJd+CpsHT4zL8kkCC9NQQb2UaZEner6sj
HK/71dPx7u7P3PjwiyEH50qiz+vBgbP2bBtCASlrVnw1rkXfR2KFOyaYHKvm
WX/RMhPnpFGp7f9/nWdSYPyZBpxr5WiExxXt+JkQu/Gyt4r6DM8Y6/T6HD5j
jkqAtkEMkBsS9aJQrwayJASzjwl6rBwKwe0dFlsjbWsgS+JvD6/3pbfi3d2f
+Tgf70t4T/GffR3H4p+P83E+3nPx85OrSWKy6LwgdOJMKYdmMrBweOp7+BEa
BxoyY4NH88LyHmc/H/8Wn3+k5cxF7TJ43r6S8BiSgaX5zQ3TNgWCoONnIxes
LYMFazRMg6PIIMfLPnSQTBFwG7Xwd78hRHjKZ3NEsD8VeJsJjH1+IgqRJDjV
XFnWXgodZ3rsTtqxJ7gCEga81PC4UwTeavZ3m64WA95F7pmhtLwSSg+W9z8r
TAJxo+P/3SKfDa4pDvFaMboC6u5bf2/2RzTelY3EzYq54mZeYmtmqp2mQorW
7i1xYe3rtwn9k6xvX6Bf16DhVoOeMK4rVZ+wPqMQXFClXt2sVQpnfQw6MuwE
CRjPCpibRUwHl1o+DVh6vgwaVb1oWKPUvk8FgTanpNWAbv9FiZIShv1sfKj9
1PT1+pUw/sy2lqQLJPCXY374y90hbAnN97k9yk1tr98g+N7aJeLeHA9Ftrm/
qDyI4qFtGsL7VqZDwpldKow4bUfxXu77eLQ6xnWjxBswuvbL1qiMYnioslJJ
U6IcnIDNOyY1kdgS2rlNGTLwT5SfOCR+mMkVP9xbqCzsov8ESkRbF0Xmo3Zu
YsX54GYkvrcZhs93CKGALZde2Bxyfgezpy7R/jqZAiZuHKQq0/89MFrwcNYh
oXToaWIw6beraH+ImGsRde9wAZTPtHBeNqW9npZw12LW2EctRTBuzIijO4+i
83+74Yckph4lw2UeGcpeHPFDbYLOlBXPq+G5hgGRqZ7Z4NLFeZ/yKnIQWQYD
DvxloG/Vvh8IYbyffoqobBncPaHq1IVmdL50j+W3IHn6t/5qwGbTVInWPGgX
YjVhgV0V+DBna9gVtyhEpkJPi/kPLG7RQJrZ48uWRRQwz69Q/tzUaKh5qF9D
fR3KZ/m+6wF35Qoi2feLjV/8J1t4Jd1+r5kBc5M82/eHIXw2yjAysq2E02rX
rjitSQKigU1XE2iZiKRAwbag5oVOZOA0ROXtcIUSoBAYEXY3lwwDSZP9iu7m
t+vZPH/XoQl0+58Q7wbPs0N5bpOPObJWKx0+atTyUfKjteM7VyxpPdYaBYeZ
ySefeILed/3lLHwsF34M0fMK0XPP4uvylxsSEEmE/hmDtsfsR887+82ZJeZ0
nvVs9Fw+c/C8m/U+gYXIe4SNFyA8bEF4cL1gWFWQTURkBdQLrkpTmZfV3l4c
iR9u4Yof5qjO32hMt9/xjOhECw77F3nnCq6i2z9mbqG5Mt1+a5WxchtMqeDd
4PymU7YFsOH8uukmowsBFKK69qekIbIIVmat0rf8jPbDBl9Wv7rK1a8m+Vg1
7aPb73uwIMxWE52Hr0T6bQvSbwn/7w87/obVnlccK/6Gl34svLvjFQr+xNPZ
pTRolhg82ukWev1zReyNn42ohifWLXHYkUAE4f8AQefoPLAoMVUx7noFDGjK
UF8yILO9vUCYnpzFDAosOuumtuMrtR3f/sTDa0L/QvhuribJ+Ctq/7oLQYmp
OzOg14ejVz1O0UCQbOSEjHFVIMVSyE4gIxqe0J2uILQYfX5HVu8y/VDwf/2G
xu3+cjl0+7VFaRIOHPYHJbtHRNDtP6m3tlyLbn/VphGKKhPeILIclulbzdiQ
WAzWpNRfEA2h+w3HtnupRArMCT7yJEE2t11PgMPb5D/o9qvoK047yGG//2JS
SBbdfs8wtdvup9B+Ej93qaGtXzRUqs8TCHyEPl/P5rBwVS5cHNHzlEvPLOS8
+7jO+9H7a70Vnechy9bnbefgeXeqMtU9txwG7723xz8PfV87IzyUIjyw8ZUI
b4+5eMtB5qebPn47P826ZzzvBN1+nTOvtDntL/yHdR9DkPv4KkZT824jFZy+
9SW5srQQPv5tXsrpuvfgip6ryUXnWESSoVPIOoPddaj9/U5YpbvS7TfelKJ0
n8P+MUg/7L+e1Q/ZuAzSbz9z9dtvf90/nvzVOD/O2bfwH/XPbFwOeY4WcD1H
P+uf2fglf5Yf2MLlB37WP7PxfxA/dpLLj025zfJ7Bcrf+j2+f2b9ftQ/s/Hy
x6z7Xs9131NCWf1k+Llv+wnfP/Pxnohjxd9+lT0DBe+XqtPnTdMOpmcCv66f
L/Q0HK84596tNYpqwnHAwk70uMniKsiSeZjrvp62FdoZpTwDN542rY4cVwa9
nrZkJ8eQMe9L9OHRSx+mJbAl1MwvOvL7JWycVztdR7fpMtZPOsQ6MtdPfiUs
ZK6fDEXWVZYg6ypvI+sq8cK3NxYy8eiMr2IMvHLbzO/ieK0rxsKVLs1j4qmu
KsMZuOU/R76LO6mVM9e16jtOHMHA68Btte/heNXTYeEeYk07GfjSS4OYuFtV
61/fw8NPeu9i4DNfvxjLwIdGhn8Xr0DW8Uoh63jNkHW8WPgh8sodDPyFw4cJ
DJxsO/G77fHqh3j1H17vO173Cy/++Xzy+ezJfGLhNhuXMnmeQ73P5E0L6PP5
5PP5y/kUvHpEh4GbX1Nl4hJHF+PKZ39IZeIKu3THcvqTgQapTDzt2XzmezN+
uNR3edbICWbaKd9kwOQhwNe6T/PJK84rn/e3WzLtpE24P5mBzxi3gmkn5VwR
87oqBV6MYuBFN116JJ9Y7Q2vWjDPmzv4LZOfYCvHbuUTy87FL3KZ+BGzbaIM
PKXuMr9//gSfWLhaRjiTT+vpVVM5ecPqJ/z+2Tk+H83IYZ5XVcVFkoHnhv7R
qfcpVj8ct3E+c56VYjKNaU/UQhE+nz/AJ9b18vnsHJ9Y4xw+n9/ns6vjaX11
3M6fj/PjG3w+/zt8YuF8Pvnxov8Cn1jxIl557i18dvV8HK/4G9Z4srfwiZdf
7a7xeU/jE6t/9vb5zqeGHCafu3acEGfgmzbl8fvnT/DJ6/wRK5+OZQ/W9fLj
b/z4W0/gkx9/wzdehNe8Ca/1VFjPi7zt8stasm4gaJzse00LKjSijNGIekoB
8eL73SXUikBIUfAtdTcyZB+zV7A9+zP+NqM+dOJ0pdzYMApoKtV4oCRQCjRG
ytk9i3gOT2+5cEaqBq3XCw/Tm1p57gU8vy1D4UJcDaYemtzwu8vLi0BWf9qA
+oslkH2M1Z5XXHh52+uLkaXg/IFW8zofEhzer034uXoBbvrZOHddqtTm34kF
0rFsCRX/OF3vNge7jhU5bv8/d30r93pCLD2nEkobDu8sBY9JSz+pTYmB7GOs
9rziVQcFbU58rQTEabpfZudA6GLj5/n1Sz5u+jvCsepPufE7ByKfvqZlIpIC
q5QNzRY7YbfnFZ9pb65pXVoCHL/M7e8gR4aiozf6RYTl46ZfcP9ETYmNpeDO
M+dzlgPIkHWchZv+jnCsOlNu/Hi8Vv1AShoii6DGkJOqJzjqOn9UT3fptwr5
YFD/oAykUt9Jj5xNgqzjHNz0d4R/+8Ne5zxN3HyjEcd+cYcSaZKmndgvrrv0
E7/97jOBe9/On9XfEY5Vl8SNi5x0OazyuALclhos6hydAcle2+efkMvnWU93
6d9tWzDL5kglCLYZ11o2Nh2yjt/jpr8jHKv+qK/hBatiJdbaZoEbD+abeRpV
Q9bxq19mz7e/nlffwcc7h2dw+cmPiJ9U9HWRJ557gY5DzzWe4BxX/2o7+Xjv
xLHqZPk4vjhWPSwfxxf/9tf9zxcf7904sq9T+/+593fqKXb2FhzZp6n9/x3t
19RZfJYQq2736wFW3e57M4PHF7XdgE6jhk22JRW2eVTdHf6EAvo1m8ZfXUkB
pYnHY45ERUMb+eKd3lZU4OWWLJ7b5InIKLjZUXruhBB0fBVsE3LBwpYKPw6d
e3t/CAW0nlwiqmRDApLhuiYW6mQ4TDIlJt+wGMilqa+amu8PxDWcgxyNqHDA
ytmLIp+jccKB6Ver9M9QYU2Ou9vNUAoI6SdqbD6CArwTb4SIthXBYVdk3gX3
IwHRoNRrrUNDwNeH4s6ztKgw9VPw4FfRqB7/FUlMezYuEGPaw8b/nRnmPI6O
36mRMkul47NbWfXOZ5F6Z8hV7/z74NWewjdew6i2up379tYAynT7+c+bXqPX
vc710g097HGmQlXo4mMWxUD6a8DSWMFEeLpy/FrZJeUgRvpQHrUkli3hguU+
hNRJNWDUJodhWy+UAVUzk8l6I5Ogtl3RiLNrSsC+fKU51gJJYJXin0n+AS+h
1tGBJ4ILOfad2NJPaoT4G1j9Tndw8y7UHh3D8FNjG1/D5sKE7eEcdp65rFxR
efU1jA42tb60F8XdzS46uFpQYWnsK2o/jvviL2UR7SBJhYeP2WxrmVgKrmgS
vFW+vEMkGe4XfygwIo4C9kbN/jxQIhuo2yikHabzaa9Erd11rQi8lrZvpWoU
gCfzVBytXctgVODeVfJH0Xn3xlaQy9C/0PaBMkM/G8+N/6TmKE2Fs/aGj/SV
QHHNfSvck+2o0GBdSlzKA9TO1pXB145akeFOpxqxndfQONjojytbVj4nQ72G
4W88d5QBCY8nO7fdTEdkMVTwMG9210Db2w9QWc/Qk0E5tolTjzcpkLCKrkeB
qhbH0NPer1RHPTU0IcNTF5bt3OtRBgT3ZhpvkETjRWrlLc9M7uAXL7roS5oe
RKkAW0KFVL190qGolID56UVonKQwcvG7Mv10+CZxueIZn77rn2U1RoaEqEe3
/z9wUujokFD+vK+rcLkdNkaM8XxQ8zKRAI7x/Itz528aDCiHLb5Vu659QPet
yKm6q6PhVAYvlvu9tT2D+lWagZLITJcy+NVIxMvSHMVFxtNWe4iVw7Llj4K8
iKgeKanNDQz9109GVl/l0J90epwFQ//CQ7r+nPpB2PsyObr+hX8cSOXUHx+o
W+tO159T6yHlzaF/4oflJMb42WHc9WAdjvFz9amlW3VmlcKnpm+HPh+O4unC
McD0VCkcFDt9jks06pcGE3bfF5QqhTKRY4O0JqDtl26e1qZN11NOsdDn1GNt
armKoSei/NyfnHoW34gZLETXM0bwhSanHqz70lvx3XNicqMa80DVg4dTSQ0U
6DRZdY3nQrRfce8bzMa5xzNsXAzBBbj2jeFuj7U/Ca/5a17z+3jlr3ldb4bX
95rxyuPz+ewcn3ye+Tz/F3jmtc6Xz3PneO7qehY+z51bV4wXz1vVPzFxmeMy
zLqVSetVf0m9QE/jGa/12DvcXjPx7XIZ0gw8zHAsrv3/muszpv3Oy5OY/Ntt
N+4TPEtyrZuNRtbN4nVf8PInirtfMvHhqTMnMvCbAsd6Fc94rUPuap6x8LLp
CUz8rPbVcQycvV8Q1jrk7uKZvV7ahmu9dG/hmdfrbUTqa3Zw1dfwis8f3cT0
AzJqwszz7vlC/sY/pHL5h6725z2NZ7zGS1j6z6QHbGXgEcoUpj35QaPV+Tzj
zzOfT3z5xMJ5Hd929bi3QmspU7+KTABTv+NsK1zrdLB4eGBXw8QfVcWOZOAj
fJU6xQNWHR/W9ab+a8Gso6lZk8DUU2bsx9RjzOP+ulg4XnXlcw+MYL6PHOvn
MccV7HrbJznhzPGS84FyZvtlQRnfbc+r/bzayX5v7sR4n3LjeNmDV52s1cC/
mf2BMEeIuQ9hrPSN7+pxwWkfEqx5Ga/+oac97139HmH7jYeI3xDpwG905Ado
XeQH8JrXsP3JQsSftHbgT/ZUX2GeV+nBJ0nO6/pR/3Ckm/eHwWr/o35GE8Gx
7MGr3hYL57Uellccq54X6z3Y1eM3dr6yfsN4Zh3lNVoDs44yt3hVGCE0hi2h
dQzx6vnF6DqHf+oSRIW84+HiUzrrZA+j+IF39x+5NcfDQQYTYzjrBG0HzZbP
8imDGn+evrtkLxksqB90M3ZvFiJLYYxs8izHcjQ/bn5vswij/cuHGamM9mzc
5dwWRdOAMqgQWOp2T5cMTGpCxd/QMhFJgbH1YvWLOOoKJw986FdXVQyNW4cR
Q96idV72Eh6jg9yKoWZj+s3MgRVAIi6m3/XxaYgsgpLV24UX30HbH/hrRgND
T7JEvRenHunqDWIMPbkLzZ0Zeu7JJPfLliGDCIHbQ+oSSqDdvfEO6sMLAMn3
7CFG3RxLFkE5SyfIWTfHnacWuCM8qc4C/Q6Ps1ny7/cn4reeBwtPSTke+O9p
9LwPK2r/mDahGuiN1RYibUV5zYtVXVr4CNt+9l9ayxP81aUz4aSNsm9U5dH8
eBJzHUIWlFI7ECTbUA0+Ti5K1SktBw6ux29uGZgD9bREYldT0Xq0CovAzM13
siCMVBScT0N5sF12YV6TSiYMc9FJyZ2B6t9XlJ+qRj/vw0+qNZznfeijGGlC
P2+Dl+5rxnl/W2MweJPpY0RmwbT35S2VmdVAcmf1PEmBCiAQOVIans2G7s5q
Eu8+oPaUeeVIfKafN2DtBx/O89YlPMpL25kBtVQkDTnrsOpu3E5/84oG56w2
Wy9ll9aOX6c+CW30o8GBq1cln9+IrnMdsUJTzP46DaZ7gwL/DBQ/dhO+MrxG
g8XDRm6oJ6K4bIF/YYAPDd4rGFOdq4fipL1TBWfF0WCwDDVC6wp63g/XTUoY
9qRtPZg9jsOecQdNXjLs2RJ6wJRhT82zPbX+4bEAvBcxWVROg2KJEQ9N096A
W/mG7quC3yKyGoo3NCWm+qLnnRUxKJ1hz5tJrSpEDnsaU7xrZ9LtWXfZdf5W
Dns+akdJMuqqLDO3uvbluqp0rnqixl9cd4mFF8UcCv3j7wq4dbfFENlh6HoY
dxtpQyfTCrjuoUhZjBCK/zlsuwOjvbfi2NWc7dWOL7/IaF9JdHrE2X6zvcvF
TfJkuHP/JD3PVNRvRPdz+bKY7id9qBnHHKegflXgZaOo8wQyvHlz3RMfEtq+
5MnTWoYejXsHR3Lq6S89SHAJXY/O5y+mnHrCtePDrtP1zNKr7u9L6thf8XF8
cNdVFcWJU9Hvyi56PuqL9dy+uy4UC5fXcZ75yQB9X33cd8N8tEouz3rmYawb
x9q/7jSy38hsZL+RLch+I7zu278PmQcRf3AehLVfPa/zXO79YYQ7me+43JDG
1N9S1sicXzxff75T9mDtn4bXPAtrXoOVn+LV/rNa85n2U4KnMvHGadPUOhOH
4c6rRnWQV+V1PsXOhw77wXwoFv73v0eYdl7IXMXE1fdpMnFLJF7UNvvH4kV4
raPAK16EV76e/Z2UuVzfScHad5RXfrDya9zzXAoyz8XK02HFYdjxECckHuLe
wfOIlT/tbF6SO17R1ev65iH8TOXiB0vPM5ziq/MxzsvO60Vy5fVsMN47vPoN
LNwKp+eXbU8ylz1Y/oq9f/U/XHFjvNZT6SD+YSuXf8DreRTCsBPLL/Ga12PX
92lz1fdVFjYOlj5HAlVarYOMfTKhQu5G2fjp5SDXecjuIxKZ4M9zwwaPGRAN
S9L2bAwrQ8dJggfy9ratJcKMy7rL7KZXg8IsCaUQ5RgQO4b0L2ENFbbcu/pG
dR8FuN+R1VOILwRBE9yXlB0hw0vNt/MWJKDzjnCM/cG46/5uHPu7Ov1+IZgR
kfowzZ0MiaEe+RJ+xaD2ZARV6G02WEdwvTwyngL/oEa9vz8XjYP8aN0f1viN
3f5n6/600tfoehx7AzSVV692VEqAUQfvaen708D4DylDP4uTgd77ECf/AbGw
8m8z5RR9dB4UwLWvV7XN/TahQAo486am/7zkROiqOl3A7WQpUMj2kFENKgAV
nw3zli98Ce+6iQROfIx+b/pX1wOaU1MtDmdFg6yx4yf/e6cUHiMODKqbVgom
UqPlzHyKwfOPowb5+ZDhq8lbJ/i5FLbrkUT219qL7K/lRR3wLNiHBM4fTJpF
zqTCKb83EC8/Q+NfPa1OcB6yb9Uurn2rfrZ+sGiZiXPSKDTu8jrPpMD4Mw1Y
UaLOtZaguMgzp5FO+fjN4zqqK1yB7Gt0m2tfI6x6Q/b+PMH/0f15+PWJPQPv
rrrFc8j+J7Zc+5/09nrGDGS/kSFc+43w6xx/Dc6dH3x6ykBgcnkI0PynfmLg
+zio++qzpSVHvu9CF+cHjyL5wegO8oOGUSPWv6Vlgph56z8w9h2FsXsJ38sP
3pzqIZKyKAr8feue06PfiuGdVd5DvcZUAJWZQq4qHxNAS3VgcGNwETw6a93y
/Yno+3c/kh9M7yA/6CtVKzl9FwWszZvsMo5aDEnLjDQOfsoDe+pK/PtT0kDj
y3XRjPxgVlRtVk/MDzbXiXlsf43yp641zHaGZhm4o6Nb9zqd1I4b3nocbr+w
skP93PlBa5OMfk/OloDVea4Xh9pnw2B1I/0Is1JgpGw9Zv3VAvD8sM5fAldy
YOmXqi2SqijPvOYHTZH8YFAH+cHDf7+y+j2JBJof+4BF57Og9V3DuJbEMjBt
40wXreFkMEe4YI0bIQeK5EgF6r5Hx3u9PT9Yi+QHszvID34+JX76Hl1fv4Jd
k4PbquFC12u/jZF9AzzMAgcc8o0Gvz1W9D2wggYJXwYulk/m5wc7wmlcz9e2
n3y+uhrnNW8oh+QNb/3ivCEJyRtu5ucNezT+X8sbPncg7jazQp/3mmHelbvo
83cLh6e+hx+h450hMzZ4NHdin2r2XwMFWftRTEP2qcDKG2J9p4/X72Tx+r0/
vL7Dhdd3Brv6u2BY37/Aa31mT/uuWVd/R6+nXW9X88Br3rC38IOVT8Fa347V
HitvyOs6eSz9vNYX47U+/y8Mv4HXOvau/r5Pd303qru+W9TTvuvUW77f1F3f
V+0uf9jTrrer/XxXX1dX24+XnV1tD17rB3jVg9d3abHWJ/C6rozX8U93fR8Z
r/kLXvx0NQ/d9R3D9TPSmNdVlibKXD/GrsM1wKi/6+p6SV7tx3rP4lVn19V1
cF2tH+u+/A9C8M77
          "]], Axes -> True, AxesLabel -> {None, None, None},
         AxesOrigin -> {Automatic, Automatic, Automatic}, 
        BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGrids -> 
        None, FaceGridsStyle -> Automatic, 
        ImageSize -> {169.85177067564672`, 108.2454067419753}, ImageSizeRaw -> 
        Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
            GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
        PlotRange -> {{0.1, 1}, {0.1, 1}, {-0.020626217126846313`, 1.045}}, 
        PlotRangePadding -> {
          Scaled[0.02], 
          Scaled[0.02], 
          Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
        ViewPoint -> {-3.109874418556369, 0.7357037370513789, 
         1.1123943150238214`}, ViewVertical -> {0., 0., 1.}],FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"net2", "(", 
             RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ")"}], 
           RowBox[{
             RowBox[{
               RowBox[{"-", "0.45`"}], " ", "x"}], "+", 
             RowBox[{"0.09`", " ", "y"}], "+", "1"}]}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 Graphics3DBox[
                  SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                  PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                  0]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.745598536698304*^9, {3.7455986793168983`*^9, 3.745598698868498*^9}, 
   3.745598733011476*^9, {3.7455987947911*^9, 3.745598818229125*^9}, 
   3.745598954149871*^9, {3.745599077734351*^9, 3.745599091770947*^9}, {
   3.745599135858252*^9, 3.745599164115736*^9}, {3.74559921157234*^9, 
   3.745599231593071*^9}, {3.7455992757695208`*^9, 3.745599295849943*^9}, {
   3.745599333909657*^9, 3.745599355736721*^9}, 3.745599741947*^9, {
   3.745601730728037*^9, 3.745601757204936*^9}, 3.756204013452302*^9, 
   3.756204321169157*^9, {3.756204488019888*^9, 3.756204493224907*^9}, 
   3.75620502015835*^9, {3.756205662999372*^9, 3.7562057012726316`*^9}, {
   3.7562059143194313`*^9, 3.756205930500043*^9}, {3.756206035765172*^9, 
   3.75620603990548*^9}, {3.7562061164963093`*^9, 3.75620617635846*^9}, {
   3.756206216669696*^9, 3.7562062414587183`*^9}, 3.756206444739959*^9, {
   3.756206480138565*^9, 3.756206491588361*^9}, {3.7562065257885323`*^9, 
   3.7562065487700233`*^9}, 3.756273570808442*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"84c392ab-fec5-4189-8e28-bf2671c539eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["data", "Section",
 CellChangeTimes->{{3.745598622502952*^9, 
  3.745598622830689*^9}},ExpressionUUID->"e96f9e4d-2621-4b90-b034-\
d17704fa27d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "2.3"}], ";", 
  RowBox[{"b", "=", 
   RowBox[{"-", "5.85"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"left", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"square", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", " ", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "2"}], "}"}]}], "]"}], "<", "4"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"right", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"square", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "/;", " ", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "10"}], "}"}]}], "]"}], "<", "5"}]}]}], "]"}]}],
   ";", 
  RowBox[{"data3", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "\[Rule]", "0"}], ")"}], "&"}], "/@", "left"}], ")"}], 
    "~", "Join", "~", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "\[Rule]", "1"}], ")"}], "&"}], "/@", "right"}], 
     ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.74559902135647*^9, 3.745599056808811*^9}, {
  3.745599110866445*^9, 3.74559911202367*^9}, {3.745599197115535*^9, 
  3.7455992304613047`*^9}, {3.745599271013887*^9, 3.7455992823547773`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"45a0050c-3599-4486-afc3-54ff5106aa3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["plot func", "Section",
 CellChangeTimes->{{3.745598625751051*^9, 
  3.745598627374887*^9}},ExpressionUUID->"c8299361-eac2-43eb-9ad9-\
87f3e3a915a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nett", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", "x"}]], "Input",
 CellChangeTimes->{{3.745599778593462*^9, 3.745599809687295*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"46507663-e6e9-4aa8-aed6-a79cc9702a05"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotSolution", "[", 
    RowBox[{"net_", ",", "t_", ",", 
     RowBox[{"{", 
      RowBox[{"m_", ",", "b_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Overlay", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"underneath", "=", 
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ArrayPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"net", "[", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
           RowBox[{"Frame", "\[Rule]", "False"}], ",", 
           RowBox[{"ColorRules", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "\[Rule]", "Gray"}], ",", 
              RowBox[{"1", "\[Rule]", "White"}]}], "}"}]}]}], "]"}], ",", 
         FractionBox["\[Pi]", "2"]}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"m", " ", "x"}], "+", "b"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "10"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Thickness", "[", ".02", "]"}]}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"left", ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"right", ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.745598572308112*^9, 3.7455986069384813`*^9}, {
  3.745599766533579*^9, 3.745599776939411*^9}, {3.7456017453591833`*^9, 
  3.745601749254717*^9}, {3.7562042290581503`*^9, 3.756204232776243*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"edfb04fb-4b59-4ab0-be04-2abeae941877"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Section",ExpressionUUID->"89162b6c-f342-4836-852d-2ed70ec60119"],

Cell[BoxData[
 RowBox[{"Clear", "[", "r", "]"}]], "Input",
 CellChangeTimes->{{3.756205491498177*^9, 3.7562054932485323`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"f85b6e34-2823-495c-861c-3231e6dea051"],

Cell[BoxData[
 RowBox[{"<<", "logisticRegression`"}]], "Input",
 CellChangeTimes->{{3.756205484553762*^9, 3.7562054890403957`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"3cf279bd-9f40-411b-b2f8-0e46bfb6d2a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trained", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "data3", ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{"20", ",", "\"\<Seconds\>\""}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<SGD\>\"", ",", 
        RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GPU\>\"", ",", "3"}], "}"}]}], ",", 
     RowBox[{"TrainingProgressReporting", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"plotSolution", "[", 
          RowBox[{"#Net", ",", "#AbsoluteBatch", ",", 
           RowBox[{"Abs", "[", 
            RowBox[{"#WeightsVector", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
          "]"}], "&"}], ",", 
        RowBox[{"\"\<Interval\>\"", "\[Rule]", "0.01"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{"plotSolution", "[", 
  RowBox[{"trained", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.745598647007144*^9, 3.745598647085535*^9}, {
   3.745598760907364*^9, 3.745598761776433*^9}, {3.7455988581843224`*^9, 
   3.7455989155762253`*^9}, 3.745599084490904*^9, {3.756204373865528*^9, 
   3.756204441739983*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"6980a0ec-7eb9-447a-afdb-ff242d27cdc1"],

Cell[BoxData[
 RowBox[{"plotSolution", "[", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open = True), Appearance -> None,
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   RGBColor[0.729, 0.729, 0.729], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   RGBColor[0.729, 0.729, 0.729], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                GridBox[{{
                   StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                   StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                   StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                   StyleBox["\"scalar\"", "SummaryItem"]}, {
                   StyleBox[
                    
                    TemplateBox[{"\"Number of layers\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                   StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1},
                  GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridFrameMargins -> {{0, 0}, {0, 0}}, 
              BaselinePosition -> {1, 3}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   RGBColor[0.729, 0.729, 0.729], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   RGBColor[0.729, 0.729, 0.729], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                GridBox[{{
                   
                   DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 2}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NetDecoder["Scalar", 
                    Association[], 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}]}}, BaselinePosition -> 
                 Automatic, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridFrameMargins -> {{0, 0}, {0, 0}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
          Baseline, 
          BaseStyle -> {
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("NetChain[<>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7456017790701227`*^9, 3.756204252740004*^9, {3.75620431706431*^9, 
   3.756204335834093*^9}, {3.756204435546977*^9, 3.756204463587599*^9}, 
   3.756205505402747*^9, 3.756205747897797*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"d70c7cb8-8d8e-49c4-8aed-457897c2f01e"]
}, Open  ]],

Cell[TextData[StyleBox["The weights exist in a different space from the \
decision boundary and it does not really make sense to plot them here.",
 StripOnInput->False,
 LineColor->RGBColor[1, 0, 1],
 FrontFaceColor->RGBColor[1, 0, 1],
 BackFaceColor->RGBColor[1, 0, 1],
 GraphicsColor->RGBColor[1, 0, 1],
 FontWeight->Normal,
 FontColor->RGBColor[1, 0, 1]]], "Subsection",
 Evaluatable->True,
 CellGroupingRules->"InputGroupin",
 CellEvaluationFunction->cel`gTalker,
 CellFrameLabels->{{None, ""}, {None, None}},
 CellChangeTimes->{{3.756204552765765*^9, 3.756204590745709*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"6b52bc52-2a3f-445b-8cbf-c7b96a9154c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gradientNorms", "[", "assoc_", "]"}], ":=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "#", "]"}], "]"}], "]"}], "&"}], "/@", "assoc"}],
      ",", 
     RowBox[{"ChartLabels", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"BarOrigin", "\[Rule]", "Right"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[65]:=",ExpressionUUID->"b950bd7d-ab33-4bc3-b95e-fa109684bf9a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "data3", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", 
     RowBox[{"Quantity", "[", 
      RowBox[{"10", ",", "\"\<Seconds\>\""}], "]"}]}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<SGD\>\"", ",", 
       RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.0001"}]}], "}"}]}], ",", 
    
    RowBox[{"TargetDevice", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GPU\>\"", ",", "3"}], "}"}]}], ",", 
    RowBox[{"TrainingProgressReporting", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Function", "[", "#", "]"}], ",", 
       RowBox[{"\"\<Interval\>\"", "\[Rule]", 
        RowBox[{"Quantity", "[", 
         RowBox[{".5", ",", "\"\<Seconds\>\""}], "]"}]}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.745598647007144*^9, 3.745598647085535*^9}, {
   3.745598760907364*^9, 3.745598761776433*^9}, {3.7455988581843224`*^9, 
   3.7455989155762253`*^9}, 3.745599084490904*^9, {3.74559944041691*^9, 
   3.745599466720018*^9}, {3.7455995535826406`*^9, 3.745599556794495*^9}, {
   3.745599597443862*^9, 3.745599656421386*^9}, {3.74560178753362*^9, 
   3.7456017880907507`*^9}, {3.756204192723454*^9, 3.7562041928470507`*^9}, {
   3.756205517815989*^9, 3.756205535134906*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"87c0d7b6-18b2-4c29-bcf8-dbe5c1d1885f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 2}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NetDecoder["Scalar", 
                    Association[], 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.745599487979567*^9, 3.745599578225363*^9, {3.745599620505172*^9, 
   3.7455996487835827`*^9}, 3.745599697663148*^9, 3.745601785082843*^9, 
   3.7456018311348257`*^9, 3.756204109416307*^9, 3.756204205435445*^9, 
   3.7562043975308943`*^9, {3.756205519454348*^9, 3.756205547183394*^9}, 
   3.7562057610931273`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"97d14a82-5162-4537-aa41-91894e64560b"]
}, Open  ]],

Cell[BoxData["SS"], "Input",
 CellChangeTimes->{{3.756205768142653*^9, 
  3.756205773263926*^9}},ExpressionUUID->"4f82c72a-cb2f-436d-96aa-\
56f2de7ff3e5"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Input",
 CellChangeTimes->{{3.75620413177491*^9, 3.756204140697712*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8cd02669-cc34-4f59-9df5-cfaa3f45d783"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7562041414807367`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"24659348-d6df-4c85-ae49-d0102bee282b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NetInformation", "[", "net", "]"}]], "Input",
 CellChangeTimes->{{3.756204142216354*^9, 
  3.756204155769332*^9}},ExpressionUUID->"2ecf691a-5a60-4569-ac0b-\
4a748a693e60"],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.756204608807743*^9},ExpressionUUID->"518a5aa1-e664-472b-b6cc-\
fb9eef677f6f"]
}, Open  ]]
},
WindowSize->{3440, 1388},
WindowMargins->{{280, Automatic}, {-215, Automatic}},
Magnification->2,
Background->GrayLevel[1],
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4007, 93, 921, "Input",ExpressionUUID->"c86ecefd-ae28-48c0-a4a4-1d8eabae6aaa"],
Cell[4590, 117, 681, 14, 42, "Message",ExpressionUUID->"51ca7454-3a8b-43a6-848d-2dd85cbe60cb"],
Cell[5274, 133, 410147, 7574, 685, "Output",ExpressionUUID->"84c392ab-fec5-4189-8e28-bf2671c539eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415458, 7712, 149, 3, 134, "Section",ExpressionUUID->"e96f9e4d-2621-4b90-b034-d17704fa27d6"],
Cell[415610, 7717, 1693, 52, 190, "Input",ExpressionUUID->"45a0050c-3599-4486-afc3-54ff5106aa3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417340, 7774, 154, 3, 134, "Section",ExpressionUUID->"c8299361-eac2-43eb-9ad9-87f3e3a915a7"],
Cell[417497, 7779, 276, 6, 60, "Input",ExpressionUUID->"46507663-e6e9-4aa8-aed6-a79cc9702a05"],
Cell[417776, 7787, 2761, 67, 404, "Input",ExpressionUUID->"edfb04fb-4b59-4ab0-be04-2abeae941877"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420574, 7859, 74, 0, 134, "Section",ExpressionUUID->"89162b6c-f342-4836-852d-2ed70ec60119"],
Cell[420651, 7861, 205, 3, 60, "Input",ExpressionUUID->"f85b6e34-2823-495c-861c-3231e6dea051"],
Cell[420859, 7866, 210, 3, 60, "Input",ExpressionUUID->"3cf279bd-9f40-411b-b2f8-0e46bfb6d2a4"],
Cell[CellGroupData[{
Cell[421094, 7873, 1446, 33, 147, "Input",ExpressionUUID->"6980a0ec-7eb9-447a-afdb-ff242d27cdc1"],
Cell[422543, 7908, 20621, 417, 173, "Output",ExpressionUUID->"d70c7cb8-8d8e-49c4-8aed-457897c2f01e"]
}, Open  ]],
Cell[443179, 8328, 658, 14, 136, "Subsection",ExpressionUUID->"6b52bc52-2a3f-445b-8cbf-c7b96a9154c8",
 Evaluatable->True,
 CellGroupingRules->"InputGroupin"],
Cell[443840, 8344, 525, 14, 60, "Input",ExpressionUUID->"b950bd7d-ab33-4bc3-b95e-fa109684bf9a"],
Cell[CellGroupData[{
Cell[444390, 8362, 1403, 30, 104, "Input",ExpressionUUID->"87c0d7b6-18b2-4c29-bcf8-dbe5c1d1885f"],
Cell[445796, 8394, 20207, 414, 173, "Output",ExpressionUUID->"97d14a82-5162-4537-aa41-91894e64560b"]
}, Open  ]],
Cell[466018, 8811, 154, 3, 240, "Input",ExpressionUUID->"4f82c72a-cb2f-436d-96aa-56f2de7ff3e5"],
Cell[CellGroupData[{
Cell[466197, 8818, 171, 2, 240, "Input",ExpressionUUID->"8cd02669-cc34-4f59-9df5-cfaa3f45d783"],
Cell[466371, 8822, 151, 2, 388, "Output",ExpressionUUID->"24659348-d6df-4c85-ae49-d0102bee282b"]
}, Open  ]],
Cell[466537, 8827, 195, 4, 960, "Input",ExpressionUUID->"2ecf691a-5a60-4569-ac0b-4a748a693e60"],
Cell[466735, 8833, 145, 3, 960, "Input",ExpressionUUID->"518a5aa1-e664-472b-b6cc-fb9eef677f6f"]
}, Open  ]]
}
]
*)

