(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    137719,       3031]
NotebookOptionsPosition[    134475,       2972]
NotebookOutlinePosition[    134835,       2988]
CellTagsIndexPosition[    134792,       2985]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"NetInitialize", "[", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LinearLayer", "[", "1", "]"}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7456045991703587`*^9, 3.745604601866692*^9}, {
  3.745604708960079*^9, 3.745604731947763*^9}, {3.74560481335419*^9, 
  3.745604816270685*^9}, {3.7456051209849*^9, 3.745605157789879*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9b87d032-de83-496a-a255-fd2d75d1314e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["1", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 1}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.745604602855096*^9, {3.745604709585621*^9, 3.7456047326595078`*^9}, 
   3.7456048170625687`*^9, {3.74560514179844*^9, 3.74560517846417*^9}, 
   3.756193199175164*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"014a86b0-35a3-44d4-93a7-094a72dba60a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"net", "=", 
    RowBox[{"NetInitialize", "[", 
     RowBox[{"NetChain", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"LinearLayer", "[", "1", "]"}], "}"}], ",", 
       RowBox[{"\"\<Input\>\"", "\[Rule]", "1"}]}], "]"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"net", "[", "1", "]"}], "//", "First"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"NetInformation", "[", 
    RowBox[{"net", ",", "\"\<MXNetNodeGraphPlot\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"NetInformation", "[", 
    RowBox[{"net", ",", "\"\<SummaryGraphic\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"NetInformation", "[", 
    RowBox[{"net", ",", "\"\<LayersGraph\>\""}], "]"}]}], 
  "\[IndentingNewLine]", "}"}]], "Input",
 CellChangeTimes->{{3.745604460219058*^9, 3.745604547309494*^9}, {
  3.745604824617906*^9, 3.745604845424089*^9}, {3.745605186543701*^9, 
  3.745605218853118*^9}, {3.7456057470149918`*^9, 3.7456057477894173`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"157242db-f11d-4926-b27e-c91af7d23fd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open = True), Appearance -> None,
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   RGBColor[0.729, 0.729, 0.729], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   RGBColor[0.729, 0.729, 0.729], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                GridBox[{{
                   StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                   StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                   StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                   StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                   StyleBox[
                    
                    TemplateBox[{"\"Number of layers\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                   StyleBox["1", "SummaryItem"]}}, BaselinePosition -> {2, 1},
                  GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridFrameMargins -> {{0, 0}, {0, 0}}, 
              BaselinePosition -> {1, 3}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   RGBColor[0.729, 0.729, 0.729], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   RGBColor[0.729, 0.729, 0.729], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                GridBox[{{
                   
                   DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 1}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}]}}, BaselinePosition -> 
                 Automatic, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridFrameMargins -> {{0, 0}, {0, 0}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
          Baseline, 
          BaseStyle -> {
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("NetChain[<>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"-", "1.3480699062347412`"}], ",", 
   TemplateBox[{GraphicsBox[{{
        GrayLevel[0.8], {
         LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
          1.0000000000000002`}}], 
         LineBox[{{-3., 1.0000000000000002`}, {-2., 1.0000000000000002`}}], 
         LineBox[{{-3., 2.}, {-2., 1.0000000000000002`}}], 
         LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999, 1.}}], 
         LineBox[{{-0.9999999999999999, 1.}, {6.123233995736766*^-17, 
          1.}}]}}, {
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[
            StyleBox[
             LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
             GrayLevel[0.7], StripOnInput -> False]], {-2.4000000000000004`, 
           0.6000000000000002}, {-0.25, 0}, 
           Offset[8], {1., 1.}], 
          
          TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1"}, 
           "RowWithSeparators"]], Annotation[#, 
          Row[{"b", 1}, "\[Times]"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[
            StyleBox[
             LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
             GrayLevel[0.7], StripOnInput -> False]], {-2.4000000000000004`, 
           1.0000000000000002`}, {-0.25, 0}, 
           Offset[8], {1., 0.}], 
          
          TemplateBox[{"\[Times]", "\"\[Times]\"", "1", "1"}, 
           "RowWithSeparators"]], Annotation[#, 
          Row[{1, 1}, "\[Times]"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[
            StyleBox[
             LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
             GrayLevel[0.7], StripOnInput -> False]], {-2.4000000000000004`, 
           1.4000000000000001`}, {-0.25, 0}, 
           Offset[8], {1., -0.9999999999999998}], 
          
          TemplateBox[{"\[Times]", "\"\[Times]\"", "1"}, 
           "RowWithSeparators"]], Annotation[#, 
          Row[{1}, "\[Times]"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[
            StyleBox[
             LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
             GrayLevel[0.7], StripOnInput -> False]], {-1.4, 1.}, {-0.25, 0}, 
           
           Offset[8], {1., -2.220446049250313*^-16}], 
          
          TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1"}, 
           "RowWithSeparators"]], Annotation[#, 
          Row[{"b", 1}, "\[Times]"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[
            StyleBox[
             LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
             GrayLevel[0.7], StripOnInput -> False]], {-0.3999999999999999, 
           1.}, {-0.25, 0}, 
           Offset[8], {1., 0.}], 
          
          TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1"}, 
           "RowWithSeparators"]], Annotation[#, 
          Row[{"b", 1}, "\[Times]"], "Tooltip"]& ]}, {
        GrayLevel[0], {
         TagBox[
          TooltipBox[{
            AbsolutePointSize[4], 
            GrayLevel[0.5], 
            PointBox[{-3., 1.8369701987210297`*^-16}]}, 
           TagBox[
            GridBox[{{
               StyleBox["\"id\"", Bold, StripOnInput -> False], "0"}, {
               StyleBox["\"name\"", Bold, StripOnInput -> False], 
               "\".Inputs.Input\""}, {
               StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
              
               StyleBox["\"param\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
               RowBox[{"{", "}"}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
             GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
             BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
             GrayLevel[0.85]], "Grid"]], Annotation[#, 
           Grid[{{
              Style["id", Bold], 0}, {
              Style["name", Bold], ".Inputs.Input"}, {
              Style["op", Bold], "null"}, {
              Style["param", Bold], 
              Association[]}, {
              Style["attrs", Bold], 
              Association[]}, {
              Style["inputs", Bold], {}}}, Alignment -> Left, 
            BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
            FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
            Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
           "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            AbsolutePointSize[4], 
            GrayLevel[0.5], 
            PointBox[{-3., 1.0000000000000002`}]}, 
           TagBox[
            GridBox[{{
               StyleBox["\"id\"", Bold, StripOnInput -> False], "1"}, {
               StyleBox["\"name\"", Bold, StripOnInput -> False], 
               "\".Nodes.1.Arrays.Weights\""}, {
               StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
              
               StyleBox["\"param\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
               RowBox[{"{", "}"}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
             GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
             BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
             GrayLevel[0.85]], "Grid"]], Annotation[#, 
           Grid[{{
              Style["id", Bold], 1}, {
              Style["name", Bold], ".Nodes.1.Arrays.Weights"}, {
              Style["op", Bold], "null"}, {
              Style["param", Bold], 
              Association[]}, {
              Style["attrs", Bold], 
              Association[]}, {
              Style["inputs", Bold], {}}}, Alignment -> Left, 
            BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
            FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
            Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
           "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            AbsolutePointSize[4], 
            GrayLevel[0.5], 
            PointBox[{-3., 2.}]}, 
           TagBox[
            GridBox[{{
               StyleBox["\"id\"", Bold, StripOnInput -> False], "2"}, {
               StyleBox["\"name\"", Bold, StripOnInput -> False], 
               "\".Nodes.1.Arrays.Biases\""}, {
               StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
              
               StyleBox["\"param\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
               RowBox[{"{", "}"}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
             GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
             BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
             GrayLevel[0.85]], "Grid"]], Annotation[#, 
           Grid[{{
              Style["id", Bold], 2}, {
              Style["name", Bold], ".Nodes.1.Arrays.Biases"}, {
              Style["op", Bold], "null"}, {
              Style["param", Bold], 
              Association[]}, {
              Style["attrs", Bold], 
              Association[]}, {
              Style["inputs", Bold], {}}}, Alignment -> Left, 
            BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
            FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
            Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
           "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            AbsolutePointSize[6], 
            GrayLevel[0], 
            PointBox[{-2., 1.0000000000000002`}]}, 
           TagBox[
            GridBox[{{
               StyleBox["\"id\"", Bold, StripOnInput -> False], "3"}, {
               StyleBox["\"name\"", Bold, StripOnInput -> False], 
               "\".Nodes.1\""}, {
               StyleBox["\"op\"", Bold, StripOnInput -> False], 
               "\"FullyConnected\""}, {
               StyleBox["\"param\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
               TagBox[
                GridBox[{{
                   StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                   StyleBox[
                   "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, {
                   StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                   StyleBox[
                   "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {False, {True}, False}, 
                   "Rows" -> {False, {True}, False}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}},
                  FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
               StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
             GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
             BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
             GrayLevel[0.85]], "Grid"]], Annotation[#, 
           Grid[{{
              Style["id", Bold], 3}, {
              Style["name", Bold], ".Nodes.1"}, {
              Style["op", Bold], "FullyConnected"}, {
              Style["param", Bold], 
              Association[]}, {
              Style["attrs", Bold], 
              Grid[{{
                 Style["no_bias", Bold], 
                 Style["False", ShowStringCharacters -> True]}, {
                 Style["num_hidden", Bold], 
                 Style["1", ShowStringCharacters -> True]}}, Alignment -> 
               Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
               GrayLevel[0.85]]}, {
              Style["inputs", Bold], {{0, 0, 0}, {1, 0, 0}, {2, 0, 0}}}}, 
            Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"},
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
            Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
            ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            AbsolutePointSize[6], 
            Hue[0.11, 1, 0.75], 
            PointBox[{-0.9999999999999999, 1.}]}, 
           TagBox[
            GridBox[{{
               StyleBox["\"id\"", Bold, StripOnInput -> False], "4"}, {
               StyleBox["\"name\"", Bold, StripOnInput -> False], 
               "\".Outputs.Output\""}, {
               StyleBox["\"op\"", Bold, StripOnInput -> False], "\"_copy\""}, {
               StyleBox["\"param\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
               RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
               StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"3", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False,
              GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{1.4}}}, 
             GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
             BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
             GrayLevel[0.85]], "Grid"]], Annotation[#, 
           Grid[{{
              Style["id", Bold], 4}, {
              Style["name", Bold], ".Outputs.Output"}, {
              Style["op", Bold], "_copy"}, {
              Style["param", Bold], 
              Association[]}, {
              Style["attrs", Bold], 
              Association[]}, {
              Style["inputs", Bold], {{3, 0, 0}}}}, Alignment -> Left, 
            BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
            FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
            Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
           "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            AbsolutePointSize[4], 
            GrayLevel[0.5], 
            PointBox[{6.123233995736766*^-17, 1.}]}, "Null"], 
          Annotation[#, Null, "Tooltip"]& ]}}, 
       StyleBox[{{{
           InsetBox[
            FormBox["0", TraditionalForm], 
            Offset[{0, 5}, {-3., 1.8369701987210297`*^-16}], {0., -0.17}, 
            Automatic, {1, 0}], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            Offset[{0, 5}, {-3., 1.0000000000000002`}], {0., -0.17}, 
            Automatic, {1, 0}], 
           InsetBox[
            FormBox["2", TraditionalForm], 
            Offset[{0, 5}, {-3., 2.}], {0., -0.17}, Automatic, {1, 0}], 
           InsetBox[
            FormBox["3", TraditionalForm], 
            Offset[{0, 6}, {-2., 1.0000000000000002`}], {0., -0.17}, 
            Automatic, {1, 0}], 
           InsetBox[
            FormBox["4", TraditionalForm], 
            Offset[{0, 6}, {-0.9999999999999999, 1.}], {0., -0.17}, 
            Automatic, {1, 0}], 
           InsetBox[
            FormBox["\"\"", TraditionalForm], 
            Offset[{0, 5}, {6.123233995736766*^-17, 1.}], {0., -0.17}, 
            Automatic, {1, 0}]}, {
           InsetBox[
            FormBox["\"\"", TraditionalForm], 
            Offset[{0, -5}, {-3., 1.8369701987210297`*^-16}], {0, 1.}, 
            Automatic, {1, 0}], 
           InsetBox[
            FormBox["\"\"", TraditionalForm], 
            Offset[{0, -5}, {-3., 1.0000000000000002`}], {0, 1.}, Automatic, {
            1, 0}], 
           InsetBox[
            FormBox["\"\"", TraditionalForm], 
            Offset[{0, -5}, {-3., 2.}], {0, 1.}, Automatic, {1, 0}], 
           InsetBox[
            FormBox["\"FC\"", TraditionalForm], 
            Offset[{0, -6}, {-2., 1.0000000000000002`}], {0, 1.}, Automatic, {
            1, 0}], 
           InsetBox[
            FormBox["\"c\"", TraditionalForm], 
            Offset[{0, -6}, {-0.9999999999999999, 1.}], {0, 1.}, Automatic, {
            1, 0}], 
           InsetBox[
            FormBox["\"\"", TraditionalForm], 
            Offset[{0, -5}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
            Automatic, {1, 0}]}}}, FontSize -> 7, StripOnInput -> False]}, 
      ImageSize -> {180., 125.85}, AspectRatio -> Full, PlotRangePadding -> 0,
       ImagePadding -> {{24., 6}, {15., 10.850000000000005`}}, ImageMargins -> 
      0, BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}],FormBox[
      FormBox[
       TemplateBox[{"\"Tensor\"", "\"FullyConnected\"", "\"_copy\""}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TemplateBox[{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #}, "RowDefault"], 
                 TemplateBox[{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #2}, "RowDefault"], 
                 TemplateBox[{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                    Baseline)], "\" \"", #3}, "RowDefault"], "\"\"", "\"\""}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontSize -> 8, FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"AbsolutePointSize", "[", "4", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", "8"}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
             RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
             
             RowBox[{"LegendLayout", "\[Rule]", 
               "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}], 
           "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], ",", 
   GraphicsBox[{
     {GrayLevel[0.7], 
      LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
       6.123233995736766*^-17}}], 
      LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}, {InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-1.4, 8.572527594031473*^-17}, {-0.25, 0},
        Offset[8], {1., -6.123233995736766*^-17}], InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-0.4, 2.4492935982947065*^-17}, {-0.25, 0},
        Offset[8], {1., -6.123233995736766*^-17}]}, 
     {EdgeForm[AbsoluteThickness[1]], 
      StyleBox[{
        {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
         DiskBox[{-2., 1.2246467991473532*^-16}, 
          Offset[{2., 2.}, {0., 0.}]]}, {
         {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
          0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
          RectangleBox[Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
           Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, InsetBox[
          
          GraphicsBox[
           GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
             0.9, 0}}, {
             {Opacity[0.2], 
              LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
             {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
              PointBox[{1, 5, 2, 3, 4}]}}],
           ImageSize->18], {-1., 6.123233995736766*^-17}]}, 
        {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
         DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
       FontSize->10]}, {
      StyleBox[{
        InsetBox["\<\"Input\"\>", 
         Offset[{0, -7}, {-2., 1.2246467991473532*^-16}], {0, 1.}, 
         Automatic, {1, 0}], 
        InsetBox["\<\"1\"\>", 
         Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
         Automatic, {1, 0}], 
        InsetBox["\<\"Output\"\>", Offset[{0, -7}, {0., 0.}], {0, 1.}, 
         Automatic, {1, 0}]},
       StripOnInput->False,
       FontColor->GrayLevel[0.5]], 
      StyleBox[{InsetBox[
         TemplateBox[{"\[Cross]","\"\[Cross]\"","\"1\""},
          "RowWithSeparators"], 
         Offset[{3.3677786976552215*^-16, 5.5}, \
{-1.4, 8.572527594031473*^-17}], {0., -0.17}, Automatic, {
         1., -6.123233995736766*^-17}], InsetBox[
         TemplateBox[{"\[Cross]","\"\[Cross]\"","\"1\""},
          "RowWithSeparators"], 
         Offset[{3.3677786976552215*^-16, 5.5}, \
{-0.4, 2.4492935982947065*^-17}], {0., -0.17}, Automatic, {
         1., -6.123233995736766*^-17}]},
       StripOnInput->False,
       FontSize->8,
       FontWeight->"Thin",
       FontColor->GrayLevel[0.7]]}},
    AspectRatio->Full,
    BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
    ImageMargins->{{0, 0}, {0, 0}},
    ImagePadding->{{24., 26.5}, {26.999999999999996`, 14.}},
    ImageSize->{160.5, 41.00000000000001},
    PlotRangePadding->0], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{{1}}, {}, {
        GraphLayout -> {"LayeredDigraphEmbedding", "Orientation" -> Left}, 
         VertexLabels -> {
           Placed["Name", Tooltip]}}]]}, 
      TagBox[GraphicsGroupBox[{{}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          TagBox[
           TooltipBox[DiskBox[{0., 0.}, 0.004014598540145964],
            RowBox[{"{", "1", "}"}]],
           Annotation[#, {1}, "Tooltip"]& ]}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotRangePadding->0.1]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7456044540915747`*^9, 3.745604492089313*^9, 3.7456045528222218`*^9, {
   3.745604826834118*^9, 3.745604849875634*^9}, {3.745605193329133*^9, 
   3.7456052196601877`*^9}, 3.7456057503839283`*^9, 3.7561932008019648`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c88a9a90-46b4-44cc-b609-04590d4c021f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurementsObject", "[", "net", "]"}]], "Input",
 CellChangeTimes->{{3.7456057522774982`*^9, 3.745605786453011*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"90483608-5775-48ea-84b1-da04f7a4aa98"],

Cell[BoxData[
 RowBox[{"ClassifierMeasurementsObject", "[", 
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
               
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               GridBox[{{
                  StyleBox[
                   TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], 
                  StyleBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   "SummaryItem"]}, {
                  StyleBox[
                   TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], 
                  StyleBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   "SummaryItem"]}, {
                  StyleBox[
                   
                   TemplateBox[{"\"Number of layers\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  StyleBox["1", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridFrameMargins -> {{0, 0}, {0, 0}}, 
             BaselinePosition -> {1, 3}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open = False), Appearance -> None,
                  Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
               
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               GridBox[{{
                  
                  DynamicModuleBox[{
                   NeuralNetworks`Private`NetChain`assoc3 = 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 1}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                   DynamicBox[
                    GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                   Initialization :> {NetChain}]}}, BaselinePosition -> 
                Automatic, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridFrameMargins -> {{0, 0}, {0, 0}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
         Baseline, 
         BaseStyle -> {
          ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
           3, ShowSyntaxStyles -> False}]], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("NetChain[<>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Output",
 CellChangeTimes->{{3.7456057674397497`*^9, 3.745605787119879*^9}, 
   3.756193203130313*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"7cc4c1be-3ba8-4719-8264-0cc666c96dbf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7456044484544067`*^9, 
  3.745604449514382*^9}},ExpressionUUID->"6e455f9c-407b-420e-8424-\
8276d1ff3916"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.745604446758643*^9, 
  3.745604451618112*^9}},ExpressionUUID->"bdadad5c-8239-412e-89f2-\
8afe00ae88d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tune", "[", 
     RowBox[{"#", ",", " ", "1"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "//", 
  "ListAnimate"}]], "Input",
 CellChangeTimes->{{3.745604347656698*^9, 3.7456043827605467`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c2b13ef1-f478-44f6-b052-282c9020db4d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i11$$ = 39, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i11$$ = 1}, 
     "\"max\"" :> {$CellContext`i11$$ = 101}}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i11$$], 1, ""}, 1, 101, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i11$6775$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i11$$], {1, 101, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->11.921163082122803`,
                  AnimationTimeIndex->1.9211630821228027`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                RowBox[{"tune", "[", 
                 RowBox[{"0.`", ",", "1"}], "]"}], 2->
                RowBox[{"tune", "[", 
                 RowBox[{"0.01`", ",", "1"}], "]"}], 3->
                RowBox[{"tune", "[", 
                 RowBox[{"0.02`", ",", "1"}], "]"}], 4->
                RowBox[{"tune", "[", 
                 RowBox[{"0.03`", ",", "1"}], "]"}], 5->
                RowBox[{"tune", "[", 
                 RowBox[{"0.04`", ",", "1"}], "]"}], 6->
                RowBox[{"tune", "[", 
                 RowBox[{"0.05`", ",", "1"}], "]"}], 7->
                RowBox[{"tune", "[", 
                 RowBox[{"0.06`", ",", "1"}], "]"}], 8->
                RowBox[{"tune", "[", 
                 RowBox[{"0.07`", ",", "1"}], "]"}], 9->
                RowBox[{"tune", "[", 
                 RowBox[{"0.08`", ",", "1"}], "]"}], 10->
                RowBox[{"tune", "[", 
                 RowBox[{"0.09`", ",", "1"}], "]"}], 11->
                RowBox[{"tune", "[", 
                 RowBox[{"0.1`", ",", "1"}], "]"}], 12->
                RowBox[{"tune", "[", 
                 RowBox[{"0.11`", ",", "1"}], "]"}], 13->
                RowBox[{"tune", "[", 
                 RowBox[{"0.12`", ",", "1"}], "]"}], 14->
                RowBox[{"tune", "[", 
                 RowBox[{"0.13`", ",", "1"}], "]"}], 15->
                RowBox[{"tune", "[", 
                 RowBox[{"0.14`", ",", "1"}], "]"}], 16->
                RowBox[{"tune", "[", 
                 RowBox[{"0.15`", ",", "1"}], "]"}], 17->
                RowBox[{"tune", "[", 
                 RowBox[{"0.16`", ",", "1"}], "]"}], 18->
                RowBox[{"tune", "[", 
                 RowBox[{"0.17`", ",", "1"}], "]"}], 19->
                RowBox[{"tune", "[", 
                 RowBox[{"0.18`", ",", "1"}], "]"}], 20->
                RowBox[{"tune", "[", 
                 RowBox[{"0.19`", ",", "1"}], "]"}], 21->
                RowBox[{"tune", "[", 
                 RowBox[{"0.2`", ",", "1"}], "]"}], 22->
                RowBox[{"tune", "[", 
                 RowBox[{"0.21`", ",", "1"}], "]"}], 23->
                RowBox[{"tune", "[", 
                 RowBox[{"0.22`", ",", "1"}], "]"}], 24->
                RowBox[{"tune", "[", 
                 RowBox[{"0.23`", ",", "1"}], "]"}], 25->
                RowBox[{"tune", "[", 
                 RowBox[{"0.24`", ",", "1"}], "]"}], 26->
                RowBox[{"tune", "[", 
                 RowBox[{"0.25`", ",", "1"}], "]"}], 27->
                RowBox[{"tune", "[", 
                 RowBox[{"0.26`", ",", "1"}], "]"}], 28->
                RowBox[{"tune", "[", 
                 RowBox[{"0.27`", ",", "1"}], "]"}], 29->
                RowBox[{"tune", "[", 
                 RowBox[{"0.28`", ",", "1"}], "]"}], 30->
                RowBox[{"tune", "[", 
                 RowBox[{"0.29`", ",", "1"}], "]"}], 31->
                RowBox[{"tune", "[", 
                 RowBox[{"0.3`", ",", "1"}], "]"}], 32->
                RowBox[{"tune", "[", 
                 RowBox[{"0.31`", ",", "1"}], "]"}], 33->
                RowBox[{"tune", "[", 
                 RowBox[{"0.32`", ",", "1"}], "]"}], 34->
                RowBox[{"tune", "[", 
                 RowBox[{"0.33`", ",", "1"}], "]"}], 35->
                RowBox[{"tune", "[", 
                 RowBox[{"0.34`", ",", "1"}], "]"}], 36->
                RowBox[{"tune", "[", 
                 RowBox[{"0.35000000000000003`", ",", "1"}], "]"}], 37->
                RowBox[{"tune", "[", 
                 RowBox[{"0.36`", ",", "1"}], "]"}], 38->
                RowBox[{"tune", "[", 
                 RowBox[{"0.37`", ",", "1"}], "]"}], 39->
                RowBox[{"tune", "[", 
                 RowBox[{"0.38`", ",", "1"}], "]"}], 40->
                RowBox[{"tune", "[", 
                 RowBox[{"0.39`", ",", "1"}], "]"}], 41->
                RowBox[{"tune", "[", 
                 RowBox[{"0.4`", ",", "1"}], "]"}], 42->
                RowBox[{"tune", "[", 
                 RowBox[{"0.41000000000000003`", ",", "1"}], "]"}], 43->
                RowBox[{"tune", "[", 
                 RowBox[{"0.42`", ",", "1"}], "]"}], 44->
                RowBox[{"tune", "[", 
                 RowBox[{"0.43`", ",", "1"}], "]"}], 45->
                RowBox[{"tune", "[", 
                 RowBox[{"0.44`", ",", "1"}], "]"}], 46->
                RowBox[{"tune", "[", 
                 RowBox[{"0.45`", ",", "1"}], "]"}], 47->
                RowBox[{"tune", "[", 
                 RowBox[{"0.46`", ",", "1"}], "]"}], 48->
                RowBox[{"tune", "[", 
                 RowBox[{"0.47000000000000003`", ",", "1"}], "]"}], 49->
                RowBox[{"tune", "[", 
                 RowBox[{"0.48`", ",", "1"}], "]"}], 50->
                RowBox[{"tune", "[", 
                 RowBox[{"0.49`", ",", "1"}], "]"}], 51->
                RowBox[{"tune", "[", 
                 RowBox[{"0.5`", ",", "1"}], "]"}], 52->
                RowBox[{"tune", "[", 
                 RowBox[{"0.51`", ",", "1"}], "]"}], 53->
                RowBox[{"tune", "[", 
                 RowBox[{"0.52`", ",", "1"}], "]"}], 54->
                RowBox[{"tune", "[", 
                 RowBox[{"0.53`", ",", "1"}], "]"}], 55->
                RowBox[{"tune", "[", 
                 RowBox[{"0.54`", ",", "1"}], "]"}], 56->
                RowBox[{"tune", "[", 
                 RowBox[{"0.55`", ",", "1"}], "]"}], 57->
                RowBox[{"tune", "[", 
                 RowBox[{"0.56`", ",", "1"}], "]"}], 58->
                RowBox[{"tune", "[", 
                 RowBox[{"0.5700000000000001`", ",", "1"}], "]"}], 59->
                RowBox[{"tune", "[", 
                 RowBox[{"0.58`", ",", "1"}], "]"}], 60->
                RowBox[{"tune", "[", 
                 RowBox[{"0.59`", ",", "1"}], "]"}], 61->
                RowBox[{"tune", "[", 
                 RowBox[{"0.6`", ",", "1"}], "]"}], 62->
                RowBox[{"tune", "[", 
                 RowBox[{"0.61`", ",", "1"}], "]"}], 63->
                RowBox[{"tune", "[", 
                 RowBox[{"0.62`", ",", "1"}], "]"}], 64->
                RowBox[{"tune", "[", 
                 RowBox[{"0.63`", ",", "1"}], "]"}], 65->
                RowBox[{"tune", "[", 
                 RowBox[{"0.64`", ",", "1"}], "]"}], 66->
                RowBox[{"tune", "[", 
                 RowBox[{"0.65`", ",", "1"}], "]"}], 67->
                RowBox[{"tune", "[", 
                 RowBox[{"0.66`", ",", "1"}], "]"}], 68->
                RowBox[{"tune", "[", 
                 RowBox[{"0.67`", ",", "1"}], "]"}], 69->
                RowBox[{"tune", "[", 
                 RowBox[{"0.68`", ",", "1"}], "]"}], 70->
                RowBox[{"tune", "[", 
                 RowBox[{"0.6900000000000001`", ",", "1"}], "]"}], 71->
                RowBox[{"tune", "[", 
                 RowBox[{"0.7000000000000001`", ",", "1"}], "]"}], 72->
                RowBox[{"tune", "[", 
                 RowBox[{"0.71`", ",", "1"}], "]"}], 73->
                RowBox[{"tune", "[", 
                 RowBox[{"0.72`", ",", "1"}], "]"}], 74->
                RowBox[{"tune", "[", 
                 RowBox[{"0.73`", ",", "1"}], "]"}], 75->
                RowBox[{"tune", "[", 
                 RowBox[{"0.74`", ",", "1"}], "]"}], 76->
                RowBox[{"tune", "[", 
                 RowBox[{"0.75`", ",", "1"}], "]"}], 77->
                RowBox[{"tune", "[", 
                 RowBox[{"0.76`", ",", "1"}], "]"}], 78->
                RowBox[{"tune", "[", 
                 RowBox[{"0.77`", ",", "1"}], "]"}], 79->
                RowBox[{"tune", "[", 
                 RowBox[{"0.78`", ",", "1"}], "]"}], 80->
                RowBox[{"tune", "[", 
                 RowBox[{"0.79`", ",", "1"}], "]"}], 81->
                RowBox[{"tune", "[", 
                 RowBox[{"0.8`", ",", "1"}], "]"}], 82->
                RowBox[{"tune", "[", 
                 RowBox[{"0.81`", ",", "1"}], "]"}], 83->
                RowBox[{"tune", "[", 
                 RowBox[{"0.8200000000000001`", ",", "1"}], "]"}], 84->
                RowBox[{"tune", "[", 
                 RowBox[{"0.8300000000000001`", ",", "1"}], "]"}], 85->
                RowBox[{"tune", "[", 
                 RowBox[{"0.84`", ",", "1"}], "]"}], 86->
                RowBox[{"tune", "[", 
                 RowBox[{"0.85`", ",", "1"}], "]"}], 87->
                RowBox[{"tune", "[", 
                 RowBox[{"0.86`", ",", "1"}], "]"}], 88->
                RowBox[{"tune", "[", 
                 RowBox[{"0.87`", ",", "1"}], "]"}], 89->
                RowBox[{"tune", "[", 
                 RowBox[{"0.88`", ",", "1"}], "]"}], 90->
                RowBox[{"tune", "[", 
                 RowBox[{"0.89`", ",", "1"}], "]"}], 91->
                RowBox[{"tune", "[", 
                 RowBox[{"0.9`", ",", "1"}], "]"}], 92->
                RowBox[{"tune", "[", 
                 RowBox[{"0.91`", ",", "1"}], "]"}], 93->
                RowBox[{"tune", "[", 
                 RowBox[{"0.92`", ",", "1"}], "]"}], 94->
                RowBox[{"tune", "[", 
                 RowBox[{"0.93`", ",", "1"}], "]"}], 95->
                RowBox[{"tune", "[", 
                 RowBox[{"0.9400000000000001`", ",", "1"}], "]"}], 96->
                RowBox[{"tune", "[", 
                 RowBox[{"0.9500000000000001`", ",", "1"}], "]"}], 97->
                RowBox[{"tune", "[", 
                 RowBox[{"0.96`", ",", "1"}], "]"}], 98->
                RowBox[{"tune", "[", 
                 RowBox[{"0.97`", ",", "1"}], "]"}], 99->
                RowBox[{"tune", "[", 
                 RowBox[{"0.98`", ",", "1"}], "]"}], 100->
                RowBox[{"tune", "[", 
                 RowBox[{"0.99`", ",", "1"}], "]"}], 101->
                RowBox[{"tune", "[", 
                 RowBox[{"1.`", ",", "1"}], "]"}]}, 
                Dynamic[$CellContext`i11$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i11$$, \
$CellContext`i11$6775$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 101, 1}, 101, 
            1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{309., {33.75, 40.75}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.745604365183079*^9, 3.745604386239304*^9}, 
   3.756193205613771*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"1b559b76-f505-4cfe-903d-eb3a9a8804d4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NetTrain", "[", "datum", "]"}]], "Input",
 CellChangeTimes->{{3.745604403150239*^9, 
  3.74560442202011*^9}},ExpressionUUID->"8327fa51-f12e-464e-ac01-\
2e4b1f9a6d34"],

Cell[BoxData["haha"], "Input",
 CellChangeTimes->{{3.745605911677794*^9, 3.7456059120519533`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"90400763-b09f-48e0-acd4-e0e915237156"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"net", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "\"\<Weights\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.745605961266445*^9, 3.745606031622356*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b8cfd483-295e-459b-8480-54e075aafc13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"-", "1.524733304977417`"}], "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.745605980286984*^9, {3.7456060285965643`*^9, 3.745606032113083*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"140650e3-85a5-4c7b-ba13-50451de3d9e6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{
   RowBox[{"NetExtract", "[", 
    RowBox[{"net", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"All", ",", "\"\<Weights\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "\"\<Biases\>\""}], "}"}]}], "}"}]}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.745606043334243*^9, 3.745606054189015*^9}, {
  3.745606093884369*^9, 3.7456060991947603`*^9}, {3.745606132819285*^9, 
  3.7456061591051607`*^9}, {3.745606190640626*^9, 3.745606193694147*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"7fde35f3-f1db-4d4f-a5f8-866b211f2b93"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"{", 
   RowBox[{"1.1630795001983643`", ",", 
    RowBox[{"-", "3.830782413482666`"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.756193211153523*^9, 
  3.7561932111586742`*^9}},ExpressionUUID->"9c686c95-b69b-4ff0-813c-\
20cb074e3e6f"],

Cell[BoxData["haha"], "Input",
 CellChangeTimes->{{3.745606108450642*^9, 3.745606108778056*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d6d6b57c-d6f6-417b-8ae3-e1d12c69179c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.7456062992086153`*^9, 3.7456063007833014`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"389486d6-414d-462e-b63b-eab1e745cfab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "1.524733304977417`"}], "}"}]], "Output",
 CellChangeTimes->{3.745606301172051*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"ca9311eb-7a23-4af0-bd60-6554b0264b1d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"format", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", "x", "}"}], "\[Rule]", 
    RowBox[{"{", "y", "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.745606280042754*^9, 3.745606321767178*^9}, {
  3.745606360878674*^9, 3.74560636134059*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"7a909f00-e43c-44b9-be42-26b5ceefed12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"format", "/@", "datum"}]], "Input",
 CellChangeTimes->{{3.745606341904244*^9, 3.7456063463735933`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"a05208cc-48d7-4ee8-b07e-a7a03bc5d7e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "6.1101`", "}"}], "\[Rule]", 
    RowBox[{"{", "17.592`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.5277`", "}"}], "\[Rule]", 
    RowBox[{"{", "9.1302`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.5186`", "}"}], "\[Rule]", 
    RowBox[{"{", "13.662`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.0032`", "}"}], "\[Rule]", 
    RowBox[{"{", "11.854`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.8598`", "}"}], "\[Rule]", 
    RowBox[{"{", "6.8233`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.3829`", "}"}], "\[Rule]", 
    RowBox[{"{", "11.886`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.4764`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.3483`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.5781`", "}"}], "\[Rule]", 
    RowBox[{"{", "12", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.4862`", "}"}], "\[Rule]", 
    RowBox[{"{", "6.5987`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.0546`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.8166`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.7107`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.2522`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "14.164`", "}"}], "\[Rule]", 
    RowBox[{"{", "15.505`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.734`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.1551`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.4084`", "}"}], "\[Rule]", 
    RowBox[{"{", "7.2258`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.6407`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.71618`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.3794`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.5129`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.3654`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.3048`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.1301`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.56077`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.4296`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.6518`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.0708`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.3893`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.1891`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.1386`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "20.27`", "}"}], "\[Rule]", 
    RowBox[{"{", "21.767`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.4901`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.263`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.3261`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.1875`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.5649`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.0825`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "18.945`", "}"}], "\[Rule]", 
    RowBox[{"{", "22.638`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "12.828`", "}"}], "\[Rule]", 
    RowBox[{"{", "13.501`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "10.957`", "}"}], "\[Rule]", 
    RowBox[{"{", "7.0467`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "13.176`", "}"}], "\[Rule]", 
    RowBox[{"{", "14.692`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "22.203`", "}"}], "\[Rule]", 
    RowBox[{"{", "24.147`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.2524`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "1.22`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.5894`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.9966`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "9.2482`", "}"}], "\[Rule]", 
    RowBox[{"{", "12.134`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.8918`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.8495`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.2111`", "}"}], "\[Rule]", 
    RowBox[{"{", "6.5426`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.9334`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.5623`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.0959`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.1164`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.6063`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.3928`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "12.836`", "}"}], "\[Rule]", 
    RowBox[{"{", "10.117`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.3534`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.4974`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.4069`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.55657`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.8825`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.9115`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "11.708`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.3854`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.7737`", "}"}], "\[Rule]", 
    RowBox[{"{", "2.4406`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.8247`", "}"}], "\[Rule]", 
    RowBox[{"{", "6.7318`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.0931`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.0463`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.0702`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.1337`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.8014`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.844`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "11.7`", "}"}], "\[Rule]", 
    RowBox[{"{", "8.0043`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.5416`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.0179`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.5402`", "}"}], "\[Rule]", 
    RowBox[{"{", "6.7504`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.3077`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.8396`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.4239`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.2885`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.6031`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.9981`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.3328`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.4233`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.3589`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "1.4211`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.2742`", "}"}], "\[Rule]", 
    RowBox[{"{", "2.4756`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.6397`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.6042`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "9.3102`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.9624`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "9.4536`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.4141`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.8254`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.1694`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.1793`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "0.74279`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "21.279`", "}"}], "\[Rule]", 
    RowBox[{"{", "17.929`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "14.908`", "}"}], "\[Rule]", 
    RowBox[{"{", "12.054`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "18.959`", "}"}], "\[Rule]", 
    RowBox[{"{", "17.054`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.2182`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.8852`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.2951`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.7442`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "10.236`", "}"}], "\[Rule]", 
    RowBox[{"{", "7.7754`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.4994`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.0173`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "20.341`", "}"}], "\[Rule]", 
    RowBox[{"{", "20.992`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "10.136`", "}"}], "\[Rule]", 
    RowBox[{"{", "6.6799`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.3345`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.0259`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.0062`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.2784`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.2259`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.3411`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.0269`", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"-", "2.6807`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.5479`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.29678`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.5386`", "}"}], "\[Rule]", 
    RowBox[{"{", "3.8845`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.0365`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.7014`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "10.274`", "}"}], "\[Rule]", 
    RowBox[{"{", "6.7526`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.1077`", "}"}], "\[Rule]", 
    RowBox[{"{", "2.0576`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.7292`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.47953`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.1884`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.20421`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.3557`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.67861`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "9.7687`", "}"}], "\[Rule]", 
    RowBox[{"{", "7.5435`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.5159`", "}"}], "\[Rule]", 
    RowBox[{"{", "5.3436`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.5172`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.2415`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "9.1802`", "}"}], "\[Rule]", 
    RowBox[{"{", "6.7981`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6.002`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.92695`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.5204`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.152`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.0594`", "}"}], "\[Rule]", 
    RowBox[{"{", "2.8214`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.7077`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.8451`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "7.6366`", "}"}], "\[Rule]", 
    RowBox[{"{", "4.2959`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.8707`", "}"}], "\[Rule]", 
    RowBox[{"{", "7.2029`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.3054`", "}"}], "\[Rule]", 
    RowBox[{"{", "1.9869`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "8.2934`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.14454`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "13.394`", "}"}], "\[Rule]", 
    RowBox[{"{", "9.0551`", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5.4369`", "}"}], "\[Rule]", 
    RowBox[{"{", "0.61705`", "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.745606261215889*^9, {3.745606346749256*^9, 3.745606362475099*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"d6791659-2af7-451b-96c5-6478bfa74798"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", 
     RowBox[{"format", "/@", "datum"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{
    RowBox[{"NetExtract", "[", 
     RowBox[{"model", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"All", ",", "\"\<Weights\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"All", ",", "\"\<Biases\>\""}], "}"}]}], "}"}]}], "]"}], "//",
     "Flatten"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7456062050228987`*^9, 3.745606252786274*^9}, {
  3.745606330729525*^9, 3.745606380195833*^9}, {3.745606411115306*^9, 
  3.7456064359688063`*^9}},ExpressionUUID->"7ecab9cf-c210-4c07-9ec0-\
a06090f60a4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tune", "@@", "params"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"c4ff8931-cdfa-4619-b4ae-9383100ce11b"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJwtlAk0VXkcx80LkZ33nrfh2XrWpJBDM/drqRCnQalkRhtFinYlIllapJJo
0yKhadVCpSxRQ2coaZtkHQkZS6Fszf/eN/ece+655799f9/f5/vXXxnuE8SS
kZFZQV76m2LSo/IogofVjk0LUjKskR6UvOo3ERdNzUpp+c4GcA0J70tQ1Mf6
jtH8fh9zkNGGuZNEWHukZxd1RwL7NWRGhDY+Wz2QqM0XggxGKlWIoRlfWn2+
UoIBp9rgVx06SKxaWJa3WgOnLxjeG5PoQ4Z5TFDhfDWksZ+P4a3NpzWCBJi3
6bta5yw2VBdcPxaUrIozGjkPy95w0bBWJjxOdgqSuO9qhn0t8HjQJCCVZQU/
VcuCM71cbCPLc35WRETg5Br+CzHcSqJ17DtEWDTdLF/rMBe308q8B7o+Usw+
eznYNXDj13UCZax51RFqvo2PWGYBB+df2/TaJ7DhE+PT87K/hWL0FPJh6SLq
brVTgZnD0We73USoJuVcPMRBxc1pG7LLeCCnev8tVERCt3eR7hwbWCtcEflX
2EKTTT1pGOTAnzZYRQOyHQdNerz40vpL2bg0Za7xVmcuTANSywfzFOBTpJvQ
3T8D2nSZ2XZgyss1RUrGBs14GXO4HgjrGO00Ruo/A3p1ViJImIPMMJbfX+e1
0lLqz0w7qf/G9tL9WRyproQvJbeUN145sEwAourO3jFtsIrlNNm7DfDNty3n
lKsJDnp0ydoc0f6fh3FqcmCmJydMDIWfTy06ay7AjiV5tn890MNTU2IEpSn1
21qMONnKVOvt6ljm/Mund2FceH055LvFSAk7OqcShaY47kKEOxpBcm7fjZYQ
PvT1vob5jXNg/6189eVzHDh0Rretq22h3Fp2sq8lCZFJyi31UMMLg/ffY0Il
iIq38ry0nwPSzeeuPG287fvqsTRxEiKVjExiPPXw6d2VkYAeAf6cTIQGiqQ8
POyjYguxp3UeG6c+6uR+SmajRPX0zAs22hBafTCSjxungplHguZHZIAlBknD
9BNmXCin5e/xdu+jVswgBJnqgrj2fq2MELe6Nt/hOHLA/IaPU2O8zW80C3QQ
l04KlGjgZSMJTogu6DarTGiBjk/VQj7mL020f105RDkYekTFh/NxLCnB/2Xx
UEkRkfeUx4e4Lpw4OQmOP3ntVUnlQvH7uTW3QjXhGFGTXJdlgNGA9ZUTBWpY
9a8/cdgA5rz0esU8Ds7Otqg/eUkfcrT9V9mgsT5ZyEbC9nvJvRUdJYyuebag
41vXY41Z+5yWtz+3RO0wabjQBIwNgzOk4yrWaCdYhTeJ4EJiuXG/FoL4rUu0
M8Q48eD4YbURLube/TJeH2kEJRorgR78oq/dXfmDg2DmYuijsnpzn8xfbINn
5+eQmTZSDucYgbh+e1aRAB7KLPMkPx1kfkhLShCoS/soz0MoA8xXKujy8oU+
JLdTfeWyj96fAoZXIRuMz5vkSls70wuUrQXQe5O4f+NEHXUmdmp5okQXIzGh
xVu01OBJF2jMBo2pYw0XlO3v990PGknvM5YQHQQDtw1sTPuhPz60VUbqcxcX
9u8bMrNuNFITLiM93SSXyRrl2SmG1dTNks9Zs8P4cL+Q4W1R2E4x/d1nCHna
WAtdHJLv47qpC+B39o+rbwM52D3qEFGjoA/Gh2F1RO7MsXAJMICgdJnYyVoI
Wo4yiyflJL+HSiQUtLG5oCkv3vKYYriYzUbuDjph8iA0LLhez8VQBm3YOEVo
aGw+oCvlz0oDTgSfzCht0LdjZa0Ips/Un94n95ikPDF3cfUPapCkxP64GKLA
qGD32HIqmjakygwk5Rp2IgNp/0o4qGqnLjY9aqP+A3ClnRA=
       
       "]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjnk4lAkAhx3bunas0WAwJsYM5hsfseXW95NS7MMm0eapnFN6HpQOIrfC
ligiLJ5Ipw6rqaRjvmRTu62WHNNUaHUfxn2ltfaP3/P+9b7Pzyx8+1qxipKS
ku/8/udE78MW/qFjy/zEDjpxp7Tpzip2oodsJ1Xl/4beV65NQ+9xOFuWSSnc
S+KyC7Tp+DXne1RlhdQR/YmOXxO1aeagQeF0Tw3V0Xq1+L6vNt13y2/7WE8D
FUQsNeZMMGgv/ocXwz3NVIjiB4tWLwY93eNYPNTTQe1ItHMzeadF3/M8U9te
M0CV33iW/KdCneb03XgTbv2Zym6+7v9c+C3Nig45r+Y5Sk2EKFzkcap0oZ3X
Tb/AKSpG2O0kT1Win5Yupod1vlJ+CS+KE5O/SA/Vpj1WMVRGx2j0wPID41KD
YwO/FFWqotF+65VHAQppzjrvZR0TC/D8xM2hyi2vpLucq0MeZqrDKbVMWWHU
Ll2hmEmKHdBE/2zPCJ8poTLc/MOMnBhIl1nJ2BI55XKpTJIq/R5/WzHffjR5
T0VPDac/YDBhFXYy1/S7EWpapNNLBupC1hUy5jU3SbnVXThRUrIQ6WZix6Lu
r9Swrk9oUDMLHTGqwsO1yniVFxq0U00fcu6p6rbSb+CtSPB+7WAAnppe9sVg
NXyKUN8lSWMj9F5X4MH1mvDiG6jkNBuC+9GFmeTFgO5fFvn1CiNoCRwrspR1
wMm9vMbBgYP9yxIF3ilMlIqcdRZuNUHFrprIF326+MPIY+noUS529FYa7nNl
wYXTfMS2exGWX/FoOS7Rg7Zqze6wTFM0nHzEz2IZgJuxyG2DhRm4/84lfT7K
hoZg47W1rWZYnb9gVZi6EWzcDS8nbOKB5TLy4KTYGDt7de/5KJlD/lMOxP0c
KEbzAr1LzYEM1dhxDy5W2d4v9yb5CH/nzyyoWIQ7o65fJtv4uLuR3xVw0BSx
1vbydrEApgFFya3OZnAfjOzcoGGBlNTuqplJM6zks30ZNRY458jgFJ/jwSr9
4N5mR0tItMh1kvXmIMTOUoHcErdZZmpFLD7Ed6L2S+KsUFKnrve0hQ/pic7I
YT0hohNaKnuzBBg7Ozdpe10I3uZtL6MoC0QI6jTKfQmc7VBODx60wDBR5NAw
RMA6ObZM64IlGmu/vBzPFSH1ShuDv8kKwSvM4cq1Rv0CtvtdTSGMY3Ju2NDW
+Cdv6VuTViH0NKN/811Por/a69PLeAK1nilJQxtI0LcP0COJBOxT8j2LNpKo
eNpyTDWFgN9QfZcsjMTPTE93QRaB7O7x6YhoEm3pVH5UAYGpmrTlSRkk7oQ4
LVacISB3LXpyuo5EuQmxe1ZGIGpPbYX3JRJ7nbetZjwnMHHpqvhTPYmgwLMc
bh8BXZ5s0u4aCd3DFr9Trwn8qG7CuU2TyJ3l6WcNE7jVeTrySde8/8y4UUNT
BB/tRjJeRmLdZHCeEUME2aqHE+xnJOwXloeKdEQYa/qYu7mfxKAPW8NXXwSy
evHF9x9IbGliBR/hiXBL7hGf95nEiu4Am2rBfI8VQNkOkeCNFKo0WImwJWdP
++5xEr1CZt0Tm/kenV1uMEWiaeWatFd2ImTOHI9omiFRGlYQML5EBJ0l56w3
fSURn9Jm+a2TCFUxTeNzc/P/yhiz+q4i/AcAfR0+
        "]]},
      Annotation[#, "Charting`Private`Tag$27311#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    FormBox["6300.122095060133`", TraditionalForm], {10, 0.9}, {-1, 0}],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 16}, {-5, 25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7456062309314327`*^9, 3.74560625351013*^9}, {
   3.745606333045281*^9, 3.745606387557825*^9}, 3.745606441107217*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"fe2689c2-b4fc-4821-9e4b-dfdda3cadbf0"]
}, Open  ]],

Cell[BoxData["haha"], "Input",
 CellChangeTimes->{{3.745606212092431*^9, 3.745606213451579*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"fc4c145d-7aec-4c7a-b7da-150017e70c8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tune", "@@", "params"}]], "Input",
 CellChangeTimes->{{3.7456061834643803`*^9, 3.745606196534679*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"bb21dfb6-916d-4edb-94e1-3756b652eb62"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJwtlAk0VXkcx80LkZ33nrfh2XrWpJBDM/drqRCnQalkRhtFinYlIllapJJo
0yKhadVCpSxRQ2coaZtkHQkZS6Fszf/eN/ece+655799f9/f5/vXXxnuE8SS
kZFZQV76m2LSo/IogofVjk0LUjKskR6UvOo3ERdNzUpp+c4GcA0J70tQ1Mf6
jtH8fh9zkNGGuZNEWHukZxd1RwL7NWRGhDY+Wz2QqM0XggxGKlWIoRlfWn2+
UoIBp9rgVx06SKxaWJa3WgOnLxjeG5PoQ4Z5TFDhfDWksZ+P4a3NpzWCBJi3
6bta5yw2VBdcPxaUrIozGjkPy95w0bBWJjxOdgqSuO9qhn0t8HjQJCCVZQU/
VcuCM71cbCPLc35WRETg5Br+CzHcSqJ17DtEWDTdLF/rMBe308q8B7o+Usw+
eznYNXDj13UCZax51RFqvo2PWGYBB+df2/TaJ7DhE+PT87K/hWL0FPJh6SLq
brVTgZnD0We73USoJuVcPMRBxc1pG7LLeCCnev8tVERCt3eR7hwbWCtcEflX
2EKTTT1pGOTAnzZYRQOyHQdNerz40vpL2bg0Za7xVmcuTANSywfzFOBTpJvQ
3T8D2nSZ2XZgyss1RUrGBs14GXO4HgjrGO00Ruo/A3p1ViJImIPMMJbfX+e1
0lLqz0w7qf/G9tL9WRyproQvJbeUN145sEwAourO3jFtsIrlNNm7DfDNty3n
lKsJDnp0ydoc0f6fh3FqcmCmJydMDIWfTy06ay7AjiV5tn890MNTU2IEpSn1
21qMONnKVOvt6ljm/Mund2FceH055LvFSAk7OqcShaY47kKEOxpBcm7fjZYQ
PvT1vob5jXNg/6189eVzHDh0Rretq22h3Fp2sq8lCZFJyi31UMMLg/ffY0Il
iIq38ry0nwPSzeeuPG287fvqsTRxEiKVjExiPPXw6d2VkYAeAf6cTIQGiqQ8
POyjYguxp3UeG6c+6uR+SmajRPX0zAs22hBafTCSjxungplHguZHZIAlBknD
9BNmXCin5e/xdu+jVswgBJnqgrj2fq2MELe6Nt/hOHLA/IaPU2O8zW80C3QQ
l04KlGjgZSMJTogu6DarTGiBjk/VQj7mL020f105RDkYekTFh/NxLCnB/2Xx
UEkRkfeUx4e4Lpw4OQmOP3ntVUnlQvH7uTW3QjXhGFGTXJdlgNGA9ZUTBWpY
9a8/cdgA5rz0esU8Ds7Otqg/eUkfcrT9V9mgsT5ZyEbC9nvJvRUdJYyuebag
41vXY41Z+5yWtz+3RO0wabjQBIwNgzOk4yrWaCdYhTeJ4EJiuXG/FoL4rUu0
M8Q48eD4YbURLube/TJeH2kEJRorgR78oq/dXfmDg2DmYuijsnpzn8xfbINn
5+eQmTZSDucYgbh+e1aRAB7KLPMkPx1kfkhLShCoS/soz0MoA8xXKujy8oU+
JLdTfeWyj96fAoZXIRuMz5vkSls70wuUrQXQe5O4f+NEHXUmdmp5okQXIzGh
xVu01OBJF2jMBo2pYw0XlO3v990PGknvM5YQHQQDtw1sTPuhPz60VUbqcxcX
9u8bMrNuNFITLiM93SSXyRrl2SmG1dTNks9Zs8P4cL+Q4W1R2E4x/d1nCHna
WAtdHJLv47qpC+B39o+rbwM52D3qEFGjoA/Gh2F1RO7MsXAJMICgdJnYyVoI
Wo4yiyflJL+HSiQUtLG5oCkv3vKYYriYzUbuDjph8iA0LLhez8VQBm3YOEVo
aGw+oCvlz0oDTgSfzCht0LdjZa0Ips/Un94n95ikPDF3cfUPapCkxP64GKLA
qGD32HIqmjakygwk5Rp2IgNp/0o4qGqnLjY9aqP+A3ClnRA=
       
       "]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjnk4lAkAhx3bunas0WAwJsYM5hsfseXW95NS7MMm0eapnFN6HpQOIrfC
ligiLJ5Ipw6rqaRjvmRTu62WHNNUaHUfxn2ltfaP3/P+9b7Pzyx8+1qxipKS
ku/8/udE78MW/qFjy/zEDjpxp7Tpzip2oodsJ1Xl/4beV65NQ+9xOFuWSSnc
S+KyC7Tp+DXne1RlhdQR/YmOXxO1aeagQeF0Tw3V0Xq1+L6vNt13y2/7WE8D
FUQsNeZMMGgv/ocXwz3NVIjiB4tWLwY93eNYPNTTQe1ItHMzeadF3/M8U9te
M0CV33iW/KdCneb03XgTbv2Zym6+7v9c+C3Nig45r+Y5Sk2EKFzkcap0oZ3X
Tb/AKSpG2O0kT1Win5Yupod1vlJ+CS+KE5O/SA/Vpj1WMVRGx2j0wPID41KD
YwO/FFWqotF+65VHAQppzjrvZR0TC/D8xM2hyi2vpLucq0MeZqrDKbVMWWHU
Ll2hmEmKHdBE/2zPCJ8poTLc/MOMnBhIl1nJ2BI55XKpTJIq/R5/WzHffjR5
T0VPDac/YDBhFXYy1/S7EWpapNNLBupC1hUy5jU3SbnVXThRUrIQ6WZix6Lu
r9Swrk9oUDMLHTGqwsO1yniVFxq0U00fcu6p6rbSb+CtSPB+7WAAnppe9sVg
NXyKUN8lSWMj9F5X4MH1mvDiG6jkNBuC+9GFmeTFgO5fFvn1CiNoCRwrspR1
wMm9vMbBgYP9yxIF3ilMlIqcdRZuNUHFrprIF326+MPIY+noUS529FYa7nNl
wYXTfMS2exGWX/FoOS7Rg7Zqze6wTFM0nHzEz2IZgJuxyG2DhRm4/84lfT7K
hoZg47W1rWZYnb9gVZi6EWzcDS8nbOKB5TLy4KTYGDt7de/5KJlD/lMOxP0c
KEbzAr1LzYEM1dhxDy5W2d4v9yb5CH/nzyyoWIQ7o65fJtv4uLuR3xVw0BSx
1vbydrEApgFFya3OZnAfjOzcoGGBlNTuqplJM6zks30ZNRY458jgFJ/jwSr9
4N5mR0tItMh1kvXmIMTOUoHcErdZZmpFLD7Ed6L2S+KsUFKnrve0hQ/pic7I
YT0hohNaKnuzBBg7Ozdpe10I3uZtL6MoC0QI6jTKfQmc7VBODx60wDBR5NAw
RMA6ObZM64IlGmu/vBzPFSH1ShuDv8kKwSvM4cq1Rv0CtvtdTSGMY3Ju2NDW
+Cdv6VuTViH0NKN/811Por/a69PLeAK1nilJQxtI0LcP0COJBOxT8j2LNpKo
eNpyTDWFgN9QfZcsjMTPTE93QRaB7O7x6YhoEm3pVH5UAYGpmrTlSRkk7oQ4
LVacISB3LXpyuo5EuQmxe1ZGIGpPbYX3JRJ7nbetZjwnMHHpqvhTPYmgwLMc
bh8BXZ5s0u4aCd3DFr9Trwn8qG7CuU2TyJ3l6WcNE7jVeTrySde8/8y4UUNT
BB/tRjJeRmLdZHCeEUME2aqHE+xnJOwXloeKdEQYa/qYu7mfxKAPW8NXXwSy
evHF9x9IbGliBR/hiXBL7hGf95nEiu4Am2rBfI8VQNkOkeCNFKo0WImwJWdP
++5xEr1CZt0Tm/kenV1uMEWiaeWatFd2ImTOHI9omiFRGlYQML5EBJ0l56w3
fSURn9Jm+a2TCFUxTeNzc/P/yhiz+q4i/AcAfR0+
        "]]},
      Annotation[#, "Charting`Private`Tag$26436#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    FormBox["6300.122095060133`", TraditionalForm], {10, 0.9}, {-1, 0}],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 16}, {-5, 25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.745606196894911*^9, {3.745606373938849*^9, 3.745606404434626*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"eeb2ea65-5e23-4b64-a202-7cc95b057ff6"]
}, Open  ]]
},
WindowSize->{1720, 1388},
WindowMargins->{{Automatic, 4}, {0, Automatic}},
Background->GrayLevel[1],
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 521, 10, 31, "Input",ExpressionUUID->"9b87d032-de83-496a-a255-fd2d75d1314e"],
Cell[1104, 34, 18970, 391, 79, "Output",ExpressionUUID->"014a86b0-35a3-44d4-93a7-094a72dba60a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20111, 430, 1134, 26, 170, "Input",ExpressionUUID->"157242db-f11d-4926-b27e-c91af7d23fd4"],
Cell[21248, 458, 53116, 1110, 199, "Output",ExpressionUUID->"c88a9a90-46b4-44cc-b609-04590d4c021f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74401, 1573, 229, 3, 31, "Input",ExpressionUUID->"90483608-5775-48ea-84b1-da04f7a4aa98"],
Cell[74633, 1578, 19166, 391, 79, "Output",ExpressionUUID->"7cc4c1be-3ba8-4719-8264-0cc666c96dbf"]
}, Open  ]],
Cell[93814, 1972, 234, 5, 101, "Input",ExpressionUUID->"6e455f9c-407b-420e-8424-8276d1ff3916"],
Cell[94051, 1979, 232, 5, 101, "Input",ExpressionUUID->"bdadad5c-8239-412e-89f2-8afe00ae88d0"],
Cell[CellGroupData[{
Cell[94308, 1988, 387, 10, 31, "Input",ExpressionUUID->"c2b13ef1-f478-44f6-b052-282c9020db4d"],
Cell[94698, 2000, 14739, 328, 108, "Output",ExpressionUUID->"1b559b76-f505-4cfe-903d-eb3a9a8804d4"]
}, Open  ]],
Cell[109452, 2331, 190, 4, 31, "Input",ExpressionUUID->"8327fa51-f12e-464e-ac01-2e4b1f9a6d34"],
Cell[109645, 2337, 176, 2, 31, "Input",ExpressionUUID->"90400763-b09f-48e0-acd4-e0e915237156"],
Cell[CellGroupData[{
Cell[109846, 2343, 297, 6, 31, "Input",ExpressionUUID->"b8cfd483-295e-459b-8480-54e075aafc13"],
Cell[110146, 2351, 305, 7, 35, "Output",ExpressionUUID->"140650e3-85a5-4c7b-ba13-50451de3d9e6"]
}, Open  ]],
Cell[110466, 2361, 644, 15, 31, "Input",ExpressionUUID->"7fde35f3-f1db-4d4f-a5f8-866b211f2b93"],
Cell[111113, 2378, 274, 7, 31, InheritFromParent,ExpressionUUID->"9c686c95-b69b-4ff0-813c-20cb074e3e6f"],
Cell[111390, 2387, 175, 2, 31, "Input",ExpressionUUID->"d6d6b57c-d6f6-417b-8ae3-e1d12c69179c"],
Cell[CellGroupData[{
Cell[111590, 2393, 205, 3, 31, "Input",ExpressionUUID->"389486d6-414d-462e-b63b-eab1e745cfab"],
Cell[111798, 2398, 206, 4, 35, "Output",ExpressionUUID->"ca9311eb-7a23-4af0-bd60-6554b0264b1d"]
}, Open  ]],
Cell[112019, 2405, 428, 11, 31, "Input",ExpressionUUID->"7a909f00-e43c-44b9-be42-26b5ceefed12"],
Cell[CellGroupData[{
Cell[112472, 2420, 206, 3, 31, "Input",ExpressionUUID->"a05208cc-48d7-4ee8-b07e-a7a03bc5d7e5"],
Cell[112681, 2425, 10197, 300, 266, "Output",ExpressionUUID->"d6791659-2af7-451b-96c5-6478bfa74798"]
}, Open  ]],
Cell[122893, 2728, 762, 21, 55, "Input",ExpressionUUID->"7ecab9cf-c210-4c07-9ec0-a06090f60a4f"],
Cell[CellGroupData[{
Cell[123680, 2753, 137, 2, 31, "Input",ExpressionUUID->"c4ff8931-cdfa-4619-b4ae-9383100ce11b"],
Cell[123820, 2757, 5132, 99, 248, "Output",ExpressionUUID->"fe2689c2-b4fc-4821-9e4b-dfdda3cadbf0"]
}, Open  ]],
Cell[128967, 2859, 175, 2, 31, "Input",ExpressionUUID->"fc4c145d-7aec-4c7a-b7da-150017e70c8b"],
Cell[CellGroupData[{
Cell[129167, 2865, 205, 3, 31, "Input",ExpressionUUID->"bb21dfb6-916d-4edb-94e1-3756b652eb62"],
Cell[129375, 2870, 5084, 99, 248, "Output",ExpressionUUID->"eeb2ea65-5e23-4b64-a202-7cc95b057ff6"]
}, Open  ]]
}
]
*)

